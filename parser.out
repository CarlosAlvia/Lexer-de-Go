Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CHAN
    COMMENT
    CONST
    CONTINUE
    DEFER
    ELSE
    FALLTHROUGH
    GO
    GOTO
    IF
    ILLEGAL
    IMPORT
    INTERFACE
    NOT
    PACKAGE
    RANGE
    RETURN
    SELECT
    STRUCT
    TYPE

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> asignacion
Rule 2     codigo -> sentenciaSwitch
Rule 3     codigo -> funcion
Rule 4     codigo -> funcionSinArg
Rule 5     codigo -> funcionAnonima
Rule 6     codigo -> imprimir
Rule 7     codigo -> mapa
Rule 8     codigo -> array
Rule 9     codigo -> solicitudDatos
Rule 10    codigo -> slice
Rule 11    codigo -> for
Rule 12    codigo -> expresionAritmetica
Rule 13    funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
Rule 14    argumentos -> argumento
Rule 15    argumentos -> argumentoVariadico
Rule 16    argumentos -> argumento COMMA argumentos
Rule 17    argumentos -> argumentoVariadico COMMA argumentos
Rule 18    argumento -> ID tipoDato
Rule 19    argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato
Rule 20    funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE
Rule 21    funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
Rule 22    funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
Rule 23    subcodigo -> asignacionCorta
Rule 24    subcodigo -> asignacion
Rule 25    subcodigo -> imprimir
Rule 26    subcodigo -> solicitudDatos
Rule 27    sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 28    sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 29    sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
Rule 30    bloqueCasosBooleanos -> casoBooleano
Rule 31    bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos
Rule 32    casoBooleano -> CASE condiciones DOSPUNTOS subcodigo
Rule 33    casoBooleano -> CASE ID DOSPUNTOS subcodigo
Rule 34    casoDefault -> DEFAULT DOSPUNTOS subcodigo
Rule 35    casoDefault -> empty
Rule 36    bloqueCasosSwitch -> casoSwitch
Rule 37    bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch
Rule 38    casoSwitch -> CASE valores DOSPUNTOS subcodigo
Rule 39    for -> FOR asignacionCorta SEMICOLON condiciones SEMICOLON autooperacion LBRACE subcodigo RBRACE
Rule 40    for -> FOR condiciones LBRACE subcodigo RBRACE
Rule 41    for -> FOR LBRACE subcodigo RBRACE
Rule 42    estructurasDeDatos -> mapa
Rule 43    estructurasDeDatos -> array
Rule 44    estructurasDeDatos -> slice
Rule 45    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
Rule 46    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato
Rule 47    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
Rule 48    elementosMapa -> elementoMapa
Rule 49    elementosMapa -> elementoMapa elementosMapa
Rule 50    elementoMapa -> valor DOSPUNTOS valor COMMA
Rule 51    array -> LBRACKET INT RBRACKET tipoDato
Rule 52    array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
Rule 53    array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
Rule 54    elementosArray -> valor
Rule 55    elementosArray -> valor COMMA elementosArray
Rule 56    slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET
Rule 57    slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE
Rule 58    asignacion -> VAR ID tipoDato ASSIGN valor
Rule 59    asignacion -> VAR ID ASSIGN valor
Rule 60    asignacionCorta -> ID DOSPUNTOS ASSIGN valor
Rule 61    autoincremento -> ID PLUS PLUS
Rule 62    autodecremento -> ID MINUS MINUS
Rule 63    autooperacion -> autoincremento
Rule 64    autooperacion -> autodecremento
Rule 65    tipoDato -> FLOAT64_TYPE
Rule 66    tipoDato -> COMPLEX64_TYPE
Rule 67    tipoDato -> INT_TYPE
Rule 68    tipoDato -> BOOL_TYPE
Rule 69    tipoDato -> STRING_TYPE
Rule 70    valores -> valor
Rule 71    valores -> valor COMMA valores
Rule 72    valor -> FLOAT64
Rule 73    valor -> COMPLEX64
Rule 74    valor -> INT
Rule 75    valor -> BOOL
Rule 76    valor -> STRING
Rule 77    valor -> expresionesAritmeticas
Rule 78    valor -> condiciones
Rule 79    valor -> ID
Rule 80    valor -> estructurasDeDatos
Rule 81    expresionesAritmeticas -> expresionAritmetica
Rule 82    expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas
Rule 83    expresionAritmetica -> valor operador valor
Rule 84    expresionAritmetica -> LPAREN valor operador valor RPAREN
Rule 85    operador -> PLUS
Rule 86    operador -> MINUS
Rule 87    operador -> TIMES
Rule 88    operador -> DIVIDE
Rule 89    operador -> MOD
Rule 90    condiciones -> condicion
Rule 91    condiciones -> condicion conector condiciones
Rule 92    conector -> AND
Rule 93    conector -> OR
Rule 94    condicion -> valor operadorComp valor
Rule 95    condicion -> BOOL
Rule 96    operadorComp -> NOT_EQUAL
Rule 97    operadorComp -> LESS_THAN
Rule 98    operadorComp -> LESS_EQUAL
Rule 99    operadorComp -> GREATER_THAN
Rule 100   operadorComp -> GREATER_EQUAL
Rule 101   operadorComp -> EQUAL
Rule 102   empty -> <empty>
Rule 103   imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN
Rule 104   imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN
Rule 105   solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

Terminals, with rules where they appear

AND                  : 92
ASSIGN               : 58 59 60
BOOL                 : 75 95
BOOL_TYPE            : 68
BREAK                : 
CASE                 : 32 33 38
CHAN                 : 
COMMA                : 16 17 50 55 71
COMMENT              : 
COMPLEX64            : 73
COMPLEX64_TYPE       : 66
CONST                : 
CONTINUE             : 
DEFAULT              : 34
DEFER                : 
DIVIDE               : 88
DOSPUNTOS            : 32 33 34 38 50 56 60
ELSE                 : 
EQUAL                : 101
FALLTHROUGH          : 
FLOAT64              : 72
FLOAT64_TYPE         : 65
FMT                  : 103 104 105
FOR                  : 39 40 41
FUNC                 : 13 20 21 22
GO                   : 
GOTO                 : 
GREATER_EQUAL        : 100
GREATER_THAN         : 99
ID                   : 13 18 19 20 27 28 33 56 58 59 60 61 62 79 105
IF                   : 
ILLEGAL              : 
IMPORT               : 
INT                  : 51 52 53 74
INTERFACE            : 
INT_TYPE             : 67
LBRACE               : 13 20 21 22 27 28 29 39 40 41 45 47 52 53 57
LBRACKET             : 45 46 47 51 52 53 56 57
LESS_EQUAL           : 98
LESS_THAN            : 97
LPAREN               : 13 20 21 21 22 22 84 103 104 105
MAP                  : 45 46 47
MINUS                : 62 62 86
MOD                  : 89
NOT                  : 
NOT_EQUAL            : 96
OR                   : 93
PACKAGE              : 
PLUS                 : 61 61 85
POINTER              : 105
PRINT_LN             : 103 104
PUNTO                : 19 19 19 103 104 105
RANGE                : 
RBRACE               : 13 20 21 22 27 28 29 39 40 41 45 47 52 53 57
RBRACKET             : 45 46 47 51 52 53 56 57
RETURN               : 
RPAREN               : 13 20 21 21 22 22 84 103 104 105
SCANLN               : 105
SELECT               : 
SEMICOLON            : 28 39 39
STRING               : 76
STRING_TYPE          : 69
STRUCT               : 
SWITCH               : 27 28 29
TIMES                : 87
TYPE                 : 
VAR                  : 58 59
error                : 

Nonterminals, with rules where they appear

argumento            : 14 16
argumentoVariadico   : 15 17
argumentos           : 13 16 17 22
array                : 8 43
asignacion           : 1 24
asignacionCorta      : 23 28 39
autodecremento       : 64
autoincremento       : 63
autooperacion        : 39
bloqueCasosBooleanos : 29 31
bloqueCasosSwitch    : 27 28 37
casoBooleano         : 30 31
casoDefault          : 27 28 29
casoSwitch           : 36 37
codigo               : 0
condicion            : 90 91
condiciones          : 32 39 40 78 91
conector             : 91
elementoMapa         : 48 49
elementosArray       : 53 55
elementosMapa        : 47 49
empty                : 35
estructurasDeDatos   : 80
expresionAritmetica  : 12 81 82
expresionesAritmeticas : 77 82
for                  : 11
funcion              : 3
funcionAnonima       : 5
funcionSinArg        : 4
imprimir             : 6 25
mapa                 : 7 42
operador             : 82 83 84
operadorComp         : 94
sentenciaSwitch      : 2
slice                : 10 44
solicitudDatos       : 9 26
subcodigo            : 13 20 21 22 32 33 34 38 39 40 41
tipoDato             : 18 19 45 45 46 46 47 47 51 52 53 57 58
valor                : 50 50 54 55 56 56 58 59 60 70 71 83 83 84 84 94 94
valores              : 38 57 71 103

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . asignacion
    (2) codigo -> . sentenciaSwitch
    (3) codigo -> . funcion
    (4) codigo -> . funcionSinArg
    (5) codigo -> . funcionAnonima
    (6) codigo -> . imprimir
    (7) codigo -> . mapa
    (8) codigo -> . array
    (9) codigo -> . solicitudDatos
    (10) codigo -> . slice
    (11) codigo -> . for
    (12) codigo -> . expresionAritmetica
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (27) sentenciaSwitch -> . SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (28) sentenciaSwitch -> . SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (29) sentenciaSwitch -> . SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (13) funcion -> . FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (20) funcionSinArg -> . FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE
    (21) funcionAnonima -> . FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (22) funcionAnonima -> . FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE
    (39) for -> . FOR asignacionCorta SEMICOLON condiciones SEMICOLON autooperacion LBRACE subcodigo RBRACE
    (40) for -> . FOR condiciones LBRACE subcodigo RBRACE
    (41) for -> . FOR LBRACE subcodigo RBRACE
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL

    VAR             shift and go to state 14
    SWITCH          shift and go to state 17
    FUNC            shift and go to state 18
    FMT             shift and go to state 20
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22
    ID              shift and go to state 15
    FOR             shift and go to state 24
    LPAREN          shift and go to state 19
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29

    codigo                         shift and go to state 1
    asignacion                     shift and go to state 2
    sentenciaSwitch                shift and go to state 3
    funcion                        shift and go to state 4
    funcionSinArg                  shift and go to state 5
    funcionAnonima                 shift and go to state 6
    imprimir                       shift and go to state 7
    mapa                           shift and go to state 8
    array                          shift and go to state 9
    solicitudDatos                 shift and go to state 10
    slice                          shift and go to state 11
    for                            shift and go to state 12
    expresionAritmetica            shift and go to state 13
    valor                          shift and go to state 16
    condiciones                    shift and go to state 25
    expresionesAritmeticas         shift and go to state 30
    estructurasDeDatos             shift and go to state 31
    condicion                      shift and go to state 32

state 1

    (0) S' -> codigo .



state 2

    (1) codigo -> asignacion .

    $end            reduce using rule 1 (codigo -> asignacion .)


state 3

    (2) codigo -> sentenciaSwitch .

    $end            reduce using rule 2 (codigo -> sentenciaSwitch .)


state 4

    (3) codigo -> funcion .

    $end            reduce using rule 3 (codigo -> funcion .)


state 5

    (4) codigo -> funcionSinArg .

    $end            reduce using rule 4 (codigo -> funcionSinArg .)


state 6

    (5) codigo -> funcionAnonima .

    $end            reduce using rule 5 (codigo -> funcionAnonima .)


state 7

    (6) codigo -> imprimir .

    $end            reduce using rule 6 (codigo -> imprimir .)


state 8

    (7) codigo -> mapa .
    (42) estructurasDeDatos -> mapa .

    $end            reduce using rule 7 (codigo -> mapa .)
    PLUS            reduce using rule 42 (estructurasDeDatos -> mapa .)
    MINUS           reduce using rule 42 (estructurasDeDatos -> mapa .)
    TIMES           reduce using rule 42 (estructurasDeDatos -> mapa .)
    DIVIDE          reduce using rule 42 (estructurasDeDatos -> mapa .)
    MOD             reduce using rule 42 (estructurasDeDatos -> mapa .)
    NOT_EQUAL       reduce using rule 42 (estructurasDeDatos -> mapa .)
    LESS_THAN       reduce using rule 42 (estructurasDeDatos -> mapa .)
    LESS_EQUAL      reduce using rule 42 (estructurasDeDatos -> mapa .)
    GREATER_THAN    reduce using rule 42 (estructurasDeDatos -> mapa .)
    GREATER_EQUAL   reduce using rule 42 (estructurasDeDatos -> mapa .)
    EQUAL           reduce using rule 42 (estructurasDeDatos -> mapa .)


state 9

    (8) codigo -> array .
    (43) estructurasDeDatos -> array .

    $end            reduce using rule 8 (codigo -> array .)
    PLUS            reduce using rule 43 (estructurasDeDatos -> array .)
    MINUS           reduce using rule 43 (estructurasDeDatos -> array .)
    TIMES           reduce using rule 43 (estructurasDeDatos -> array .)
    DIVIDE          reduce using rule 43 (estructurasDeDatos -> array .)
    MOD             reduce using rule 43 (estructurasDeDatos -> array .)
    NOT_EQUAL       reduce using rule 43 (estructurasDeDatos -> array .)
    LESS_THAN       reduce using rule 43 (estructurasDeDatos -> array .)
    LESS_EQUAL      reduce using rule 43 (estructurasDeDatos -> array .)
    GREATER_THAN    reduce using rule 43 (estructurasDeDatos -> array .)
    GREATER_EQUAL   reduce using rule 43 (estructurasDeDatos -> array .)
    EQUAL           reduce using rule 43 (estructurasDeDatos -> array .)


state 10

    (9) codigo -> solicitudDatos .

    $end            reduce using rule 9 (codigo -> solicitudDatos .)


state 11

    (10) codigo -> slice .
    (44) estructurasDeDatos -> slice .

    $end            reduce using rule 10 (codigo -> slice .)
    PLUS            reduce using rule 44 (estructurasDeDatos -> slice .)
    MINUS           reduce using rule 44 (estructurasDeDatos -> slice .)
    TIMES           reduce using rule 44 (estructurasDeDatos -> slice .)
    DIVIDE          reduce using rule 44 (estructurasDeDatos -> slice .)
    MOD             reduce using rule 44 (estructurasDeDatos -> slice .)
    NOT_EQUAL       reduce using rule 44 (estructurasDeDatos -> slice .)
    LESS_THAN       reduce using rule 44 (estructurasDeDatos -> slice .)
    LESS_EQUAL      reduce using rule 44 (estructurasDeDatos -> slice .)
    GREATER_THAN    reduce using rule 44 (estructurasDeDatos -> slice .)
    GREATER_EQUAL   reduce using rule 44 (estructurasDeDatos -> slice .)
    EQUAL           reduce using rule 44 (estructurasDeDatos -> slice .)


state 12

    (11) codigo -> for .

    $end            reduce using rule 11 (codigo -> for .)


state 13

    (12) codigo -> expresionAritmetica .
    (81) expresionesAritmeticas -> expresionAritmetica .
    (82) expresionesAritmeticas -> expresionAritmetica . operador expresionesAritmeticas
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    $end            reduce using rule 12 (codigo -> expresionAritmetica .)
    NOT_EQUAL       reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_THAN       reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_EQUAL      reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_THAN    reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_EQUAL   reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    EQUAL           reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38

  ! PLUS            [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MINUS           [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! TIMES           [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! DIVIDE          [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MOD             [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]

    operador                       shift and go to state 33

state 14

    (58) asignacion -> VAR . ID tipoDato ASSIGN valor
    (59) asignacion -> VAR . ID ASSIGN valor

    ID              shift and go to state 39


state 15

    (56) slice -> ID . LBRACKET valor DOSPUNTOS valor RBRACKET
    (79) valor -> ID .

    LBRACKET        shift and go to state 40
    PLUS            reduce using rule 79 (valor -> ID .)
    MINUS           reduce using rule 79 (valor -> ID .)
    TIMES           reduce using rule 79 (valor -> ID .)
    DIVIDE          reduce using rule 79 (valor -> ID .)
    MOD             reduce using rule 79 (valor -> ID .)
    NOT_EQUAL       reduce using rule 79 (valor -> ID .)
    LESS_THAN       reduce using rule 79 (valor -> ID .)
    LESS_EQUAL      reduce using rule 79 (valor -> ID .)
    GREATER_THAN    reduce using rule 79 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 79 (valor -> ID .)
    EQUAL           reduce using rule 79 (valor -> ID .)


state 16

    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 17

    (27) sentenciaSwitch -> SWITCH . ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (28) sentenciaSwitch -> SWITCH . asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (29) sentenciaSwitch -> SWITCH . LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor

    ID              shift and go to state 49
    LBRACE          shift and go to state 50

    asignacionCorta                shift and go to state 51

state 18

    (13) funcion -> FUNC . ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (20) funcionSinArg -> FUNC . ID LPAREN RPAREN LBRACE subcodigo RBRACE
    (21) funcionAnonima -> FUNC . LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (22) funcionAnonima -> FUNC . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN

    ID              shift and go to state 52
    LPAREN          shift and go to state 53


state 19

    (84) expresionAritmetica -> LPAREN . valor operador valor RPAREN
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 54
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 20

    (103) imprimir -> FMT . PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> FMT . PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> FMT . PUNTO SCANLN LPAREN POINTER ID RPAREN

    PUNTO           shift and go to state 60


state 21

    (45) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LBRACKET        shift and go to state 61


state 22

    (51) array -> LBRACKET . INT RBRACKET tipoDato
    (52) array -> LBRACKET . INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> LBRACKET . INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (57) slice -> LBRACKET . RBRACKET tipoDato LBRACE valores RBRACE

    INT             shift and go to state 62
    RBRACKET        shift and go to state 63


state 23

    (74) valor -> INT .

    PLUS            reduce using rule 74 (valor -> INT .)
    MINUS           reduce using rule 74 (valor -> INT .)
    TIMES           reduce using rule 74 (valor -> INT .)
    DIVIDE          reduce using rule 74 (valor -> INT .)
    MOD             reduce using rule 74 (valor -> INT .)
    NOT_EQUAL       reduce using rule 74 (valor -> INT .)
    LESS_THAN       reduce using rule 74 (valor -> INT .)
    LESS_EQUAL      reduce using rule 74 (valor -> INT .)
    GREATER_THAN    reduce using rule 74 (valor -> INT .)
    GREATER_EQUAL   reduce using rule 74 (valor -> INT .)
    EQUAL           reduce using rule 74 (valor -> INT .)
    DOSPUNTOS       reduce using rule 74 (valor -> INT .)
    $end            reduce using rule 74 (valor -> INT .)
    AND             reduce using rule 74 (valor -> INT .)
    OR              reduce using rule 74 (valor -> INT .)
    LBRACE          reduce using rule 74 (valor -> INT .)
    RBRACE          reduce using rule 74 (valor -> INT .)
    CASE            reduce using rule 74 (valor -> INT .)
    DEFAULT         reduce using rule 74 (valor -> INT .)
    RPAREN          reduce using rule 74 (valor -> INT .)
    SEMICOLON       reduce using rule 74 (valor -> INT .)
    RBRACKET        reduce using rule 74 (valor -> INT .)
    COMMA           reduce using rule 74 (valor -> INT .)


state 24

    (39) for -> FOR . asignacionCorta SEMICOLON condiciones SEMICOLON autooperacion LBRACE subcodigo RBRACE
    (40) for -> FOR . condiciones LBRACE subcodigo RBRACE
    (41) for -> FOR . LBRACE subcodigo RBRACE
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    LBRACE          shift and go to state 66
    ID              shift and go to state 67
    BOOL            shift and go to state 69
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    STRING          shift and go to state 29
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    asignacionCorta                shift and go to state 64
    condiciones                    shift and go to state 65
    valor                          shift and go to state 68
    condicion                      shift and go to state 32
    expresionesAritmeticas         shift and go to state 30
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 25

    (78) valor -> condiciones .

    PLUS            reduce using rule 78 (valor -> condiciones .)
    MINUS           reduce using rule 78 (valor -> condiciones .)
    TIMES           reduce using rule 78 (valor -> condiciones .)
    DIVIDE          reduce using rule 78 (valor -> condiciones .)
    MOD             reduce using rule 78 (valor -> condiciones .)
    NOT_EQUAL       reduce using rule 78 (valor -> condiciones .)
    LESS_THAN       reduce using rule 78 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 78 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 78 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 78 (valor -> condiciones .)
    EQUAL           reduce using rule 78 (valor -> condiciones .)
    DOSPUNTOS       reduce using rule 78 (valor -> condiciones .)
    $end            reduce using rule 78 (valor -> condiciones .)
    AND             reduce using rule 78 (valor -> condiciones .)
    OR              reduce using rule 78 (valor -> condiciones .)
    LBRACE          reduce using rule 78 (valor -> condiciones .)
    RBRACE          reduce using rule 78 (valor -> condiciones .)
    CASE            reduce using rule 78 (valor -> condiciones .)
    DEFAULT         reduce using rule 78 (valor -> condiciones .)
    RPAREN          reduce using rule 78 (valor -> condiciones .)
    SEMICOLON       reduce using rule 78 (valor -> condiciones .)
    RBRACKET        reduce using rule 78 (valor -> condiciones .)
    COMMA           reduce using rule 78 (valor -> condiciones .)


state 26

    (72) valor -> FLOAT64 .

    PLUS            reduce using rule 72 (valor -> FLOAT64 .)
    MINUS           reduce using rule 72 (valor -> FLOAT64 .)
    TIMES           reduce using rule 72 (valor -> FLOAT64 .)
    DIVIDE          reduce using rule 72 (valor -> FLOAT64 .)
    MOD             reduce using rule 72 (valor -> FLOAT64 .)
    NOT_EQUAL       reduce using rule 72 (valor -> FLOAT64 .)
    LESS_THAN       reduce using rule 72 (valor -> FLOAT64 .)
    LESS_EQUAL      reduce using rule 72 (valor -> FLOAT64 .)
    GREATER_THAN    reduce using rule 72 (valor -> FLOAT64 .)
    GREATER_EQUAL   reduce using rule 72 (valor -> FLOAT64 .)
    EQUAL           reduce using rule 72 (valor -> FLOAT64 .)
    DOSPUNTOS       reduce using rule 72 (valor -> FLOAT64 .)
    $end            reduce using rule 72 (valor -> FLOAT64 .)
    AND             reduce using rule 72 (valor -> FLOAT64 .)
    OR              reduce using rule 72 (valor -> FLOAT64 .)
    LBRACE          reduce using rule 72 (valor -> FLOAT64 .)
    RBRACE          reduce using rule 72 (valor -> FLOAT64 .)
    CASE            reduce using rule 72 (valor -> FLOAT64 .)
    DEFAULT         reduce using rule 72 (valor -> FLOAT64 .)
    RPAREN          reduce using rule 72 (valor -> FLOAT64 .)
    SEMICOLON       reduce using rule 72 (valor -> FLOAT64 .)
    RBRACKET        reduce using rule 72 (valor -> FLOAT64 .)
    COMMA           reduce using rule 72 (valor -> FLOAT64 .)


state 27

    (73) valor -> COMPLEX64 .

    PLUS            reduce using rule 73 (valor -> COMPLEX64 .)
    MINUS           reduce using rule 73 (valor -> COMPLEX64 .)
    TIMES           reduce using rule 73 (valor -> COMPLEX64 .)
    DIVIDE          reduce using rule 73 (valor -> COMPLEX64 .)
    MOD             reduce using rule 73 (valor -> COMPLEX64 .)
    NOT_EQUAL       reduce using rule 73 (valor -> COMPLEX64 .)
    LESS_THAN       reduce using rule 73 (valor -> COMPLEX64 .)
    LESS_EQUAL      reduce using rule 73 (valor -> COMPLEX64 .)
    GREATER_THAN    reduce using rule 73 (valor -> COMPLEX64 .)
    GREATER_EQUAL   reduce using rule 73 (valor -> COMPLEX64 .)
    EQUAL           reduce using rule 73 (valor -> COMPLEX64 .)
    DOSPUNTOS       reduce using rule 73 (valor -> COMPLEX64 .)
    $end            reduce using rule 73 (valor -> COMPLEX64 .)
    AND             reduce using rule 73 (valor -> COMPLEX64 .)
    OR              reduce using rule 73 (valor -> COMPLEX64 .)
    LBRACE          reduce using rule 73 (valor -> COMPLEX64 .)
    RBRACE          reduce using rule 73 (valor -> COMPLEX64 .)
    CASE            reduce using rule 73 (valor -> COMPLEX64 .)
    DEFAULT         reduce using rule 73 (valor -> COMPLEX64 .)
    RPAREN          reduce using rule 73 (valor -> COMPLEX64 .)
    SEMICOLON       reduce using rule 73 (valor -> COMPLEX64 .)
    RBRACKET        reduce using rule 73 (valor -> COMPLEX64 .)
    COMMA           reduce using rule 73 (valor -> COMPLEX64 .)


state 28

    (75) valor -> BOOL .
    (95) condicion -> BOOL .

  ! reduce/reduce conflict for AND resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for OR resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for EQUAL resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for $end resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for LBRACE resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for RBRACE resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for CASE resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for RPAREN resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for COMMA resolved using rule 75 (valor -> BOOL .)
    PLUS            reduce using rule 75 (valor -> BOOL .)
    MINUS           reduce using rule 75 (valor -> BOOL .)
    TIMES           reduce using rule 75 (valor -> BOOL .)
    DIVIDE          reduce using rule 75 (valor -> BOOL .)
    MOD             reduce using rule 75 (valor -> BOOL .)
    NOT_EQUAL       reduce using rule 75 (valor -> BOOL .)
    LESS_THAN       reduce using rule 75 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 75 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 75 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 75 (valor -> BOOL .)
    EQUAL           reduce using rule 75 (valor -> BOOL .)
    DOSPUNTOS       reduce using rule 75 (valor -> BOOL .)
    $end            reduce using rule 75 (valor -> BOOL .)
    AND             reduce using rule 75 (valor -> BOOL .)
    OR              reduce using rule 75 (valor -> BOOL .)
    LBRACE          reduce using rule 75 (valor -> BOOL .)
    RBRACE          reduce using rule 75 (valor -> BOOL .)
    CASE            reduce using rule 75 (valor -> BOOL .)
    DEFAULT         reduce using rule 75 (valor -> BOOL .)
    RPAREN          reduce using rule 75 (valor -> BOOL .)
    SEMICOLON       reduce using rule 75 (valor -> BOOL .)
    RBRACKET        reduce using rule 75 (valor -> BOOL .)
    COMMA           reduce using rule 75 (valor -> BOOL .)

  ! AND             [ reduce using rule 95 (condicion -> BOOL .) ]
  ! OR              [ reduce using rule 95 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 95 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 95 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 95 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 95 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 95 (condicion -> BOOL .) ]
  ! NOT_EQUAL       [ reduce using rule 95 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 95 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 95 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 95 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 95 (condicion -> BOOL .) ]
  ! EQUAL           [ reduce using rule 95 (condicion -> BOOL .) ]
  ! DOSPUNTOS       [ reduce using rule 95 (condicion -> BOOL .) ]
  ! $end            [ reduce using rule 95 (condicion -> BOOL .) ]
  ! LBRACE          [ reduce using rule 95 (condicion -> BOOL .) ]
  ! RBRACE          [ reduce using rule 95 (condicion -> BOOL .) ]
  ! CASE            [ reduce using rule 95 (condicion -> BOOL .) ]
  ! DEFAULT         [ reduce using rule 95 (condicion -> BOOL .) ]
  ! RPAREN          [ reduce using rule 95 (condicion -> BOOL .) ]
  ! SEMICOLON       [ reduce using rule 95 (condicion -> BOOL .) ]
  ! RBRACKET        [ reduce using rule 95 (condicion -> BOOL .) ]
  ! COMMA           [ reduce using rule 95 (condicion -> BOOL .) ]


state 29

    (76) valor -> STRING .

    PLUS            reduce using rule 76 (valor -> STRING .)
    MINUS           reduce using rule 76 (valor -> STRING .)
    TIMES           reduce using rule 76 (valor -> STRING .)
    DIVIDE          reduce using rule 76 (valor -> STRING .)
    MOD             reduce using rule 76 (valor -> STRING .)
    NOT_EQUAL       reduce using rule 76 (valor -> STRING .)
    LESS_THAN       reduce using rule 76 (valor -> STRING .)
    LESS_EQUAL      reduce using rule 76 (valor -> STRING .)
    GREATER_THAN    reduce using rule 76 (valor -> STRING .)
    GREATER_EQUAL   reduce using rule 76 (valor -> STRING .)
    EQUAL           reduce using rule 76 (valor -> STRING .)
    DOSPUNTOS       reduce using rule 76 (valor -> STRING .)
    $end            reduce using rule 76 (valor -> STRING .)
    AND             reduce using rule 76 (valor -> STRING .)
    OR              reduce using rule 76 (valor -> STRING .)
    LBRACE          reduce using rule 76 (valor -> STRING .)
    RBRACE          reduce using rule 76 (valor -> STRING .)
    CASE            reduce using rule 76 (valor -> STRING .)
    DEFAULT         reduce using rule 76 (valor -> STRING .)
    RPAREN          reduce using rule 76 (valor -> STRING .)
    SEMICOLON       reduce using rule 76 (valor -> STRING .)
    RBRACKET        reduce using rule 76 (valor -> STRING .)
    COMMA           reduce using rule 76 (valor -> STRING .)


state 30

    (77) valor -> expresionesAritmeticas .

    PLUS            reduce using rule 77 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 77 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 77 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 77 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 77 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 77 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 77 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 77 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 77 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 77 (valor -> expresionesAritmeticas .)
    EQUAL           reduce using rule 77 (valor -> expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 77 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 77 (valor -> expresionesAritmeticas .)
    AND             reduce using rule 77 (valor -> expresionesAritmeticas .)
    OR              reduce using rule 77 (valor -> expresionesAritmeticas .)
    LBRACE          reduce using rule 77 (valor -> expresionesAritmeticas .)
    RBRACE          reduce using rule 77 (valor -> expresionesAritmeticas .)
    CASE            reduce using rule 77 (valor -> expresionesAritmeticas .)
    DEFAULT         reduce using rule 77 (valor -> expresionesAritmeticas .)
    RPAREN          reduce using rule 77 (valor -> expresionesAritmeticas .)
    SEMICOLON       reduce using rule 77 (valor -> expresionesAritmeticas .)
    RBRACKET        reduce using rule 77 (valor -> expresionesAritmeticas .)
    COMMA           reduce using rule 77 (valor -> expresionesAritmeticas .)


state 31

    (80) valor -> estructurasDeDatos .

    PLUS            reduce using rule 80 (valor -> estructurasDeDatos .)
    MINUS           reduce using rule 80 (valor -> estructurasDeDatos .)
    TIMES           reduce using rule 80 (valor -> estructurasDeDatos .)
    DIVIDE          reduce using rule 80 (valor -> estructurasDeDatos .)
    MOD             reduce using rule 80 (valor -> estructurasDeDatos .)
    NOT_EQUAL       reduce using rule 80 (valor -> estructurasDeDatos .)
    LESS_THAN       reduce using rule 80 (valor -> estructurasDeDatos .)
    LESS_EQUAL      reduce using rule 80 (valor -> estructurasDeDatos .)
    GREATER_THAN    reduce using rule 80 (valor -> estructurasDeDatos .)
    GREATER_EQUAL   reduce using rule 80 (valor -> estructurasDeDatos .)
    EQUAL           reduce using rule 80 (valor -> estructurasDeDatos .)
    DOSPUNTOS       reduce using rule 80 (valor -> estructurasDeDatos .)
    $end            reduce using rule 80 (valor -> estructurasDeDatos .)
    AND             reduce using rule 80 (valor -> estructurasDeDatos .)
    OR              reduce using rule 80 (valor -> estructurasDeDatos .)
    LBRACE          reduce using rule 80 (valor -> estructurasDeDatos .)
    RBRACE          reduce using rule 80 (valor -> estructurasDeDatos .)
    CASE            reduce using rule 80 (valor -> estructurasDeDatos .)
    DEFAULT         reduce using rule 80 (valor -> estructurasDeDatos .)
    RPAREN          reduce using rule 80 (valor -> estructurasDeDatos .)
    SEMICOLON       reduce using rule 80 (valor -> estructurasDeDatos .)
    RBRACKET        reduce using rule 80 (valor -> estructurasDeDatos .)
    COMMA           reduce using rule 80 (valor -> estructurasDeDatos .)


state 32

    (90) condiciones -> condicion .
    (91) condiciones -> condicion . conector condiciones
    (92) conector -> . AND
    (93) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PLUS            reduce using rule 90 (condiciones -> condicion .)
    MINUS           reduce using rule 90 (condiciones -> condicion .)
    TIMES           reduce using rule 90 (condiciones -> condicion .)
    DIVIDE          reduce using rule 90 (condiciones -> condicion .)
    MOD             reduce using rule 90 (condiciones -> condicion .)
    NOT_EQUAL       reduce using rule 90 (condiciones -> condicion .)
    LESS_THAN       reduce using rule 90 (condiciones -> condicion .)
    LESS_EQUAL      reduce using rule 90 (condiciones -> condicion .)
    GREATER_THAN    reduce using rule 90 (condiciones -> condicion .)
    GREATER_EQUAL   reduce using rule 90 (condiciones -> condicion .)
    EQUAL           reduce using rule 90 (condiciones -> condicion .)
    LBRACE          reduce using rule 90 (condiciones -> condicion .)
    DOSPUNTOS       reduce using rule 90 (condiciones -> condicion .)
    $end            reduce using rule 90 (condiciones -> condicion .)
    RBRACE          reduce using rule 90 (condiciones -> condicion .)
    CASE            reduce using rule 90 (condiciones -> condicion .)
    DEFAULT         reduce using rule 90 (condiciones -> condicion .)
    RPAREN          reduce using rule 90 (condiciones -> condicion .)
    SEMICOLON       reduce using rule 90 (condiciones -> condicion .)
    RBRACKET        reduce using rule 90 (condiciones -> condicion .)
    COMMA           reduce using rule 90 (condiciones -> condicion .)
    AND             shift and go to state 71
    OR              shift and go to state 72

  ! AND             [ reduce using rule 90 (condiciones -> condicion .) ]
  ! OR              [ reduce using rule 90 (condiciones -> condicion .) ]

    conector                       shift and go to state 70

state 33

    (82) expresionesAritmeticas -> expresionAritmetica operador . expresionesAritmeticas
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    LPAREN          shift and go to state 19
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    expresionAritmetica            shift and go to state 56
    expresionesAritmeticas         shift and go to state 73
    valor                          shift and go to state 16
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 34

    (85) operador -> PLUS .

    LPAREN          reduce using rule 85 (operador -> PLUS .)
    FLOAT64         reduce using rule 85 (operador -> PLUS .)
    COMPLEX64       reduce using rule 85 (operador -> PLUS .)
    INT             reduce using rule 85 (operador -> PLUS .)
    BOOL            reduce using rule 85 (operador -> PLUS .)
    STRING          reduce using rule 85 (operador -> PLUS .)
    ID              reduce using rule 85 (operador -> PLUS .)
    MAP             reduce using rule 85 (operador -> PLUS .)
    LBRACKET        reduce using rule 85 (operador -> PLUS .)


state 35

    (86) operador -> MINUS .

    LPAREN          reduce using rule 86 (operador -> MINUS .)
    FLOAT64         reduce using rule 86 (operador -> MINUS .)
    COMPLEX64       reduce using rule 86 (operador -> MINUS .)
    INT             reduce using rule 86 (operador -> MINUS .)
    BOOL            reduce using rule 86 (operador -> MINUS .)
    STRING          reduce using rule 86 (operador -> MINUS .)
    ID              reduce using rule 86 (operador -> MINUS .)
    MAP             reduce using rule 86 (operador -> MINUS .)
    LBRACKET        reduce using rule 86 (operador -> MINUS .)


state 36

    (87) operador -> TIMES .

    LPAREN          reduce using rule 87 (operador -> TIMES .)
    FLOAT64         reduce using rule 87 (operador -> TIMES .)
    COMPLEX64       reduce using rule 87 (operador -> TIMES .)
    INT             reduce using rule 87 (operador -> TIMES .)
    BOOL            reduce using rule 87 (operador -> TIMES .)
    STRING          reduce using rule 87 (operador -> TIMES .)
    ID              reduce using rule 87 (operador -> TIMES .)
    MAP             reduce using rule 87 (operador -> TIMES .)
    LBRACKET        reduce using rule 87 (operador -> TIMES .)


state 37

    (88) operador -> DIVIDE .

    LPAREN          reduce using rule 88 (operador -> DIVIDE .)
    FLOAT64         reduce using rule 88 (operador -> DIVIDE .)
    COMPLEX64       reduce using rule 88 (operador -> DIVIDE .)
    INT             reduce using rule 88 (operador -> DIVIDE .)
    BOOL            reduce using rule 88 (operador -> DIVIDE .)
    STRING          reduce using rule 88 (operador -> DIVIDE .)
    ID              reduce using rule 88 (operador -> DIVIDE .)
    MAP             reduce using rule 88 (operador -> DIVIDE .)
    LBRACKET        reduce using rule 88 (operador -> DIVIDE .)


state 38

    (89) operador -> MOD .

    LPAREN          reduce using rule 89 (operador -> MOD .)
    FLOAT64         reduce using rule 89 (operador -> MOD .)
    COMPLEX64       reduce using rule 89 (operador -> MOD .)
    INT             reduce using rule 89 (operador -> MOD .)
    BOOL            reduce using rule 89 (operador -> MOD .)
    STRING          reduce using rule 89 (operador -> MOD .)
    ID              reduce using rule 89 (operador -> MOD .)
    MAP             reduce using rule 89 (operador -> MOD .)
    LBRACKET        reduce using rule 89 (operador -> MOD .)


state 39

    (58) asignacion -> VAR ID . tipoDato ASSIGN valor
    (59) asignacion -> VAR ID . ASSIGN valor
    (65) tipoDato -> . FLOAT64_TYPE
    (66) tipoDato -> . COMPLEX64_TYPE
    (67) tipoDato -> . INT_TYPE
    (68) tipoDato -> . BOOL_TYPE
    (69) tipoDato -> . STRING_TYPE

    ASSIGN          shift and go to state 75
    FLOAT64_TYPE    shift and go to state 76
    COMPLEX64_TYPE  shift and go to state 77
    INT_TYPE        shift and go to state 78
    BOOL_TYPE       shift and go to state 79
    STRING_TYPE     shift and go to state 80

    tipoDato                       shift and go to state 74

state 40

    (56) slice -> ID LBRACKET . valor DOSPUNTOS valor RBRACKET
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 81
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 41

    (83) expresionAritmetica -> valor operador . valor
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 82
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 42

    (94) condicion -> valor operadorComp . valor
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 83
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 43

    (96) operadorComp -> NOT_EQUAL .

    FLOAT64         reduce using rule 96 (operadorComp -> NOT_EQUAL .)
    COMPLEX64       reduce using rule 96 (operadorComp -> NOT_EQUAL .)
    INT             reduce using rule 96 (operadorComp -> NOT_EQUAL .)
    BOOL            reduce using rule 96 (operadorComp -> NOT_EQUAL .)
    STRING          reduce using rule 96 (operadorComp -> NOT_EQUAL .)
    ID              reduce using rule 96 (operadorComp -> NOT_EQUAL .)
    LPAREN          reduce using rule 96 (operadorComp -> NOT_EQUAL .)
    MAP             reduce using rule 96 (operadorComp -> NOT_EQUAL .)
    LBRACKET        reduce using rule 96 (operadorComp -> NOT_EQUAL .)


state 44

    (97) operadorComp -> LESS_THAN .

    FLOAT64         reduce using rule 97 (operadorComp -> LESS_THAN .)
    COMPLEX64       reduce using rule 97 (operadorComp -> LESS_THAN .)
    INT             reduce using rule 97 (operadorComp -> LESS_THAN .)
    BOOL            reduce using rule 97 (operadorComp -> LESS_THAN .)
    STRING          reduce using rule 97 (operadorComp -> LESS_THAN .)
    ID              reduce using rule 97 (operadorComp -> LESS_THAN .)
    LPAREN          reduce using rule 97 (operadorComp -> LESS_THAN .)
    MAP             reduce using rule 97 (operadorComp -> LESS_THAN .)
    LBRACKET        reduce using rule 97 (operadorComp -> LESS_THAN .)


state 45

    (98) operadorComp -> LESS_EQUAL .

    FLOAT64         reduce using rule 98 (operadorComp -> LESS_EQUAL .)
    COMPLEX64       reduce using rule 98 (operadorComp -> LESS_EQUAL .)
    INT             reduce using rule 98 (operadorComp -> LESS_EQUAL .)
    BOOL            reduce using rule 98 (operadorComp -> LESS_EQUAL .)
    STRING          reduce using rule 98 (operadorComp -> LESS_EQUAL .)
    ID              reduce using rule 98 (operadorComp -> LESS_EQUAL .)
    LPAREN          reduce using rule 98 (operadorComp -> LESS_EQUAL .)
    MAP             reduce using rule 98 (operadorComp -> LESS_EQUAL .)
    LBRACKET        reduce using rule 98 (operadorComp -> LESS_EQUAL .)


state 46

    (99) operadorComp -> GREATER_THAN .

    FLOAT64         reduce using rule 99 (operadorComp -> GREATER_THAN .)
    COMPLEX64       reduce using rule 99 (operadorComp -> GREATER_THAN .)
    INT             reduce using rule 99 (operadorComp -> GREATER_THAN .)
    BOOL            reduce using rule 99 (operadorComp -> GREATER_THAN .)
    STRING          reduce using rule 99 (operadorComp -> GREATER_THAN .)
    ID              reduce using rule 99 (operadorComp -> GREATER_THAN .)
    LPAREN          reduce using rule 99 (operadorComp -> GREATER_THAN .)
    MAP             reduce using rule 99 (operadorComp -> GREATER_THAN .)
    LBRACKET        reduce using rule 99 (operadorComp -> GREATER_THAN .)


state 47

    (100) operadorComp -> GREATER_EQUAL .

    FLOAT64         reduce using rule 100 (operadorComp -> GREATER_EQUAL .)
    COMPLEX64       reduce using rule 100 (operadorComp -> GREATER_EQUAL .)
    INT             reduce using rule 100 (operadorComp -> GREATER_EQUAL .)
    BOOL            reduce using rule 100 (operadorComp -> GREATER_EQUAL .)
    STRING          reduce using rule 100 (operadorComp -> GREATER_EQUAL .)
    ID              reduce using rule 100 (operadorComp -> GREATER_EQUAL .)
    LPAREN          reduce using rule 100 (operadorComp -> GREATER_EQUAL .)
    MAP             reduce using rule 100 (operadorComp -> GREATER_EQUAL .)
    LBRACKET        reduce using rule 100 (operadorComp -> GREATER_EQUAL .)


state 48

    (101) operadorComp -> EQUAL .

    FLOAT64         reduce using rule 101 (operadorComp -> EQUAL .)
    COMPLEX64       reduce using rule 101 (operadorComp -> EQUAL .)
    INT             reduce using rule 101 (operadorComp -> EQUAL .)
    BOOL            reduce using rule 101 (operadorComp -> EQUAL .)
    STRING          reduce using rule 101 (operadorComp -> EQUAL .)
    ID              reduce using rule 101 (operadorComp -> EQUAL .)
    LPAREN          reduce using rule 101 (operadorComp -> EQUAL .)
    MAP             reduce using rule 101 (operadorComp -> EQUAL .)
    LBRACKET        reduce using rule 101 (operadorComp -> EQUAL .)


state 49

    (27) sentenciaSwitch -> SWITCH ID . LBRACE bloqueCasosSwitch casoDefault RBRACE
    (60) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor

    LBRACE          shift and go to state 84
    DOSPUNTOS       shift and go to state 85


state 50

    (29) sentenciaSwitch -> SWITCH LBRACE . bloqueCasosBooleanos casoDefault RBRACE
    (30) bloqueCasosBooleanos -> . casoBooleano
    (31) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (32) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (33) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    CASE            shift and go to state 88

    bloqueCasosBooleanos           shift and go to state 86
    casoBooleano                   shift and go to state 87

state 51

    (28) sentenciaSwitch -> SWITCH asignacionCorta . SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    SEMICOLON       shift and go to state 89


state 52

    (13) funcion -> FUNC ID . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (20) funcionSinArg -> FUNC ID . LPAREN RPAREN LBRACE subcodigo RBRACE

    LPAREN          shift and go to state 90


state 53

    (21) funcionAnonima -> FUNC LPAREN . RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (22) funcionAnonima -> FUNC LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (14) argumentos -> . argumento
    (15) argumentos -> . argumentoVariadico
    (16) argumentos -> . argumento COMMA argumentos
    (17) argumentos -> . argumentoVariadico COMMA argumentos
    (18) argumento -> . ID tipoDato
    (19) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    RPAREN          shift and go to state 91
    ID              shift and go to state 95

    argumentos                     shift and go to state 92
    argumento                      shift and go to state 93
    argumentoVariadico             shift and go to state 94

state 54

    (84) expresionAritmetica -> LPAREN valor . operador valor RPAREN
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 96
    operadorComp                   shift and go to state 42

state 55

    (79) valor -> ID .
    (56) slice -> ID . LBRACKET valor DOSPUNTOS valor RBRACKET

    PLUS            reduce using rule 79 (valor -> ID .)
    MINUS           reduce using rule 79 (valor -> ID .)
    TIMES           reduce using rule 79 (valor -> ID .)
    DIVIDE          reduce using rule 79 (valor -> ID .)
    MOD             reduce using rule 79 (valor -> ID .)
    NOT_EQUAL       reduce using rule 79 (valor -> ID .)
    LESS_THAN       reduce using rule 79 (valor -> ID .)
    LESS_EQUAL      reduce using rule 79 (valor -> ID .)
    GREATER_THAN    reduce using rule 79 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 79 (valor -> ID .)
    EQUAL           reduce using rule 79 (valor -> ID .)
    DOSPUNTOS       reduce using rule 79 (valor -> ID .)
    $end            reduce using rule 79 (valor -> ID .)
    AND             reduce using rule 79 (valor -> ID .)
    OR              reduce using rule 79 (valor -> ID .)
    LBRACE          reduce using rule 79 (valor -> ID .)
    RBRACE          reduce using rule 79 (valor -> ID .)
    CASE            reduce using rule 79 (valor -> ID .)
    DEFAULT         reduce using rule 79 (valor -> ID .)
    RPAREN          reduce using rule 79 (valor -> ID .)
    SEMICOLON       reduce using rule 79 (valor -> ID .)
    RBRACKET        reduce using rule 79 (valor -> ID .)
    COMMA           reduce using rule 79 (valor -> ID .)
    LBRACKET        shift and go to state 40


state 56

    (81) expresionesAritmeticas -> expresionAritmetica .
    (82) expresionesAritmeticas -> expresionAritmetica . operador expresionesAritmeticas
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NOT_EQUAL       reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_THAN       reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_EQUAL      reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_THAN    reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_EQUAL   reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    EQUAL           reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    DOSPUNTOS       reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    $end            reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    AND             reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    OR              reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    LBRACE          reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    RBRACE          reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    CASE            reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    DEFAULT         reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    RPAREN          reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    SEMICOLON       reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    RBRACKET        reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    COMMA           reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38

  ! PLUS            [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MINUS           [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! TIMES           [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! DIVIDE          [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MOD             [ reduce using rule 81 (expresionesAritmeticas -> expresionAritmetica .) ]

    operador                       shift and go to state 33

state 57

    (42) estructurasDeDatos -> mapa .

    PLUS            reduce using rule 42 (estructurasDeDatos -> mapa .)
    MINUS           reduce using rule 42 (estructurasDeDatos -> mapa .)
    TIMES           reduce using rule 42 (estructurasDeDatos -> mapa .)
    DIVIDE          reduce using rule 42 (estructurasDeDatos -> mapa .)
    MOD             reduce using rule 42 (estructurasDeDatos -> mapa .)
    NOT_EQUAL       reduce using rule 42 (estructurasDeDatos -> mapa .)
    LESS_THAN       reduce using rule 42 (estructurasDeDatos -> mapa .)
    LESS_EQUAL      reduce using rule 42 (estructurasDeDatos -> mapa .)
    GREATER_THAN    reduce using rule 42 (estructurasDeDatos -> mapa .)
    GREATER_EQUAL   reduce using rule 42 (estructurasDeDatos -> mapa .)
    EQUAL           reduce using rule 42 (estructurasDeDatos -> mapa .)
    DOSPUNTOS       reduce using rule 42 (estructurasDeDatos -> mapa .)
    $end            reduce using rule 42 (estructurasDeDatos -> mapa .)
    AND             reduce using rule 42 (estructurasDeDatos -> mapa .)
    OR              reduce using rule 42 (estructurasDeDatos -> mapa .)
    LBRACE          reduce using rule 42 (estructurasDeDatos -> mapa .)
    RBRACE          reduce using rule 42 (estructurasDeDatos -> mapa .)
    CASE            reduce using rule 42 (estructurasDeDatos -> mapa .)
    DEFAULT         reduce using rule 42 (estructurasDeDatos -> mapa .)
    RPAREN          reduce using rule 42 (estructurasDeDatos -> mapa .)
    SEMICOLON       reduce using rule 42 (estructurasDeDatos -> mapa .)
    RBRACKET        reduce using rule 42 (estructurasDeDatos -> mapa .)
    COMMA           reduce using rule 42 (estructurasDeDatos -> mapa .)


state 58

    (43) estructurasDeDatos -> array .

    PLUS            reduce using rule 43 (estructurasDeDatos -> array .)
    MINUS           reduce using rule 43 (estructurasDeDatos -> array .)
    TIMES           reduce using rule 43 (estructurasDeDatos -> array .)
    DIVIDE          reduce using rule 43 (estructurasDeDatos -> array .)
    MOD             reduce using rule 43 (estructurasDeDatos -> array .)
    NOT_EQUAL       reduce using rule 43 (estructurasDeDatos -> array .)
    LESS_THAN       reduce using rule 43 (estructurasDeDatos -> array .)
    LESS_EQUAL      reduce using rule 43 (estructurasDeDatos -> array .)
    GREATER_THAN    reduce using rule 43 (estructurasDeDatos -> array .)
    GREATER_EQUAL   reduce using rule 43 (estructurasDeDatos -> array .)
    EQUAL           reduce using rule 43 (estructurasDeDatos -> array .)
    DOSPUNTOS       reduce using rule 43 (estructurasDeDatos -> array .)
    $end            reduce using rule 43 (estructurasDeDatos -> array .)
    AND             reduce using rule 43 (estructurasDeDatos -> array .)
    OR              reduce using rule 43 (estructurasDeDatos -> array .)
    LBRACE          reduce using rule 43 (estructurasDeDatos -> array .)
    RBRACE          reduce using rule 43 (estructurasDeDatos -> array .)
    CASE            reduce using rule 43 (estructurasDeDatos -> array .)
    DEFAULT         reduce using rule 43 (estructurasDeDatos -> array .)
    RPAREN          reduce using rule 43 (estructurasDeDatos -> array .)
    SEMICOLON       reduce using rule 43 (estructurasDeDatos -> array .)
    RBRACKET        reduce using rule 43 (estructurasDeDatos -> array .)
    COMMA           reduce using rule 43 (estructurasDeDatos -> array .)


state 59

    (44) estructurasDeDatos -> slice .

    PLUS            reduce using rule 44 (estructurasDeDatos -> slice .)
    MINUS           reduce using rule 44 (estructurasDeDatos -> slice .)
    TIMES           reduce using rule 44 (estructurasDeDatos -> slice .)
    DIVIDE          reduce using rule 44 (estructurasDeDatos -> slice .)
    MOD             reduce using rule 44 (estructurasDeDatos -> slice .)
    NOT_EQUAL       reduce using rule 44 (estructurasDeDatos -> slice .)
    LESS_THAN       reduce using rule 44 (estructurasDeDatos -> slice .)
    LESS_EQUAL      reduce using rule 44 (estructurasDeDatos -> slice .)
    GREATER_THAN    reduce using rule 44 (estructurasDeDatos -> slice .)
    GREATER_EQUAL   reduce using rule 44 (estructurasDeDatos -> slice .)
    EQUAL           reduce using rule 44 (estructurasDeDatos -> slice .)
    DOSPUNTOS       reduce using rule 44 (estructurasDeDatos -> slice .)
    $end            reduce using rule 44 (estructurasDeDatos -> slice .)
    AND             reduce using rule 44 (estructurasDeDatos -> slice .)
    OR              reduce using rule 44 (estructurasDeDatos -> slice .)
    LBRACE          reduce using rule 44 (estructurasDeDatos -> slice .)
    RBRACE          reduce using rule 44 (estructurasDeDatos -> slice .)
    CASE            reduce using rule 44 (estructurasDeDatos -> slice .)
    DEFAULT         reduce using rule 44 (estructurasDeDatos -> slice .)
    RPAREN          reduce using rule 44 (estructurasDeDatos -> slice .)
    SEMICOLON       reduce using rule 44 (estructurasDeDatos -> slice .)
    RBRACKET        reduce using rule 44 (estructurasDeDatos -> slice .)
    COMMA           reduce using rule 44 (estructurasDeDatos -> slice .)


state 60

    (103) imprimir -> FMT PUNTO . PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> FMT PUNTO . PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> FMT PUNTO . SCANLN LPAREN POINTER ID RPAREN

    PRINT_LN        shift and go to state 97
    SCANLN          shift and go to state 98


state 61

    (45) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato
    (47) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (65) tipoDato -> . FLOAT64_TYPE
    (66) tipoDato -> . COMPLEX64_TYPE
    (67) tipoDato -> . INT_TYPE
    (68) tipoDato -> . BOOL_TYPE
    (69) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 76
    COMPLEX64_TYPE  shift and go to state 77
    INT_TYPE        shift and go to state 78
    BOOL_TYPE       shift and go to state 79
    STRING_TYPE     shift and go to state 80

    tipoDato                       shift and go to state 99

state 62

    (51) array -> LBRACKET INT . RBRACKET tipoDato
    (52) array -> LBRACKET INT . RBRACKET tipoDato LBRACE RBRACE
    (53) array -> LBRACKET INT . RBRACKET tipoDato LBRACE elementosArray RBRACE

    RBRACKET        shift and go to state 100


state 63

    (57) slice -> LBRACKET RBRACKET . tipoDato LBRACE valores RBRACE
    (65) tipoDato -> . FLOAT64_TYPE
    (66) tipoDato -> . COMPLEX64_TYPE
    (67) tipoDato -> . INT_TYPE
    (68) tipoDato -> . BOOL_TYPE
    (69) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 76
    COMPLEX64_TYPE  shift and go to state 77
    INT_TYPE        shift and go to state 78
    BOOL_TYPE       shift and go to state 79
    STRING_TYPE     shift and go to state 80

    tipoDato                       shift and go to state 101

state 64

    (39) for -> FOR asignacionCorta . SEMICOLON condiciones SEMICOLON autooperacion LBRACE subcodigo RBRACE

    SEMICOLON       shift and go to state 102


state 65

    (40) for -> FOR condiciones . LBRACE subcodigo RBRACE
    (78) valor -> condiciones .

    LBRACE          shift and go to state 103
    NOT_EQUAL       reduce using rule 78 (valor -> condiciones .)
    LESS_THAN       reduce using rule 78 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 78 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 78 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 78 (valor -> condiciones .)
    EQUAL           reduce using rule 78 (valor -> condiciones .)
    PLUS            reduce using rule 78 (valor -> condiciones .)
    MINUS           reduce using rule 78 (valor -> condiciones .)
    TIMES           reduce using rule 78 (valor -> condiciones .)
    DIVIDE          reduce using rule 78 (valor -> condiciones .)
    MOD             reduce using rule 78 (valor -> condiciones .)


state 66

    (41) for -> FOR LBRACE . subcodigo RBRACE
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 104
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 67

    (60) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor
    (79) valor -> ID .
    (56) slice -> ID . LBRACKET valor DOSPUNTOS valor RBRACKET

    DOSPUNTOS       shift and go to state 85
    NOT_EQUAL       reduce using rule 79 (valor -> ID .)
    LESS_THAN       reduce using rule 79 (valor -> ID .)
    LESS_EQUAL      reduce using rule 79 (valor -> ID .)
    GREATER_THAN    reduce using rule 79 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 79 (valor -> ID .)
    EQUAL           reduce using rule 79 (valor -> ID .)
    PLUS            reduce using rule 79 (valor -> ID .)
    MINUS           reduce using rule 79 (valor -> ID .)
    TIMES           reduce using rule 79 (valor -> ID .)
    DIVIDE          reduce using rule 79 (valor -> ID .)
    MOD             reduce using rule 79 (valor -> ID .)
    LBRACKET        shift and go to state 40


state 68

    (94) condicion -> valor . operadorComp valor
    (83) expresionAritmetica -> valor . operador valor
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD

    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38

    operadorComp                   shift and go to state 42
    operador                       shift and go to state 41

state 69

    (95) condicion -> BOOL .
    (75) valor -> BOOL .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for EQUAL resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 75 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 75 (valor -> BOOL .)
    AND             reduce using rule 95 (condicion -> BOOL .)
    OR              reduce using rule 95 (condicion -> BOOL .)
    LBRACE          reduce using rule 95 (condicion -> BOOL .)
    DOSPUNTOS       reduce using rule 95 (condicion -> BOOL .)
    $end            reduce using rule 95 (condicion -> BOOL .)
    RBRACE          reduce using rule 95 (condicion -> BOOL .)
    CASE            reduce using rule 95 (condicion -> BOOL .)
    DEFAULT         reduce using rule 95 (condicion -> BOOL .)
    RPAREN          reduce using rule 95 (condicion -> BOOL .)
    SEMICOLON       reduce using rule 95 (condicion -> BOOL .)
    RBRACKET        reduce using rule 95 (condicion -> BOOL .)
    COMMA           reduce using rule 95 (condicion -> BOOL .)
    NOT_EQUAL       reduce using rule 75 (valor -> BOOL .)
    LESS_THAN       reduce using rule 75 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 75 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 75 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 75 (valor -> BOOL .)
    EQUAL           reduce using rule 75 (valor -> BOOL .)
    PLUS            reduce using rule 75 (valor -> BOOL .)
    MINUS           reduce using rule 75 (valor -> BOOL .)
    TIMES           reduce using rule 75 (valor -> BOOL .)
    DIVIDE          reduce using rule 75 (valor -> BOOL .)
    MOD             reduce using rule 75 (valor -> BOOL .)

  ! NOT_EQUAL       [ reduce using rule 95 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 95 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 95 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 95 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 95 (condicion -> BOOL .) ]
  ! EQUAL           [ reduce using rule 95 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 95 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 95 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 95 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 95 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 95 (condicion -> BOOL .) ]


state 70

    (91) condiciones -> condicion conector . condiciones
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    BOOL            shift and go to state 69
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    condicion                      shift and go to state 32
    condiciones                    shift and go to state 110
    valor                          shift and go to state 68
    expresionesAritmeticas         shift and go to state 30
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 71

    (92) conector -> AND .

    BOOL            reduce using rule 92 (conector -> AND .)
    FLOAT64         reduce using rule 92 (conector -> AND .)
    COMPLEX64       reduce using rule 92 (conector -> AND .)
    INT             reduce using rule 92 (conector -> AND .)
    STRING          reduce using rule 92 (conector -> AND .)
    ID              reduce using rule 92 (conector -> AND .)
    LPAREN          reduce using rule 92 (conector -> AND .)
    MAP             reduce using rule 92 (conector -> AND .)
    LBRACKET        reduce using rule 92 (conector -> AND .)


state 72

    (93) conector -> OR .

    BOOL            reduce using rule 93 (conector -> OR .)
    FLOAT64         reduce using rule 93 (conector -> OR .)
    COMPLEX64       reduce using rule 93 (conector -> OR .)
    INT             reduce using rule 93 (conector -> OR .)
    STRING          reduce using rule 93 (conector -> OR .)
    ID              reduce using rule 93 (conector -> OR .)
    LPAREN          reduce using rule 93 (conector -> OR .)
    MAP             reduce using rule 93 (conector -> OR .)
    LBRACKET        reduce using rule 93 (conector -> OR .)


state 73

    (82) expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .
    (77) valor -> expresionesAritmeticas .

  ! reduce/reduce conflict for PLUS resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MINUS resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for TIMES resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MOD resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 77 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for EQUAL resolved using rule 77 (valor -> expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    $end            reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    AND             reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    OR              reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    LBRACE          reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RBRACE          reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    CASE            reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DEFAULT         reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RPAREN          reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    SEMICOLON       reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RBRACKET        reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    COMMA           reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    PLUS            reduce using rule 77 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 77 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 77 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 77 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 77 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 77 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 77 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 77 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 77 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 77 (valor -> expresionesAritmeticas .)
    EQUAL           reduce using rule 77 (valor -> expresionesAritmeticas .)

  ! PLUS            [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MINUS           [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! TIMES           [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! DIVIDE          [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MOD             [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! NOT_EQUAL       [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_THAN       [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_EQUAL      [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_THAN    [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_EQUAL   [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! EQUAL           [ reduce using rule 82 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]


state 74

    (58) asignacion -> VAR ID tipoDato . ASSIGN valor

    ASSIGN          shift and go to state 111


state 75

    (59) asignacion -> VAR ID ASSIGN . valor
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 112
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 76

    (65) tipoDato -> FLOAT64_TYPE .

    ASSIGN          reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    RBRACKET        reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    LBRACE          reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    COMMA           reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    RPAREN          reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    $end            reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    PLUS            reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    MINUS           reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    TIMES           reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    DIVIDE          reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    MOD             reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    NOT_EQUAL       reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    LESS_THAN       reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    LESS_EQUAL      reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    GREATER_THAN    reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    GREATER_EQUAL   reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    EQUAL           reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    DOSPUNTOS       reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    AND             reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    OR              reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    RBRACE          reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    CASE            reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    DEFAULT         reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)
    SEMICOLON       reduce using rule 65 (tipoDato -> FLOAT64_TYPE .)


state 77

    (66) tipoDato -> COMPLEX64_TYPE .

    ASSIGN          reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    RBRACKET        reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    LBRACE          reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    COMMA           reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    RPAREN          reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    $end            reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    PLUS            reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    MINUS           reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    TIMES           reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    DIVIDE          reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    MOD             reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    NOT_EQUAL       reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    LESS_THAN       reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    LESS_EQUAL      reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    GREATER_THAN    reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    GREATER_EQUAL   reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    EQUAL           reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    DOSPUNTOS       reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    AND             reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    OR              reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    RBRACE          reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    CASE            reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    DEFAULT         reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)
    SEMICOLON       reduce using rule 66 (tipoDato -> COMPLEX64_TYPE .)


state 78

    (67) tipoDato -> INT_TYPE .

    ASSIGN          reduce using rule 67 (tipoDato -> INT_TYPE .)
    RBRACKET        reduce using rule 67 (tipoDato -> INT_TYPE .)
    LBRACE          reduce using rule 67 (tipoDato -> INT_TYPE .)
    COMMA           reduce using rule 67 (tipoDato -> INT_TYPE .)
    RPAREN          reduce using rule 67 (tipoDato -> INT_TYPE .)
    $end            reduce using rule 67 (tipoDato -> INT_TYPE .)
    PLUS            reduce using rule 67 (tipoDato -> INT_TYPE .)
    MINUS           reduce using rule 67 (tipoDato -> INT_TYPE .)
    TIMES           reduce using rule 67 (tipoDato -> INT_TYPE .)
    DIVIDE          reduce using rule 67 (tipoDato -> INT_TYPE .)
    MOD             reduce using rule 67 (tipoDato -> INT_TYPE .)
    NOT_EQUAL       reduce using rule 67 (tipoDato -> INT_TYPE .)
    LESS_THAN       reduce using rule 67 (tipoDato -> INT_TYPE .)
    LESS_EQUAL      reduce using rule 67 (tipoDato -> INT_TYPE .)
    GREATER_THAN    reduce using rule 67 (tipoDato -> INT_TYPE .)
    GREATER_EQUAL   reduce using rule 67 (tipoDato -> INT_TYPE .)
    EQUAL           reduce using rule 67 (tipoDato -> INT_TYPE .)
    DOSPUNTOS       reduce using rule 67 (tipoDato -> INT_TYPE .)
    AND             reduce using rule 67 (tipoDato -> INT_TYPE .)
    OR              reduce using rule 67 (tipoDato -> INT_TYPE .)
    RBRACE          reduce using rule 67 (tipoDato -> INT_TYPE .)
    CASE            reduce using rule 67 (tipoDato -> INT_TYPE .)
    DEFAULT         reduce using rule 67 (tipoDato -> INT_TYPE .)
    SEMICOLON       reduce using rule 67 (tipoDato -> INT_TYPE .)


state 79

    (68) tipoDato -> BOOL_TYPE .

    ASSIGN          reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    RBRACKET        reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    LBRACE          reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    COMMA           reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    RPAREN          reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    $end            reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    PLUS            reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    MINUS           reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    TIMES           reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    DIVIDE          reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    MOD             reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    NOT_EQUAL       reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    LESS_THAN       reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    LESS_EQUAL      reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    GREATER_THAN    reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    GREATER_EQUAL   reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    EQUAL           reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    DOSPUNTOS       reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    AND             reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    OR              reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    RBRACE          reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    CASE            reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    DEFAULT         reduce using rule 68 (tipoDato -> BOOL_TYPE .)
    SEMICOLON       reduce using rule 68 (tipoDato -> BOOL_TYPE .)


state 80

    (69) tipoDato -> STRING_TYPE .

    ASSIGN          reduce using rule 69 (tipoDato -> STRING_TYPE .)
    RBRACKET        reduce using rule 69 (tipoDato -> STRING_TYPE .)
    LBRACE          reduce using rule 69 (tipoDato -> STRING_TYPE .)
    COMMA           reduce using rule 69 (tipoDato -> STRING_TYPE .)
    RPAREN          reduce using rule 69 (tipoDato -> STRING_TYPE .)
    $end            reduce using rule 69 (tipoDato -> STRING_TYPE .)
    PLUS            reduce using rule 69 (tipoDato -> STRING_TYPE .)
    MINUS           reduce using rule 69 (tipoDato -> STRING_TYPE .)
    TIMES           reduce using rule 69 (tipoDato -> STRING_TYPE .)
    DIVIDE          reduce using rule 69 (tipoDato -> STRING_TYPE .)
    MOD             reduce using rule 69 (tipoDato -> STRING_TYPE .)
    NOT_EQUAL       reduce using rule 69 (tipoDato -> STRING_TYPE .)
    LESS_THAN       reduce using rule 69 (tipoDato -> STRING_TYPE .)
    LESS_EQUAL      reduce using rule 69 (tipoDato -> STRING_TYPE .)
    GREATER_THAN    reduce using rule 69 (tipoDato -> STRING_TYPE .)
    GREATER_EQUAL   reduce using rule 69 (tipoDato -> STRING_TYPE .)
    EQUAL           reduce using rule 69 (tipoDato -> STRING_TYPE .)
    DOSPUNTOS       reduce using rule 69 (tipoDato -> STRING_TYPE .)
    AND             reduce using rule 69 (tipoDato -> STRING_TYPE .)
    OR              reduce using rule 69 (tipoDato -> STRING_TYPE .)
    RBRACE          reduce using rule 69 (tipoDato -> STRING_TYPE .)
    CASE            reduce using rule 69 (tipoDato -> STRING_TYPE .)
    DEFAULT         reduce using rule 69 (tipoDato -> STRING_TYPE .)
    SEMICOLON       reduce using rule 69 (tipoDato -> STRING_TYPE .)


state 81

    (56) slice -> ID LBRACKET valor . DOSPUNTOS valor RBRACKET
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    DOSPUNTOS       shift and go to state 113
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 82

    (83) expresionAritmetica -> valor operador valor .
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    $end            reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    DOSPUNTOS       reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    AND             reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    OR              reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    LBRACE          reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    RBRACE          reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    CASE            reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    DEFAULT         reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    RPAREN          reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    SEMICOLON       reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    RBRACKET        reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    COMMA           reduce using rule 83 (expresionAritmetica -> valor operador valor .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

  ! PLUS            [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! EQUAL           [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 83

    (94) condicion -> valor operadorComp valor .
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    AND             reduce using rule 94 (condicion -> valor operadorComp valor .)
    OR              reduce using rule 94 (condicion -> valor operadorComp valor .)
    LBRACE          reduce using rule 94 (condicion -> valor operadorComp valor .)
    DOSPUNTOS       reduce using rule 94 (condicion -> valor operadorComp valor .)
    $end            reduce using rule 94 (condicion -> valor operadorComp valor .)
    RBRACE          reduce using rule 94 (condicion -> valor operadorComp valor .)
    CASE            reduce using rule 94 (condicion -> valor operadorComp valor .)
    DEFAULT         reduce using rule 94 (condicion -> valor operadorComp valor .)
    RPAREN          reduce using rule 94 (condicion -> valor operadorComp valor .)
    SEMICOLON       reduce using rule 94 (condicion -> valor operadorComp valor .)
    RBRACKET        reduce using rule 94 (condicion -> valor operadorComp valor .)
    COMMA           reduce using rule 94 (condicion -> valor operadorComp valor .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

  ! PLUS            [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! MINUS           [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! TIMES           [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! DIVIDE          [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! MOD             [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! NOT_EQUAL       [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! LESS_THAN       [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! LESS_EQUAL      [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! GREATER_THAN    [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]
  ! EQUAL           [ reduce using rule 94 (condicion -> valor operadorComp valor .) ]

    operadorComp                   shift and go to state 42
    operador                       shift and go to state 41

state 84

    (27) sentenciaSwitch -> SWITCH ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (36) bloqueCasosSwitch -> . casoSwitch
    (37) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (38) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 116

    bloqueCasosSwitch              shift and go to state 114
    casoSwitch                     shift and go to state 115

state 85

    (60) asignacionCorta -> ID DOSPUNTOS . ASSIGN valor

    ASSIGN          shift and go to state 117


state 86

    (29) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos . casoDefault RBRACE
    (34) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (35) casoDefault -> . empty
    (102) empty -> .

    DEFAULT         shift and go to state 119
    RBRACE          reduce using rule 102 (empty -> .)

    casoDefault                    shift and go to state 118
    empty                          shift and go to state 120

state 87

    (30) bloqueCasosBooleanos -> casoBooleano .
    (31) bloqueCasosBooleanos -> casoBooleano . bloqueCasosBooleanos
    (30) bloqueCasosBooleanos -> . casoBooleano
    (31) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (32) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (33) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 30 (bloqueCasosBooleanos -> casoBooleano .)
    RBRACE          reduce using rule 30 (bloqueCasosBooleanos -> casoBooleano .)
    CASE            shift and go to state 88

    casoBooleano                   shift and go to state 87
    bloqueCasosBooleanos           shift and go to state 121

state 88

    (32) casoBooleano -> CASE . condiciones DOSPUNTOS subcodigo
    (33) casoBooleano -> CASE . ID DOSPUNTOS subcodigo
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    ID              shift and go to state 123
    BOOL            shift and go to state 69
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    STRING          shift and go to state 29
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    condiciones                    shift and go to state 122
    condicion                      shift and go to state 32
    valor                          shift and go to state 68
    expresionesAritmeticas         shift and go to state 30
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 89

    (28) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON . ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    ID              shift and go to state 124


state 90

    (13) funcion -> FUNC ID LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE
    (20) funcionSinArg -> FUNC ID LPAREN . RPAREN LBRACE subcodigo RBRACE
    (14) argumentos -> . argumento
    (15) argumentos -> . argumentoVariadico
    (16) argumentos -> . argumento COMMA argumentos
    (17) argumentos -> . argumentoVariadico COMMA argumentos
    (18) argumento -> . ID tipoDato
    (19) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    RPAREN          shift and go to state 126
    ID              shift and go to state 95

    argumentos                     shift and go to state 125
    argumento                      shift and go to state 93
    argumentoVariadico             shift and go to state 94

state 91

    (21) funcionAnonima -> FUNC LPAREN RPAREN . LBRACE subcodigo RBRACE LPAREN RPAREN

    LBRACE          shift and go to state 127


state 92

    (22) funcionAnonima -> FUNC LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN

    RPAREN          shift and go to state 128


state 93

    (14) argumentos -> argumento .
    (16) argumentos -> argumento . COMMA argumentos

    RPAREN          reduce using rule 14 (argumentos -> argumento .)
    COMMA           shift and go to state 129


state 94

    (15) argumentos -> argumentoVariadico .
    (17) argumentos -> argumentoVariadico . COMMA argumentos

    RPAREN          reduce using rule 15 (argumentos -> argumentoVariadico .)
    COMMA           shift and go to state 130


state 95

    (18) argumento -> ID . tipoDato
    (19) argumentoVariadico -> ID . PUNTO PUNTO PUNTO tipoDato
    (65) tipoDato -> . FLOAT64_TYPE
    (66) tipoDato -> . COMPLEX64_TYPE
    (67) tipoDato -> . INT_TYPE
    (68) tipoDato -> . BOOL_TYPE
    (69) tipoDato -> . STRING_TYPE

    PUNTO           shift and go to state 132
    FLOAT64_TYPE    shift and go to state 76
    COMPLEX64_TYPE  shift and go to state 77
    INT_TYPE        shift and go to state 78
    BOOL_TYPE       shift and go to state 79
    STRING_TYPE     shift and go to state 80

    tipoDato                       shift and go to state 131

state 96

    (84) expresionAritmetica -> LPAREN valor operador . valor RPAREN
    (83) expresionAritmetica -> valor operador . valor
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 133
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 97

    (103) imprimir -> FMT PUNTO PRINT_LN . LPAREN valores RPAREN
    (104) imprimir -> FMT PUNTO PRINT_LN . LPAREN RPAREN

    LPAREN          shift and go to state 134


state 98

    (105) solicitudDatos -> FMT PUNTO SCANLN . LPAREN POINTER ID RPAREN

    LPAREN          shift and go to state 135


state 99

    (45) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato
    (47) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACKET        shift and go to state 136


state 100

    (51) array -> LBRACKET INT RBRACKET . tipoDato
    (52) array -> LBRACKET INT RBRACKET . tipoDato LBRACE RBRACE
    (53) array -> LBRACKET INT RBRACKET . tipoDato LBRACE elementosArray RBRACE
    (65) tipoDato -> . FLOAT64_TYPE
    (66) tipoDato -> . COMPLEX64_TYPE
    (67) tipoDato -> . INT_TYPE
    (68) tipoDato -> . BOOL_TYPE
    (69) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 76
    COMPLEX64_TYPE  shift and go to state 77
    INT_TYPE        shift and go to state 78
    BOOL_TYPE       shift and go to state 79
    STRING_TYPE     shift and go to state 80

    tipoDato                       shift and go to state 137

state 101

    (57) slice -> LBRACKET RBRACKET tipoDato . LBRACE valores RBRACE

    LBRACE          shift and go to state 138


state 102

    (39) for -> FOR asignacionCorta SEMICOLON . condiciones SEMICOLON autooperacion LBRACE subcodigo RBRACE
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    BOOL            shift and go to state 69
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    condiciones                    shift and go to state 139
    condicion                      shift and go to state 32
    valor                          shift and go to state 68
    expresionesAritmeticas         shift and go to state 30
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 103

    (40) for -> FOR condiciones LBRACE . subcodigo RBRACE
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 140
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 104

    (41) for -> FOR LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 141


state 105

    (23) subcodigo -> asignacionCorta .

    RBRACE          reduce using rule 23 (subcodigo -> asignacionCorta .)
    CASE            reduce using rule 23 (subcodigo -> asignacionCorta .)
    DEFAULT         reduce using rule 23 (subcodigo -> asignacionCorta .)


state 106

    (24) subcodigo -> asignacion .

    RBRACE          reduce using rule 24 (subcodigo -> asignacion .)
    CASE            reduce using rule 24 (subcodigo -> asignacion .)
    DEFAULT         reduce using rule 24 (subcodigo -> asignacion .)


state 107

    (25) subcodigo -> imprimir .

    RBRACE          reduce using rule 25 (subcodigo -> imprimir .)
    CASE            reduce using rule 25 (subcodigo -> imprimir .)
    DEFAULT         reduce using rule 25 (subcodigo -> imprimir .)


state 108

    (26) subcodigo -> solicitudDatos .

    RBRACE          reduce using rule 26 (subcodigo -> solicitudDatos .)
    CASE            reduce using rule 26 (subcodigo -> solicitudDatos .)
    DEFAULT         reduce using rule 26 (subcodigo -> solicitudDatos .)


state 109

    (60) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor

    DOSPUNTOS       shift and go to state 85


state 110

    (91) condiciones -> condicion conector condiciones .
    (78) valor -> condiciones .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for EQUAL resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for PLUS resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for TIMES resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 78 (valor -> condiciones .)
  ! reduce/reduce conflict for MOD resolved using rule 78 (valor -> condiciones .)
    LBRACE          reduce using rule 91 (condiciones -> condicion conector condiciones .)
    DOSPUNTOS       reduce using rule 91 (condiciones -> condicion conector condiciones .)
    $end            reduce using rule 91 (condiciones -> condicion conector condiciones .)
    AND             reduce using rule 91 (condiciones -> condicion conector condiciones .)
    OR              reduce using rule 91 (condiciones -> condicion conector condiciones .)
    RBRACE          reduce using rule 91 (condiciones -> condicion conector condiciones .)
    CASE            reduce using rule 91 (condiciones -> condicion conector condiciones .)
    DEFAULT         reduce using rule 91 (condiciones -> condicion conector condiciones .)
    RPAREN          reduce using rule 91 (condiciones -> condicion conector condiciones .)
    SEMICOLON       reduce using rule 91 (condiciones -> condicion conector condiciones .)
    RBRACKET        reduce using rule 91 (condiciones -> condicion conector condiciones .)
    COMMA           reduce using rule 91 (condiciones -> condicion conector condiciones .)
    NOT_EQUAL       reduce using rule 78 (valor -> condiciones .)
    LESS_THAN       reduce using rule 78 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 78 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 78 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 78 (valor -> condiciones .)
    EQUAL           reduce using rule 78 (valor -> condiciones .)
    PLUS            reduce using rule 78 (valor -> condiciones .)
    MINUS           reduce using rule 78 (valor -> condiciones .)
    TIMES           reduce using rule 78 (valor -> condiciones .)
    DIVIDE          reduce using rule 78 (valor -> condiciones .)
    MOD             reduce using rule 78 (valor -> condiciones .)

  ! PLUS            [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! MINUS           [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! TIMES           [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! DIVIDE          [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! MOD             [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! NOT_EQUAL       [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! LESS_THAN       [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! LESS_EQUAL      [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_THAN    [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_EQUAL   [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]
  ! EQUAL           [ reduce using rule 91 (condiciones -> condicion conector condiciones .) ]


state 111

    (58) asignacion -> VAR ID tipoDato ASSIGN . valor
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 142
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 112

    (59) asignacion -> VAR ID ASSIGN valor .
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    $end            reduce using rule 59 (asignacion -> VAR ID ASSIGN valor .)
    RBRACE          reduce using rule 59 (asignacion -> VAR ID ASSIGN valor .)
    CASE            reduce using rule 59 (asignacion -> VAR ID ASSIGN valor .)
    DEFAULT         reduce using rule 59 (asignacion -> VAR ID ASSIGN valor .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 113

    (56) slice -> ID LBRACKET valor DOSPUNTOS . valor RBRACKET
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 143
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 114

    (27) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (34) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (35) casoDefault -> . empty
    (102) empty -> .

    DEFAULT         shift and go to state 119
    RBRACE          reduce using rule 102 (empty -> .)

    casoDefault                    shift and go to state 144
    empty                          shift and go to state 120

state 115

    (36) bloqueCasosSwitch -> casoSwitch .
    (37) bloqueCasosSwitch -> casoSwitch . bloqueCasosSwitch
    (36) bloqueCasosSwitch -> . casoSwitch
    (37) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (38) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 36 (bloqueCasosSwitch -> casoSwitch .)
    RBRACE          reduce using rule 36 (bloqueCasosSwitch -> casoSwitch .)
    CASE            shift and go to state 116

    casoSwitch                     shift and go to state 115
    bloqueCasosSwitch              shift and go to state 145

state 116

    (38) casoSwitch -> CASE . valores DOSPUNTOS subcodigo
    (70) valores -> . valor
    (71) valores -> . valor COMMA valores
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valores                        shift and go to state 146
    valor                          shift and go to state 147
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 117

    (60) asignacionCorta -> ID DOSPUNTOS ASSIGN . valor
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 148
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 118

    (29) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault . RBRACE

    RBRACE          shift and go to state 149


state 119

    (34) casoDefault -> DEFAULT . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 150


state 120

    (35) casoDefault -> empty .

    RBRACE          reduce using rule 35 (casoDefault -> empty .)


state 121

    (31) bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .

    DEFAULT         reduce using rule 31 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)
    RBRACE          reduce using rule 31 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)


state 122

    (32) casoBooleano -> CASE condiciones . DOSPUNTOS subcodigo
    (78) valor -> condiciones .

    DOSPUNTOS       shift and go to state 151
    NOT_EQUAL       reduce using rule 78 (valor -> condiciones .)
    LESS_THAN       reduce using rule 78 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 78 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 78 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 78 (valor -> condiciones .)
    EQUAL           reduce using rule 78 (valor -> condiciones .)
    PLUS            reduce using rule 78 (valor -> condiciones .)
    MINUS           reduce using rule 78 (valor -> condiciones .)
    TIMES           reduce using rule 78 (valor -> condiciones .)
    DIVIDE          reduce using rule 78 (valor -> condiciones .)
    MOD             reduce using rule 78 (valor -> condiciones .)


state 123

    (33) casoBooleano -> CASE ID . DOSPUNTOS subcodigo
    (79) valor -> ID .
    (56) slice -> ID . LBRACKET valor DOSPUNTOS valor RBRACKET

    DOSPUNTOS       shift and go to state 152
    NOT_EQUAL       reduce using rule 79 (valor -> ID .)
    LESS_THAN       reduce using rule 79 (valor -> ID .)
    LESS_EQUAL      reduce using rule 79 (valor -> ID .)
    GREATER_THAN    reduce using rule 79 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 79 (valor -> ID .)
    EQUAL           reduce using rule 79 (valor -> ID .)
    PLUS            reduce using rule 79 (valor -> ID .)
    MINUS           reduce using rule 79 (valor -> ID .)
    TIMES           reduce using rule 79 (valor -> ID .)
    DIVIDE          reduce using rule 79 (valor -> ID .)
    MOD             reduce using rule 79 (valor -> ID .)
    LBRACKET        shift and go to state 40


state 124

    (28) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID . LBRACE bloqueCasosSwitch casoDefault RBRACE

    LBRACE          shift and go to state 153


state 125

    (13) funcion -> FUNC ID LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE

    RPAREN          shift and go to state 154


state 126

    (20) funcionSinArg -> FUNC ID LPAREN RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 155


state 127

    (21) funcionAnonima -> FUNC LPAREN RPAREN LBRACE . subcodigo RBRACE LPAREN RPAREN
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 156
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 128

    (22) funcionAnonima -> FUNC LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE LPAREN RPAREN

    LBRACE          shift and go to state 157


state 129

    (16) argumentos -> argumento COMMA . argumentos
    (14) argumentos -> . argumento
    (15) argumentos -> . argumentoVariadico
    (16) argumentos -> . argumento COMMA argumentos
    (17) argumentos -> . argumentoVariadico COMMA argumentos
    (18) argumento -> . ID tipoDato
    (19) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    ID              shift and go to state 95

    argumento                      shift and go to state 93
    argumentos                     shift and go to state 158
    argumentoVariadico             shift and go to state 94

state 130

    (17) argumentos -> argumentoVariadico COMMA . argumentos
    (14) argumentos -> . argumento
    (15) argumentos -> . argumentoVariadico
    (16) argumentos -> . argumento COMMA argumentos
    (17) argumentos -> . argumentoVariadico COMMA argumentos
    (18) argumento -> . ID tipoDato
    (19) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    ID              shift and go to state 95

    argumentoVariadico             shift and go to state 94
    argumentos                     shift and go to state 159
    argumento                      shift and go to state 93

state 131

    (18) argumento -> ID tipoDato .

    COMMA           reduce using rule 18 (argumento -> ID tipoDato .)
    RPAREN          reduce using rule 18 (argumento -> ID tipoDato .)


state 132

    (19) argumentoVariadico -> ID PUNTO . PUNTO PUNTO tipoDato

    PUNTO           shift and go to state 160


state 133

    (84) expresionAritmetica -> LPAREN valor operador valor . RPAREN
    (83) expresionAritmetica -> valor operador valor .
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    RPAREN          shift and go to state 161
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

  ! PLUS            [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]
  ! EQUAL           [ reduce using rule 83 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 134

    (103) imprimir -> FMT PUNTO PRINT_LN LPAREN . valores RPAREN
    (104) imprimir -> FMT PUNTO PRINT_LN LPAREN . RPAREN
    (70) valores -> . valor
    (71) valores -> . valor COMMA valores
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    RPAREN          shift and go to state 163
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valores                        shift and go to state 162
    valor                          shift and go to state 147
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 135

    (105) solicitudDatos -> FMT PUNTO SCANLN LPAREN . POINTER ID RPAREN

    POINTER         shift and go to state 164


state 136

    (45) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE RBRACE
    (46) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato
    (47) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE elementosMapa RBRACE
    (65) tipoDato -> . FLOAT64_TYPE
    (66) tipoDato -> . COMPLEX64_TYPE
    (67) tipoDato -> . INT_TYPE
    (68) tipoDato -> . BOOL_TYPE
    (69) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 76
    COMPLEX64_TYPE  shift and go to state 77
    INT_TYPE        shift and go to state 78
    BOOL_TYPE       shift and go to state 79
    STRING_TYPE     shift and go to state 80

    tipoDato                       shift and go to state 165

state 137

    (51) array -> LBRACKET INT RBRACKET tipoDato .
    (52) array -> LBRACKET INT RBRACKET tipoDato . LBRACE RBRACE
    (53) array -> LBRACKET INT RBRACKET tipoDato . LBRACE elementosArray RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
    $end            reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    PLUS            reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    MINUS           reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    TIMES           reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    DIVIDE          reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    MOD             reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    NOT_EQUAL       reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    LESS_THAN       reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    LESS_EQUAL      reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    GREATER_THAN    reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    GREATER_EQUAL   reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    EQUAL           reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    DOSPUNTOS       reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    AND             reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    OR              reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    RBRACE          reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    CASE            reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    DEFAULT         reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    RPAREN          reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    SEMICOLON       reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    RBRACKET        reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    COMMA           reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .)
    LBRACE          shift and go to state 166

  ! LBRACE          [ reduce using rule 51 (array -> LBRACKET INT RBRACKET tipoDato .) ]


state 138

    (57) slice -> LBRACKET RBRACKET tipoDato LBRACE . valores RBRACE
    (70) valores -> . valor
    (71) valores -> . valor COMMA valores
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valores                        shift and go to state 167
    valor                          shift and go to state 147
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 139

    (39) for -> FOR asignacionCorta SEMICOLON condiciones . SEMICOLON autooperacion LBRACE subcodigo RBRACE
    (78) valor -> condiciones .

    SEMICOLON       shift and go to state 168
    NOT_EQUAL       reduce using rule 78 (valor -> condiciones .)
    LESS_THAN       reduce using rule 78 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 78 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 78 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 78 (valor -> condiciones .)
    EQUAL           reduce using rule 78 (valor -> condiciones .)
    PLUS            reduce using rule 78 (valor -> condiciones .)
    MINUS           reduce using rule 78 (valor -> condiciones .)
    TIMES           reduce using rule 78 (valor -> condiciones .)
    DIVIDE          reduce using rule 78 (valor -> condiciones .)
    MOD             reduce using rule 78 (valor -> condiciones .)


state 140

    (40) for -> FOR condiciones LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 169


state 141

    (41) for -> FOR LBRACE subcodigo RBRACE .

    $end            reduce using rule 41 (for -> FOR LBRACE subcodigo RBRACE .)


state 142

    (58) asignacion -> VAR ID tipoDato ASSIGN valor .
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    $end            reduce using rule 58 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    RBRACE          reduce using rule 58 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    CASE            reduce using rule 58 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    DEFAULT         reduce using rule 58 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 143

    (56) slice -> ID LBRACKET valor DOSPUNTOS valor . RBRACKET
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    RBRACKET        shift and go to state 170
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 144

    (27) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 171


state 145

    (37) bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .

    DEFAULT         reduce using rule 37 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)
    RBRACE          reduce using rule 37 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)


state 146

    (38) casoSwitch -> CASE valores . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 172


state 147

    (70) valores -> valor .
    (71) valores -> valor . COMMA valores
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    DOSPUNTOS       reduce using rule 70 (valores -> valor .)
    RPAREN          reduce using rule 70 (valores -> valor .)
    RBRACE          reduce using rule 70 (valores -> valor .)
    COMMA           shift and go to state 173
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 148

    (60) asignacionCorta -> ID DOSPUNTOS ASSIGN valor .
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    SEMICOLON       reduce using rule 60 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    RBRACE          reduce using rule 60 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    CASE            reduce using rule 60 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    DEFAULT         reduce using rule 60 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 149

    (29) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .

    $end            reduce using rule 29 (sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .)


state 150

    (34) casoDefault -> DEFAULT DOSPUNTOS . subcodigo
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 174
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 151

    (32) casoBooleano -> CASE condiciones DOSPUNTOS . subcodigo
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 175
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 152

    (33) casoBooleano -> CASE ID DOSPUNTOS . subcodigo
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 176
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 153

    (28) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (36) bloqueCasosSwitch -> . casoSwitch
    (37) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (38) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 116

    bloqueCasosSwitch              shift and go to state 177
    casoSwitch                     shift and go to state 115

state 154

    (13) funcion -> FUNC ID LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 178


state 155

    (20) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE . subcodigo RBRACE
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 179
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 156

    (21) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo . RBRACE LPAREN RPAREN

    RBRACE          shift and go to state 180


state 157

    (22) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE LPAREN RPAREN
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 181
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 158

    (16) argumentos -> argumento COMMA argumentos .

    RPAREN          reduce using rule 16 (argumentos -> argumento COMMA argumentos .)


state 159

    (17) argumentos -> argumentoVariadico COMMA argumentos .

    RPAREN          reduce using rule 17 (argumentos -> argumentoVariadico COMMA argumentos .)


state 160

    (19) argumentoVariadico -> ID PUNTO PUNTO . PUNTO tipoDato

    PUNTO           shift and go to state 182


state 161

    (84) expresionAritmetica -> LPAREN valor operador valor RPAREN .

    PLUS            reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MINUS           reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    TIMES           reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DIVIDE          reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MOD             reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    $end            reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    NOT_EQUAL       reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_THAN       reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_EQUAL      reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_THAN    reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_EQUAL   reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    EQUAL           reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DOSPUNTOS       reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    AND             reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    OR              reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LBRACE          reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RBRACE          reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    CASE            reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DEFAULT         reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RPAREN          reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    SEMICOLON       reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RBRACKET        reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    COMMA           reduce using rule 84 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)


state 162

    (103) imprimir -> FMT PUNTO PRINT_LN LPAREN valores . RPAREN

    RPAREN          shift and go to state 183


state 163

    (104) imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .

    $end            reduce using rule 104 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)
    RBRACE          reduce using rule 104 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)
    CASE            reduce using rule 104 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)
    DEFAULT         reduce using rule 104 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)


state 164

    (105) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER . ID RPAREN

    ID              shift and go to state 184


state 165

    (45) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE RBRACE
    (46) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .
    (47) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE elementosMapa RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
    LBRACE          shift and go to state 185
    $end            reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    PLUS            reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    MINUS           reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    TIMES           reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    DIVIDE          reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    MOD             reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    NOT_EQUAL       reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    LESS_THAN       reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    LESS_EQUAL      reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    GREATER_THAN    reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    GREATER_EQUAL   reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    EQUAL           reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    DOSPUNTOS       reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    AND             reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    OR              reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    RBRACE          reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    CASE            reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    DEFAULT         reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    RPAREN          reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    SEMICOLON       reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    RBRACKET        reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    COMMA           reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)

  ! LBRACE          [ reduce using rule 46 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .) ]


state 166

    (52) array -> LBRACKET INT RBRACKET tipoDato LBRACE . RBRACE
    (53) array -> LBRACKET INT RBRACKET tipoDato LBRACE . elementosArray RBRACE
    (54) elementosArray -> . valor
    (55) elementosArray -> . valor COMMA elementosArray
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    RBRACE          shift and go to state 186
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    elementosArray                 shift and go to state 187
    valor                          shift and go to state 188
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 167

    (57) slice -> LBRACKET RBRACKET tipoDato LBRACE valores . RBRACE

    RBRACE          shift and go to state 189


state 168

    (39) for -> FOR asignacionCorta SEMICOLON condiciones SEMICOLON . autooperacion LBRACE subcodigo RBRACE
    (63) autooperacion -> . autoincremento
    (64) autooperacion -> . autodecremento
    (61) autoincremento -> . ID PLUS PLUS
    (62) autodecremento -> . ID MINUS MINUS

    ID              shift and go to state 193

    autooperacion                  shift and go to state 190
    autoincremento                 shift and go to state 191
    autodecremento                 shift and go to state 192

state 169

    (40) for -> FOR condiciones LBRACE subcodigo RBRACE .

    $end            reduce using rule 40 (for -> FOR condiciones LBRACE subcodigo RBRACE .)


state 170

    (56) slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .

    $end            reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    PLUS            reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    MINUS           reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    TIMES           reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    DIVIDE          reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    MOD             reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    NOT_EQUAL       reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    LESS_THAN       reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    LESS_EQUAL      reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    GREATER_THAN    reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    GREATER_EQUAL   reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    EQUAL           reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    DOSPUNTOS       reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    AND             reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    OR              reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    LBRACE          reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    RBRACE          reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    CASE            reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    DEFAULT         reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    RPAREN          reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    SEMICOLON       reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    RBRACKET        reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)
    COMMA           reduce using rule 56 (slice -> ID LBRACKET valor DOSPUNTOS valor RBRACKET .)


state 171

    (27) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 27 (sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 172

    (38) casoSwitch -> CASE valores DOSPUNTOS . subcodigo
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 194
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 173

    (71) valores -> valor COMMA . valores
    (70) valores -> . valor
    (71) valores -> . valor COMMA valores
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 147
    valores                        shift and go to state 195
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 174

    (34) casoDefault -> DEFAULT DOSPUNTOS subcodigo .

    RBRACE          reduce using rule 34 (casoDefault -> DEFAULT DOSPUNTOS subcodigo .)


state 175

    (32) casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .

    CASE            reduce using rule 32 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 32 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 32 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)


state 176

    (33) casoBooleano -> CASE ID DOSPUNTOS subcodigo .

    CASE            reduce using rule 33 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 33 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 33 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)


state 177

    (28) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (34) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (35) casoDefault -> . empty
    (102) empty -> .

    DEFAULT         shift and go to state 119
    RBRACE          reduce using rule 102 (empty -> .)

    casoDefault                    shift and go to state 196
    empty                          shift and go to state 120

state 178

    (13) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    subcodigo                      shift and go to state 197
    asignacionCorta                shift and go to state 105
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 179

    (20) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 198


state 180

    (21) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE . LPAREN RPAREN

    LPAREN          shift and go to state 199


state 181

    (22) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE LPAREN RPAREN

    RBRACE          shift and go to state 200


state 182

    (19) argumentoVariadico -> ID PUNTO PUNTO PUNTO . tipoDato
    (65) tipoDato -> . FLOAT64_TYPE
    (66) tipoDato -> . COMPLEX64_TYPE
    (67) tipoDato -> . INT_TYPE
    (68) tipoDato -> . BOOL_TYPE
    (69) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 76
    COMPLEX64_TYPE  shift and go to state 77
    INT_TYPE        shift and go to state 78
    BOOL_TYPE       shift and go to state 79
    STRING_TYPE     shift and go to state 80

    tipoDato                       shift and go to state 201

state 183

    (103) imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .

    $end            reduce using rule 103 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)
    RBRACE          reduce using rule 103 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)
    CASE            reduce using rule 103 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)
    DEFAULT         reduce using rule 103 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)


state 184

    (105) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID . RPAREN

    RPAREN          shift and go to state 202


state 185

    (45) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . RBRACE
    (47) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . elementosMapa RBRACE
    (48) elementosMapa -> . elementoMapa
    (49) elementosMapa -> . elementoMapa elementosMapa
    (50) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    RBRACE          shift and go to state 203
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    elementosMapa                  shift and go to state 204
    elementoMapa                   shift and go to state 205
    valor                          shift and go to state 206
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 186

    (52) array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .

    $end            reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    PLUS            reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    MINUS           reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    TIMES           reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    DIVIDE          reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    MOD             reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    LESS_THAN       reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    EQUAL           reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    DOSPUNTOS       reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    AND             reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    OR              reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    LBRACE          reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    RBRACE          reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    CASE            reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    DEFAULT         reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    RPAREN          reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    SEMICOLON       reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    RBRACKET        reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    COMMA           reduce using rule 52 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)


state 187

    (53) array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray . RBRACE

    RBRACE          shift and go to state 207


state 188

    (54) elementosArray -> valor .
    (55) elementosArray -> valor . COMMA elementosArray
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    RBRACE          reduce using rule 54 (elementosArray -> valor .)
    COMMA           shift and go to state 208
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 189

    (57) slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .

    $end            reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    PLUS            reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    MINUS           reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    TIMES           reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    DIVIDE          reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    MOD             reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    NOT_EQUAL       reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    LESS_THAN       reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    LESS_EQUAL      reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    GREATER_THAN    reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    GREATER_EQUAL   reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    EQUAL           reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    DOSPUNTOS       reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    AND             reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    OR              reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    LBRACE          reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    RBRACE          reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    CASE            reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    DEFAULT         reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    RPAREN          reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    SEMICOLON       reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    RBRACKET        reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)
    COMMA           reduce using rule 57 (slice -> LBRACKET RBRACKET tipoDato LBRACE valores RBRACE .)


state 190

    (39) for -> FOR asignacionCorta SEMICOLON condiciones SEMICOLON autooperacion . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 209


state 191

    (63) autooperacion -> autoincremento .

    LBRACE          reduce using rule 63 (autooperacion -> autoincremento .)


state 192

    (64) autooperacion -> autodecremento .

    LBRACE          reduce using rule 64 (autooperacion -> autodecremento .)


state 193

    (61) autoincremento -> ID . PLUS PLUS
    (62) autodecremento -> ID . MINUS MINUS

    PLUS            shift and go to state 210
    MINUS           shift and go to state 211


state 194

    (38) casoSwitch -> CASE valores DOSPUNTOS subcodigo .

    CASE            reduce using rule 38 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 38 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 38 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)


state 195

    (71) valores -> valor COMMA valores .

    DOSPUNTOS       reduce using rule 71 (valores -> valor COMMA valores .)
    RPAREN          reduce using rule 71 (valores -> valor COMMA valores .)
    RBRACE          reduce using rule 71 (valores -> valor COMMA valores .)


state 196

    (28) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 212


state 197

    (13) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 213


state 198

    (20) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 20 (funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE .)


state 199

    (21) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN . RPAREN

    RPAREN          shift and go to state 214


state 200

    (22) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE . LPAREN RPAREN

    LPAREN          shift and go to state 215


state 201

    (19) argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .

    COMMA           reduce using rule 19 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)
    RPAREN          reduce using rule 19 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)


state 202

    (105) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .

    $end            reduce using rule 105 (solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .)
    RBRACE          reduce using rule 105 (solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .)
    CASE            reduce using rule 105 (solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .)
    DEFAULT         reduce using rule 105 (solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .)


state 203

    (45) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .

    $end            reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    PLUS            reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MINUS           reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    TIMES           reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DIVIDE          reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MOD             reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_THAN       reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    EQUAL           reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DOSPUNTOS       reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    AND             reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    OR              reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LBRACE          reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RBRACE          reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    CASE            reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DEFAULT         reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RPAREN          reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    SEMICOLON       reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RBRACKET        reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    COMMA           reduce using rule 45 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)


state 204

    (47) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa . RBRACE

    RBRACE          shift and go to state 216


state 205

    (48) elementosMapa -> elementoMapa .
    (49) elementosMapa -> elementoMapa . elementosMapa
    (48) elementosMapa -> . elementoMapa
    (49) elementosMapa -> . elementoMapa elementosMapa
    (50) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    RBRACE          reduce using rule 48 (elementosMapa -> elementoMapa .)
    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    elementoMapa                   shift and go to state 205
    elementosMapa                  shift and go to state 217
    valor                          shift and go to state 206
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 206

    (50) elementoMapa -> valor . DOSPUNTOS valor COMMA
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    DOSPUNTOS       shift and go to state 218
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 207

    (53) array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .

    $end            reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    PLUS            reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    MINUS           reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    TIMES           reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    DIVIDE          reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    MOD             reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    NOT_EQUAL       reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    LESS_THAN       reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    LESS_EQUAL      reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    GREATER_THAN    reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    GREATER_EQUAL   reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    EQUAL           reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    DOSPUNTOS       reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    AND             reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    OR              reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    LBRACE          reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    RBRACE          reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    CASE            reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    DEFAULT         reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    RPAREN          reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    SEMICOLON       reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    RBRACKET        reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    COMMA           reduce using rule 53 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)


state 208

    (55) elementosArray -> valor COMMA . elementosArray
    (54) elementosArray -> . valor
    (55) elementosArray -> . valor COMMA elementosArray
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 188
    elementosArray                 shift and go to state 219
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 209

    (39) for -> FOR asignacionCorta SEMICOLON condiciones SEMICOLON autooperacion LBRACE . subcodigo RBRACE
    (23) subcodigo -> . asignacionCorta
    (24) subcodigo -> . asignacion
    (25) subcodigo -> . imprimir
    (26) subcodigo -> . solicitudDatos
    (60) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (58) asignacion -> . VAR ID tipoDato ASSIGN valor
    (59) asignacion -> . VAR ID ASSIGN valor
    (103) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (104) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (105) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    ID              shift and go to state 109
    VAR             shift and go to state 14
    FMT             shift and go to state 20

    asignacionCorta                shift and go to state 105
    subcodigo                      shift and go to state 220
    asignacion                     shift and go to state 106
    imprimir                       shift and go to state 107
    solicitudDatos                 shift and go to state 108

state 210

    (61) autoincremento -> ID PLUS . PLUS

    PLUS            shift and go to state 221


state 211

    (62) autodecremento -> ID MINUS . MINUS

    MINUS           shift and go to state 222


state 212

    (28) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 28 (sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 213

    (13) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 13 (funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .)


state 214

    (21) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .

    $end            reduce using rule 21 (funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .)


state 215

    (22) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN . RPAREN

    RPAREN          shift and go to state 223


state 216

    (47) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .

    $end            reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    PLUS            reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MINUS           reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    TIMES           reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DIVIDE          reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MOD             reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    NOT_EQUAL       reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_THAN       reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_EQUAL      reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_THAN    reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_EQUAL   reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    EQUAL           reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DOSPUNTOS       reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    AND             reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    OR              reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LBRACE          reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RBRACE          reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    CASE            reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DEFAULT         reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RPAREN          reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    SEMICOLON       reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RBRACKET        reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    COMMA           reduce using rule 47 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)


state 217

    (49) elementosMapa -> elementoMapa elementosMapa .

    RBRACE          reduce using rule 49 (elementosMapa -> elementoMapa elementosMapa .)


state 218

    (50) elementoMapa -> valor DOSPUNTOS . valor COMMA
    (72) valor -> . FLOAT64
    (73) valor -> . COMPLEX64
    (74) valor -> . INT
    (75) valor -> . BOOL
    (76) valor -> . STRING
    (77) valor -> . expresionesAritmeticas
    (78) valor -> . condiciones
    (79) valor -> . ID
    (80) valor -> . estructurasDeDatos
    (81) expresionesAritmeticas -> . expresionAritmetica
    (82) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (90) condiciones -> . condicion
    (91) condiciones -> . condicion conector condiciones
    (42) estructurasDeDatos -> . mapa
    (43) estructurasDeDatos -> . array
    (44) estructurasDeDatos -> . slice
    (83) expresionAritmetica -> . valor operador valor
    (84) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (94) condicion -> . valor operadorComp valor
    (95) condicion -> . BOOL
    (45) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (46) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (47) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (51) array -> . LBRACKET INT RBRACKET tipoDato
    (52) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (53) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (56) slice -> . ID LBRACKET valor DOSPUNTOS valor RBRACKET
    (57) slice -> . LBRACKET RBRACKET tipoDato LBRACE valores RBRACE

    FLOAT64         shift and go to state 26
    COMPLEX64       shift and go to state 27
    INT             shift and go to state 23
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 55
    LPAREN          shift and go to state 19
    MAP             shift and go to state 21
    LBRACKET        shift and go to state 22

    valor                          shift and go to state 224
    expresionesAritmeticas         shift and go to state 30
    condiciones                    shift and go to state 25
    estructurasDeDatos             shift and go to state 31
    expresionAritmetica            shift and go to state 56
    condicion                      shift and go to state 32
    mapa                           shift and go to state 57
    array                          shift and go to state 58
    slice                          shift and go to state 59

state 219

    (55) elementosArray -> valor COMMA elementosArray .

    RBRACE          reduce using rule 55 (elementosArray -> valor COMMA elementosArray .)


state 220

    (39) for -> FOR asignacionCorta SEMICOLON condiciones SEMICOLON autooperacion LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 225


state 221

    (61) autoincremento -> ID PLUS PLUS .

    LBRACE          reduce using rule 61 (autoincremento -> ID PLUS PLUS .)


state 222

    (62) autodecremento -> ID MINUS MINUS .

    LBRACE          reduce using rule 62 (autodecremento -> ID MINUS MINUS .)


state 223

    (22) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .

    $end            reduce using rule 22 (funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .)


state 224

    (50) elementoMapa -> valor DOSPUNTOS valor . COMMA
    (83) expresionAritmetica -> valor . operador valor
    (94) condicion -> valor . operadorComp valor
    (85) operador -> . PLUS
    (86) operador -> . MINUS
    (87) operador -> . TIMES
    (88) operador -> . DIVIDE
    (89) operador -> . MOD
    (96) operadorComp -> . NOT_EQUAL
    (97) operadorComp -> . LESS_THAN
    (98) operadorComp -> . LESS_EQUAL
    (99) operadorComp -> . GREATER_THAN
    (100) operadorComp -> . GREATER_EQUAL
    (101) operadorComp -> . EQUAL

    COMMA           shift and go to state 226
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    MOD             shift and go to state 38
    NOT_EQUAL       shift and go to state 43
    LESS_THAN       shift and go to state 44
    LESS_EQUAL      shift and go to state 45
    GREATER_THAN    shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUAL           shift and go to state 48

    operador                       shift and go to state 41
    operadorComp                   shift and go to state 42

state 225

    (39) for -> FOR asignacionCorta SEMICOLON condiciones SEMICOLON autooperacion LBRACE subcodigo RBRACE .

    $end            reduce using rule 39 (for -> FOR asignacionCorta SEMICOLON condiciones SEMICOLON autooperacion LBRACE subcodigo RBRACE .)


state 226

    (50) elementoMapa -> valor DOSPUNTOS valor COMMA .

    FLOAT64         reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    COMPLEX64       reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    INT             reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    BOOL            reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    STRING          reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    ID              reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LPAREN          reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    MAP             reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LBRACKET        reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    RBRACE          reduce using rule 50 (elementoMapa -> valor DOSPUNTOS valor COMMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 13 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 13 resolved as shift
WARNING: shift/reduce conflict for MOD in state 13 resolved as shift
WARNING: shift/reduce conflict for AND in state 32 resolved as shift
WARNING: shift/reduce conflict for OR in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for MOD in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 82 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 83 resolved as shift
WARNING: shift/reduce conflict for MOD in state 83 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 83 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 83 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 133 resolved as shift
WARNING: shift/reduce conflict for MOD in state 133 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 133 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 133 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 137 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 28
WARNING: reduce/reduce conflict in state 69 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 69
WARNING: reduce/reduce conflict in state 73 resolved using rule (valor -> expresionesAritmeticas)
WARNING: rejected rule (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas) in state 73
WARNING: reduce/reduce conflict in state 110 resolved using rule (valor -> condiciones)
WARNING: rejected rule (condiciones -> condicion conector condiciones) in state 110
