Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASSIGN
    BREAK
    CHAN
    COMMENT
    CONST
    CONTINUE
    DEFER
    ELSE
    FALLTHROUGH
    FOR
    GO
    GOTO
    IF
    ILLEGAL
    IMPORT
    INTERFACE
    NOT
    PACKAGE
    RANGE
    RETURN
    SELECT
    STRUCT
    TYPE

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> asignacion
Rule 2     codigo -> sentenciaSwitch
Rule 3     codigo -> funcion
Rule 4     codigo -> imprimir
Rule 5     funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
Rule 6     argumentos -> argumento
Rule 7     argumentos -> argumentoVariadico
Rule 8     argumentos -> argumento COMMA
Rule 9     argumentos -> argumentoVariadico COMMA
Rule 10    argumento -> ID tipoDato
Rule 11    argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato
Rule 12    subcodigo -> asignacionCorta
Rule 13    subcodigo -> asignacion
Rule 14    sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 15    sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 16    sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
Rule 17    bloqueCasosBooleanos -> casoBooleano
Rule 18    bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos
Rule 19    casoBooleano -> CASE condiciones DOSPUNTOS subcodigo
Rule 20    casoBooleano -> CASE ID DOSPUNTOS subcodigo
Rule 21    casoDefault -> DEFAULT DOSPUNTOS subcodigo
Rule 22    casoDefault -> empty
Rule 23    bloqueCasosSwitch -> casoSwitch
Rule 24    bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch
Rule 25    casoSwitch -> CASE valores DOSPUNTOS subcodigo
Rule 26    estructurasDeDatos -> mapa
Rule 27    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
Rule 28    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
Rule 29    elementosMapa -> elementoMapa
Rule 30    elementosMapa -> elementoMapa elementosMapa
Rule 31    elementoMapa -> valor DOSPUNTOS valor COMMA
Rule 32    asignacion -> VAR ID tipoDato EQUAL valor
Rule 33    asignacion -> VAR ID EQUAL valor
Rule 34    asignacionCorta -> ID DOSPUNTOS EQUAL valor
Rule 35    tipoDato -> FLOAT64_TYPE
Rule 36    tipoDato -> COMPLEX64_TYPE
Rule 37    tipoDato -> INT_TYPE
Rule 38    tipoDato -> BOOL_TYPE
Rule 39    tipoDato -> STRING_TYPE
Rule 40    valores -> valor
Rule 41    valores -> valor COMMA valores
Rule 42    valor -> FLOAT64
Rule 43    valor -> COMPLEX64
Rule 44    valor -> INT
Rule 45    valor -> BOOL
Rule 46    valor -> STRING
Rule 47    valor -> expresionesAritmeticas
Rule 48    valor -> condiciones
Rule 49    valor -> ID
Rule 50    valor -> estructurasDeDatos
Rule 51    expresionesAritmeticas -> expresionAritmetica
Rule 52    expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas
Rule 53    expresionAritmetica -> valor operador valor
Rule 54    expresionAritmetica -> LPAREN valor operador valor RPAREN
Rule 55    operador -> PLUS
Rule 56    operador -> MINUS
Rule 57    operador -> TIMES
Rule 58    operador -> DIVIDE
Rule 59    operador -> MOD
Rule 60    condiciones -> condicion
Rule 61    condiciones -> condicion conector condiciones
Rule 62    conector -> AND
Rule 63    conector -> OR
Rule 64    condicion -> valor operadorComp valor
Rule 65    condicion -> BOOL
Rule 66    operadorComp -> NOT_EQUAL
Rule 67    operadorComp -> LESS_THAN
Rule 68    operadorComp -> LESS_EQUAL
Rule 69    operadorComp -> GREATER_THAN
Rule 70    operadorComp -> GREATER_EQUAL
Rule 71    empty -> <empty>
Rule 72    imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN
Rule 73    imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN

Terminals, with rules where they appear

AND                  : 62
ASSIGN               : 
BOOL                 : 45 65
BOOL_TYPE            : 38
BREAK                : 
CASE                 : 19 20 25
CHAN                 : 
COMMA                : 8 9 31 41
COMMENT              : 
COMPLEX64            : 43
COMPLEX64_TYPE       : 36
CONST                : 
CONTINUE             : 
DEFAULT              : 21
DEFER                : 
DIVIDE               : 58
DOSPUNTOS            : 19 20 21 25 31 34
ELSE                 : 
EQUAL                : 32 33 34
FALLTHROUGH          : 
FLOAT64              : 42
FLOAT64_TYPE         : 35
FMT                  : 72 73
FOR                  : 
FUNC                 : 5
GO                   : 
GOTO                 : 
GREATER_EQUAL        : 70
GREATER_THAN         : 69
ID                   : 5 10 11 14 15 20 32 33 34 49
IF                   : 
ILLEGAL              : 
IMPORT               : 
INT                  : 44
INTERFACE            : 
INT_TYPE             : 37
LBRACE               : 5 14 15 16 27 28
LBRACKET             : 27 28
LESS_EQUAL           : 68
LESS_THAN            : 67
LPAREN               : 5 54 72 73
MAP                  : 27 28
MINUS                : 56
MOD                  : 59
NOT                  : 
NOT_EQUAL            : 66
OR                   : 63
PACKAGE              : 
PLUS                 : 55
PRINT_LN             : 72 73
PUNTO                : 11 11 11 72 73
RANGE                : 
RBRACE               : 5 14 15 16 27 28
RBRACKET             : 27 28
RETURN               : 
RPAREN               : 5 54 72 73
SELECT               : 
SEMICOLON            : 15
STRING               : 46
STRING_TYPE          : 39
STRUCT               : 
SWITCH               : 14 15 16
TIMES                : 57
TYPE                 : 
VAR                  : 32 33
error                : 

Nonterminals, with rules where they appear

argumento            : 6 8
argumentoVariadico   : 7 9
argumentos           : 5
asignacion           : 1 13
asignacionCorta      : 12 15
bloqueCasosBooleanos : 16 18
bloqueCasosSwitch    : 14 15 24
casoBooleano         : 17 18
casoDefault          : 14 15 16
casoSwitch           : 23 24
codigo               : 0
condicion            : 60 61
condiciones          : 19 48 61
conector             : 61
elementoMapa         : 29 30
elementosMapa        : 28 30
empty                : 22
estructurasDeDatos   : 50
expresionAritmetica  : 51 52
expresionesAritmeticas : 47 52
funcion              : 3
imprimir             : 4
mapa                 : 26
operador             : 52 53 54
operadorComp         : 64
sentenciaSwitch      : 2
subcodigo            : 5 19 20 21 25
tipoDato             : 10 11 27 27 28 28 32
valor                : 31 31 32 33 34 40 41 53 53 54 54 64 64
valores              : 25 41 72

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . asignacion
    (2) codigo -> . sentenciaSwitch
    (3) codigo -> . funcion
    (4) codigo -> . imprimir
    (32) asignacion -> . VAR ID tipoDato EQUAL valor
    (33) asignacion -> . VAR ID EQUAL valor
    (14) sentenciaSwitch -> . SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (15) sentenciaSwitch -> . SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (16) sentenciaSwitch -> . SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (5) funcion -> . FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (72) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (73) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    VAR             shift and go to state 6
    SWITCH          shift and go to state 7
    FUNC            shift and go to state 8
    FMT             shift and go to state 9

    codigo                         shift and go to state 1
    asignacion                     shift and go to state 2
    sentenciaSwitch                shift and go to state 3
    funcion                        shift and go to state 4
    imprimir                       shift and go to state 5

state 1

    (0) S' -> codigo .



state 2

    (1) codigo -> asignacion .

    $end            reduce using rule 1 (codigo -> asignacion .)


state 3

    (2) codigo -> sentenciaSwitch .

    $end            reduce using rule 2 (codigo -> sentenciaSwitch .)


state 4

    (3) codigo -> funcion .

    $end            reduce using rule 3 (codigo -> funcion .)


state 5

    (4) codigo -> imprimir .

    $end            reduce using rule 4 (codigo -> imprimir .)


state 6

    (32) asignacion -> VAR . ID tipoDato EQUAL valor
    (33) asignacion -> VAR . ID EQUAL valor

    ID              shift and go to state 10


state 7

    (14) sentenciaSwitch -> SWITCH . ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (15) sentenciaSwitch -> SWITCH . asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (16) sentenciaSwitch -> SWITCH . LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (34) asignacionCorta -> . ID DOSPUNTOS EQUAL valor

    ID              shift and go to state 11
    LBRACE          shift and go to state 12

    asignacionCorta                shift and go to state 13

state 8

    (5) funcion -> FUNC . ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE

    ID              shift and go to state 14


state 9

    (72) imprimir -> FMT . PUNTO PRINT_LN LPAREN valores RPAREN
    (73) imprimir -> FMT . PUNTO PRINT_LN LPAREN RPAREN

    PUNTO           shift and go to state 15


state 10

    (32) asignacion -> VAR ID . tipoDato EQUAL valor
    (33) asignacion -> VAR ID . EQUAL valor
    (35) tipoDato -> . FLOAT64_TYPE
    (36) tipoDato -> . COMPLEX64_TYPE
    (37) tipoDato -> . INT_TYPE
    (38) tipoDato -> . BOOL_TYPE
    (39) tipoDato -> . STRING_TYPE

    EQUAL           shift and go to state 17
    FLOAT64_TYPE    shift and go to state 18
    COMPLEX64_TYPE  shift and go to state 19
    INT_TYPE        shift and go to state 20
    BOOL_TYPE       shift and go to state 21
    STRING_TYPE     shift and go to state 22

    tipoDato                       shift and go to state 16

state 11

    (14) sentenciaSwitch -> SWITCH ID . LBRACE bloqueCasosSwitch casoDefault RBRACE
    (34) asignacionCorta -> ID . DOSPUNTOS EQUAL valor

    LBRACE          shift and go to state 23
    DOSPUNTOS       shift and go to state 24


state 12

    (16) sentenciaSwitch -> SWITCH LBRACE . bloqueCasosBooleanos casoDefault RBRACE
    (17) bloqueCasosBooleanos -> . casoBooleano
    (18) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (19) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (20) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    CASE            shift and go to state 27

    bloqueCasosBooleanos           shift and go to state 25
    casoBooleano                   shift and go to state 26

state 13

    (15) sentenciaSwitch -> SWITCH asignacionCorta . SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    SEMICOLON       shift and go to state 28


state 14

    (5) funcion -> FUNC ID . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE

    LPAREN          shift and go to state 29


state 15

    (72) imprimir -> FMT PUNTO . PRINT_LN LPAREN valores RPAREN
    (73) imprimir -> FMT PUNTO . PRINT_LN LPAREN RPAREN

    PRINT_LN        shift and go to state 30


state 16

    (32) asignacion -> VAR ID tipoDato . EQUAL valor

    EQUAL           shift and go to state 31


state 17

    (33) asignacion -> VAR ID EQUAL . valor
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 33
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 18

    (35) tipoDato -> FLOAT64_TYPE .

    EQUAL           reduce using rule 35 (tipoDato -> FLOAT64_TYPE .)
    COMMA           reduce using rule 35 (tipoDato -> FLOAT64_TYPE .)
    RPAREN          reduce using rule 35 (tipoDato -> FLOAT64_TYPE .)
    RBRACKET        reduce using rule 35 (tipoDato -> FLOAT64_TYPE .)
    LBRACE          reduce using rule 35 (tipoDato -> FLOAT64_TYPE .)


state 19

    (36) tipoDato -> COMPLEX64_TYPE .

    EQUAL           reduce using rule 36 (tipoDato -> COMPLEX64_TYPE .)
    COMMA           reduce using rule 36 (tipoDato -> COMPLEX64_TYPE .)
    RPAREN          reduce using rule 36 (tipoDato -> COMPLEX64_TYPE .)
    RBRACKET        reduce using rule 36 (tipoDato -> COMPLEX64_TYPE .)
    LBRACE          reduce using rule 36 (tipoDato -> COMPLEX64_TYPE .)


state 20

    (37) tipoDato -> INT_TYPE .

    EQUAL           reduce using rule 37 (tipoDato -> INT_TYPE .)
    COMMA           reduce using rule 37 (tipoDato -> INT_TYPE .)
    RPAREN          reduce using rule 37 (tipoDato -> INT_TYPE .)
    RBRACKET        reduce using rule 37 (tipoDato -> INT_TYPE .)
    LBRACE          reduce using rule 37 (tipoDato -> INT_TYPE .)


state 21

    (38) tipoDato -> BOOL_TYPE .

    EQUAL           reduce using rule 38 (tipoDato -> BOOL_TYPE .)
    COMMA           reduce using rule 38 (tipoDato -> BOOL_TYPE .)
    RPAREN          reduce using rule 38 (tipoDato -> BOOL_TYPE .)
    RBRACKET        reduce using rule 38 (tipoDato -> BOOL_TYPE .)
    LBRACE          reduce using rule 38 (tipoDato -> BOOL_TYPE .)


state 22

    (39) tipoDato -> STRING_TYPE .

    EQUAL           reduce using rule 39 (tipoDato -> STRING_TYPE .)
    COMMA           reduce using rule 39 (tipoDato -> STRING_TYPE .)
    RPAREN          reduce using rule 39 (tipoDato -> STRING_TYPE .)
    RBRACKET        reduce using rule 39 (tipoDato -> STRING_TYPE .)
    LBRACE          reduce using rule 39 (tipoDato -> STRING_TYPE .)


state 23

    (14) sentenciaSwitch -> SWITCH ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (23) bloqueCasosSwitch -> . casoSwitch
    (24) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (25) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 49

    bloqueCasosSwitch              shift and go to state 47
    casoSwitch                     shift and go to state 48

state 24

    (34) asignacionCorta -> ID DOSPUNTOS . EQUAL valor

    EQUAL           shift and go to state 50


state 25

    (16) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos . casoDefault RBRACE
    (21) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (22) casoDefault -> . empty
    (71) empty -> .

    DEFAULT         shift and go to state 52
    RBRACE          reduce using rule 71 (empty -> .)

    casoDefault                    shift and go to state 51
    empty                          shift and go to state 53

state 26

    (17) bloqueCasosBooleanos -> casoBooleano .
    (18) bloqueCasosBooleanos -> casoBooleano . bloqueCasosBooleanos
    (17) bloqueCasosBooleanos -> . casoBooleano
    (18) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (19) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (20) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 17 (bloqueCasosBooleanos -> casoBooleano .)
    RBRACE          reduce using rule 17 (bloqueCasosBooleanos -> casoBooleano .)
    CASE            shift and go to state 27

    casoBooleano                   shift and go to state 26
    bloqueCasosBooleanos           shift and go to state 54

state 27

    (19) casoBooleano -> CASE . condiciones DOSPUNTOS subcodigo
    (20) casoBooleano -> CASE . ID DOSPUNTOS subcodigo
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    ID              shift and go to state 56
    BOOL            shift and go to state 58
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 38
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    condiciones                    shift and go to state 55
    condicion                      shift and go to state 43
    valor                          shift and go to state 57
    expresionesAritmeticas         shift and go to state 39
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    mapa                           shift and go to state 44

state 28

    (15) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON . ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    ID              shift and go to state 59


state 29

    (5) funcion -> FUNC ID LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE
    (6) argumentos -> . argumento
    (7) argumentos -> . argumentoVariadico
    (8) argumentos -> . argumento COMMA
    (9) argumentos -> . argumentoVariadico COMMA
    (10) argumento -> . ID tipoDato
    (11) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    ID              shift and go to state 60

    argumentos                     shift and go to state 61
    argumento                      shift and go to state 62
    argumentoVariadico             shift and go to state 63

state 30

    (72) imprimir -> FMT PUNTO PRINT_LN . LPAREN valores RPAREN
    (73) imprimir -> FMT PUNTO PRINT_LN . LPAREN RPAREN

    LPAREN          shift and go to state 64


state 31

    (32) asignacion -> VAR ID tipoDato EQUAL . valor
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 65
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 32

    (49) valor -> ID .

    PLUS            reduce using rule 49 (valor -> ID .)
    MINUS           reduce using rule 49 (valor -> ID .)
    TIMES           reduce using rule 49 (valor -> ID .)
    DIVIDE          reduce using rule 49 (valor -> ID .)
    MOD             reduce using rule 49 (valor -> ID .)
    NOT_EQUAL       reduce using rule 49 (valor -> ID .)
    LESS_THAN       reduce using rule 49 (valor -> ID .)
    LESS_EQUAL      reduce using rule 49 (valor -> ID .)
    GREATER_THAN    reduce using rule 49 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 49 (valor -> ID .)
    $end            reduce using rule 49 (valor -> ID .)
    RBRACE          reduce using rule 49 (valor -> ID .)
    CASE            reduce using rule 49 (valor -> ID .)
    DEFAULT         reduce using rule 49 (valor -> ID .)
    COMMA           reduce using rule 49 (valor -> ID .)
    DOSPUNTOS       reduce using rule 49 (valor -> ID .)
    SEMICOLON       reduce using rule 49 (valor -> ID .)
    RPAREN          reduce using rule 49 (valor -> ID .)
    AND             reduce using rule 49 (valor -> ID .)
    OR              reduce using rule 49 (valor -> ID .)


state 33

    (33) asignacion -> VAR ID EQUAL valor .
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

    $end            reduce using rule 33 (asignacion -> VAR ID EQUAL valor .)
    RBRACE          reduce using rule 33 (asignacion -> VAR ID EQUAL valor .)
    CASE            reduce using rule 33 (asignacion -> VAR ID EQUAL valor .)
    DEFAULT         reduce using rule 33 (asignacion -> VAR ID EQUAL valor .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 34

    (42) valor -> FLOAT64 .

    PLUS            reduce using rule 42 (valor -> FLOAT64 .)
    MINUS           reduce using rule 42 (valor -> FLOAT64 .)
    TIMES           reduce using rule 42 (valor -> FLOAT64 .)
    DIVIDE          reduce using rule 42 (valor -> FLOAT64 .)
    MOD             reduce using rule 42 (valor -> FLOAT64 .)
    NOT_EQUAL       reduce using rule 42 (valor -> FLOAT64 .)
    LESS_THAN       reduce using rule 42 (valor -> FLOAT64 .)
    LESS_EQUAL      reduce using rule 42 (valor -> FLOAT64 .)
    GREATER_THAN    reduce using rule 42 (valor -> FLOAT64 .)
    GREATER_EQUAL   reduce using rule 42 (valor -> FLOAT64 .)
    $end            reduce using rule 42 (valor -> FLOAT64 .)
    RBRACE          reduce using rule 42 (valor -> FLOAT64 .)
    CASE            reduce using rule 42 (valor -> FLOAT64 .)
    DEFAULT         reduce using rule 42 (valor -> FLOAT64 .)
    COMMA           reduce using rule 42 (valor -> FLOAT64 .)
    DOSPUNTOS       reduce using rule 42 (valor -> FLOAT64 .)
    SEMICOLON       reduce using rule 42 (valor -> FLOAT64 .)
    RPAREN          reduce using rule 42 (valor -> FLOAT64 .)
    AND             reduce using rule 42 (valor -> FLOAT64 .)
    OR              reduce using rule 42 (valor -> FLOAT64 .)


state 35

    (43) valor -> COMPLEX64 .

    PLUS            reduce using rule 43 (valor -> COMPLEX64 .)
    MINUS           reduce using rule 43 (valor -> COMPLEX64 .)
    TIMES           reduce using rule 43 (valor -> COMPLEX64 .)
    DIVIDE          reduce using rule 43 (valor -> COMPLEX64 .)
    MOD             reduce using rule 43 (valor -> COMPLEX64 .)
    NOT_EQUAL       reduce using rule 43 (valor -> COMPLEX64 .)
    LESS_THAN       reduce using rule 43 (valor -> COMPLEX64 .)
    LESS_EQUAL      reduce using rule 43 (valor -> COMPLEX64 .)
    GREATER_THAN    reduce using rule 43 (valor -> COMPLEX64 .)
    GREATER_EQUAL   reduce using rule 43 (valor -> COMPLEX64 .)
    $end            reduce using rule 43 (valor -> COMPLEX64 .)
    RBRACE          reduce using rule 43 (valor -> COMPLEX64 .)
    CASE            reduce using rule 43 (valor -> COMPLEX64 .)
    DEFAULT         reduce using rule 43 (valor -> COMPLEX64 .)
    COMMA           reduce using rule 43 (valor -> COMPLEX64 .)
    DOSPUNTOS       reduce using rule 43 (valor -> COMPLEX64 .)
    SEMICOLON       reduce using rule 43 (valor -> COMPLEX64 .)
    RPAREN          reduce using rule 43 (valor -> COMPLEX64 .)
    AND             reduce using rule 43 (valor -> COMPLEX64 .)
    OR              reduce using rule 43 (valor -> COMPLEX64 .)


state 36

    (44) valor -> INT .

    PLUS            reduce using rule 44 (valor -> INT .)
    MINUS           reduce using rule 44 (valor -> INT .)
    TIMES           reduce using rule 44 (valor -> INT .)
    DIVIDE          reduce using rule 44 (valor -> INT .)
    MOD             reduce using rule 44 (valor -> INT .)
    NOT_EQUAL       reduce using rule 44 (valor -> INT .)
    LESS_THAN       reduce using rule 44 (valor -> INT .)
    LESS_EQUAL      reduce using rule 44 (valor -> INT .)
    GREATER_THAN    reduce using rule 44 (valor -> INT .)
    GREATER_EQUAL   reduce using rule 44 (valor -> INT .)
    $end            reduce using rule 44 (valor -> INT .)
    RBRACE          reduce using rule 44 (valor -> INT .)
    CASE            reduce using rule 44 (valor -> INT .)
    DEFAULT         reduce using rule 44 (valor -> INT .)
    COMMA           reduce using rule 44 (valor -> INT .)
    DOSPUNTOS       reduce using rule 44 (valor -> INT .)
    SEMICOLON       reduce using rule 44 (valor -> INT .)
    RPAREN          reduce using rule 44 (valor -> INT .)
    AND             reduce using rule 44 (valor -> INT .)
    OR              reduce using rule 44 (valor -> INT .)


state 37

    (45) valor -> BOOL .
    (65) condicion -> BOOL .

  ! reduce/reduce conflict for AND resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for OR resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for $end resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for RBRACE resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for CASE resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for COMMA resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for RPAREN resolved using rule 45 (valor -> BOOL .)
    PLUS            reduce using rule 45 (valor -> BOOL .)
    MINUS           reduce using rule 45 (valor -> BOOL .)
    TIMES           reduce using rule 45 (valor -> BOOL .)
    DIVIDE          reduce using rule 45 (valor -> BOOL .)
    MOD             reduce using rule 45 (valor -> BOOL .)
    NOT_EQUAL       reduce using rule 45 (valor -> BOOL .)
    LESS_THAN       reduce using rule 45 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 45 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 45 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 45 (valor -> BOOL .)
    $end            reduce using rule 45 (valor -> BOOL .)
    RBRACE          reduce using rule 45 (valor -> BOOL .)
    CASE            reduce using rule 45 (valor -> BOOL .)
    DEFAULT         reduce using rule 45 (valor -> BOOL .)
    COMMA           reduce using rule 45 (valor -> BOOL .)
    DOSPUNTOS       reduce using rule 45 (valor -> BOOL .)
    SEMICOLON       reduce using rule 45 (valor -> BOOL .)
    RPAREN          reduce using rule 45 (valor -> BOOL .)
    AND             reduce using rule 45 (valor -> BOOL .)
    OR              reduce using rule 45 (valor -> BOOL .)

  ! AND             [ reduce using rule 65 (condicion -> BOOL .) ]
  ! OR              [ reduce using rule 65 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 65 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 65 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 65 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 65 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 65 (condicion -> BOOL .) ]
  ! NOT_EQUAL       [ reduce using rule 65 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 65 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 65 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 65 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 65 (condicion -> BOOL .) ]
  ! $end            [ reduce using rule 65 (condicion -> BOOL .) ]
  ! RBRACE          [ reduce using rule 65 (condicion -> BOOL .) ]
  ! CASE            [ reduce using rule 65 (condicion -> BOOL .) ]
  ! DEFAULT         [ reduce using rule 65 (condicion -> BOOL .) ]
  ! COMMA           [ reduce using rule 65 (condicion -> BOOL .) ]
  ! DOSPUNTOS       [ reduce using rule 65 (condicion -> BOOL .) ]
  ! SEMICOLON       [ reduce using rule 65 (condicion -> BOOL .) ]
  ! RPAREN          [ reduce using rule 65 (condicion -> BOOL .) ]


state 38

    (46) valor -> STRING .

    PLUS            reduce using rule 46 (valor -> STRING .)
    MINUS           reduce using rule 46 (valor -> STRING .)
    TIMES           reduce using rule 46 (valor -> STRING .)
    DIVIDE          reduce using rule 46 (valor -> STRING .)
    MOD             reduce using rule 46 (valor -> STRING .)
    NOT_EQUAL       reduce using rule 46 (valor -> STRING .)
    LESS_THAN       reduce using rule 46 (valor -> STRING .)
    LESS_EQUAL      reduce using rule 46 (valor -> STRING .)
    GREATER_THAN    reduce using rule 46 (valor -> STRING .)
    GREATER_EQUAL   reduce using rule 46 (valor -> STRING .)
    $end            reduce using rule 46 (valor -> STRING .)
    RBRACE          reduce using rule 46 (valor -> STRING .)
    CASE            reduce using rule 46 (valor -> STRING .)
    DEFAULT         reduce using rule 46 (valor -> STRING .)
    COMMA           reduce using rule 46 (valor -> STRING .)
    DOSPUNTOS       reduce using rule 46 (valor -> STRING .)
    SEMICOLON       reduce using rule 46 (valor -> STRING .)
    RPAREN          reduce using rule 46 (valor -> STRING .)
    AND             reduce using rule 46 (valor -> STRING .)
    OR              reduce using rule 46 (valor -> STRING .)


state 39

    (47) valor -> expresionesAritmeticas .

    PLUS            reduce using rule 47 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 47 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 47 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 47 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 47 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 47 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 47 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 47 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 47 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 47 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 47 (valor -> expresionesAritmeticas .)
    RBRACE          reduce using rule 47 (valor -> expresionesAritmeticas .)
    CASE            reduce using rule 47 (valor -> expresionesAritmeticas .)
    DEFAULT         reduce using rule 47 (valor -> expresionesAritmeticas .)
    COMMA           reduce using rule 47 (valor -> expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 47 (valor -> expresionesAritmeticas .)
    SEMICOLON       reduce using rule 47 (valor -> expresionesAritmeticas .)
    RPAREN          reduce using rule 47 (valor -> expresionesAritmeticas .)
    AND             reduce using rule 47 (valor -> expresionesAritmeticas .)
    OR              reduce using rule 47 (valor -> expresionesAritmeticas .)


state 40

    (48) valor -> condiciones .

    PLUS            reduce using rule 48 (valor -> condiciones .)
    MINUS           reduce using rule 48 (valor -> condiciones .)
    TIMES           reduce using rule 48 (valor -> condiciones .)
    DIVIDE          reduce using rule 48 (valor -> condiciones .)
    MOD             reduce using rule 48 (valor -> condiciones .)
    NOT_EQUAL       reduce using rule 48 (valor -> condiciones .)
    LESS_THAN       reduce using rule 48 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 48 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 48 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 48 (valor -> condiciones .)
    $end            reduce using rule 48 (valor -> condiciones .)
    RBRACE          reduce using rule 48 (valor -> condiciones .)
    CASE            reduce using rule 48 (valor -> condiciones .)
    DEFAULT         reduce using rule 48 (valor -> condiciones .)
    COMMA           reduce using rule 48 (valor -> condiciones .)
    DOSPUNTOS       reduce using rule 48 (valor -> condiciones .)
    SEMICOLON       reduce using rule 48 (valor -> condiciones .)
    RPAREN          reduce using rule 48 (valor -> condiciones .)
    AND             reduce using rule 48 (valor -> condiciones .)
    OR              reduce using rule 48 (valor -> condiciones .)


state 41

    (50) valor -> estructurasDeDatos .

    PLUS            reduce using rule 50 (valor -> estructurasDeDatos .)
    MINUS           reduce using rule 50 (valor -> estructurasDeDatos .)
    TIMES           reduce using rule 50 (valor -> estructurasDeDatos .)
    DIVIDE          reduce using rule 50 (valor -> estructurasDeDatos .)
    MOD             reduce using rule 50 (valor -> estructurasDeDatos .)
    NOT_EQUAL       reduce using rule 50 (valor -> estructurasDeDatos .)
    LESS_THAN       reduce using rule 50 (valor -> estructurasDeDatos .)
    LESS_EQUAL      reduce using rule 50 (valor -> estructurasDeDatos .)
    GREATER_THAN    reduce using rule 50 (valor -> estructurasDeDatos .)
    GREATER_EQUAL   reduce using rule 50 (valor -> estructurasDeDatos .)
    $end            reduce using rule 50 (valor -> estructurasDeDatos .)
    RBRACE          reduce using rule 50 (valor -> estructurasDeDatos .)
    CASE            reduce using rule 50 (valor -> estructurasDeDatos .)
    DEFAULT         reduce using rule 50 (valor -> estructurasDeDatos .)
    COMMA           reduce using rule 50 (valor -> estructurasDeDatos .)
    DOSPUNTOS       reduce using rule 50 (valor -> estructurasDeDatos .)
    SEMICOLON       reduce using rule 50 (valor -> estructurasDeDatos .)
    RPAREN          reduce using rule 50 (valor -> estructurasDeDatos .)
    AND             reduce using rule 50 (valor -> estructurasDeDatos .)
    OR              reduce using rule 50 (valor -> estructurasDeDatos .)


state 42

    (51) expresionesAritmeticas -> expresionAritmetica .
    (52) expresionesAritmeticas -> expresionAritmetica . operador expresionesAritmeticas
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NOT_EQUAL       reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_THAN       reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_EQUAL      reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_THAN    reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_EQUAL   reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    $end            reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    RBRACE          reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    CASE            reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    DEFAULT         reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    COMMA           reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    DOSPUNTOS       reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    SEMICOLON       reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    RPAREN          reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    AND             reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    OR              reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72

  ! PLUS            [ reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MINUS           [ reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! TIMES           [ reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! DIVIDE          [ reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MOD             [ reduce using rule 51 (expresionesAritmeticas -> expresionAritmetica .) ]

    operador                       shift and go to state 78

state 43

    (60) condiciones -> condicion .
    (61) condiciones -> condicion . conector condiciones
    (62) conector -> . AND
    (63) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PLUS            reduce using rule 60 (condiciones -> condicion .)
    MINUS           reduce using rule 60 (condiciones -> condicion .)
    TIMES           reduce using rule 60 (condiciones -> condicion .)
    DIVIDE          reduce using rule 60 (condiciones -> condicion .)
    MOD             reduce using rule 60 (condiciones -> condicion .)
    NOT_EQUAL       reduce using rule 60 (condiciones -> condicion .)
    LESS_THAN       reduce using rule 60 (condiciones -> condicion .)
    LESS_EQUAL      reduce using rule 60 (condiciones -> condicion .)
    GREATER_THAN    reduce using rule 60 (condiciones -> condicion .)
    GREATER_EQUAL   reduce using rule 60 (condiciones -> condicion .)
    $end            reduce using rule 60 (condiciones -> condicion .)
    RBRACE          reduce using rule 60 (condiciones -> condicion .)
    CASE            reduce using rule 60 (condiciones -> condicion .)
    DEFAULT         reduce using rule 60 (condiciones -> condicion .)
    DOSPUNTOS       reduce using rule 60 (condiciones -> condicion .)
    COMMA           reduce using rule 60 (condiciones -> condicion .)
    SEMICOLON       reduce using rule 60 (condiciones -> condicion .)
    RPAREN          reduce using rule 60 (condiciones -> condicion .)
    AND             shift and go to state 80
    OR              shift and go to state 81

  ! AND             [ reduce using rule 60 (condiciones -> condicion .) ]
  ! OR              [ reduce using rule 60 (condiciones -> condicion .) ]

    conector                       shift and go to state 79

state 44

    (26) estructurasDeDatos -> mapa .

    PLUS            reduce using rule 26 (estructurasDeDatos -> mapa .)
    MINUS           reduce using rule 26 (estructurasDeDatos -> mapa .)
    TIMES           reduce using rule 26 (estructurasDeDatos -> mapa .)
    DIVIDE          reduce using rule 26 (estructurasDeDatos -> mapa .)
    MOD             reduce using rule 26 (estructurasDeDatos -> mapa .)
    NOT_EQUAL       reduce using rule 26 (estructurasDeDatos -> mapa .)
    LESS_THAN       reduce using rule 26 (estructurasDeDatos -> mapa .)
    LESS_EQUAL      reduce using rule 26 (estructurasDeDatos -> mapa .)
    GREATER_THAN    reduce using rule 26 (estructurasDeDatos -> mapa .)
    GREATER_EQUAL   reduce using rule 26 (estructurasDeDatos -> mapa .)
    $end            reduce using rule 26 (estructurasDeDatos -> mapa .)
    RBRACE          reduce using rule 26 (estructurasDeDatos -> mapa .)
    CASE            reduce using rule 26 (estructurasDeDatos -> mapa .)
    DEFAULT         reduce using rule 26 (estructurasDeDatos -> mapa .)
    COMMA           reduce using rule 26 (estructurasDeDatos -> mapa .)
    DOSPUNTOS       reduce using rule 26 (estructurasDeDatos -> mapa .)
    SEMICOLON       reduce using rule 26 (estructurasDeDatos -> mapa .)
    RPAREN          reduce using rule 26 (estructurasDeDatos -> mapa .)
    AND             reduce using rule 26 (estructurasDeDatos -> mapa .)
    OR              reduce using rule 26 (estructurasDeDatos -> mapa .)


state 45

    (54) expresionAritmetica -> LPAREN . valor operador valor RPAREN
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 82
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 46

    (27) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LBRACKET        shift and go to state 83


state 47

    (14) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (21) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (22) casoDefault -> . empty
    (71) empty -> .

    DEFAULT         shift and go to state 52
    RBRACE          reduce using rule 71 (empty -> .)

    casoDefault                    shift and go to state 84
    empty                          shift and go to state 53

state 48

    (23) bloqueCasosSwitch -> casoSwitch .
    (24) bloqueCasosSwitch -> casoSwitch . bloqueCasosSwitch
    (23) bloqueCasosSwitch -> . casoSwitch
    (24) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (25) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 23 (bloqueCasosSwitch -> casoSwitch .)
    RBRACE          reduce using rule 23 (bloqueCasosSwitch -> casoSwitch .)
    CASE            shift and go to state 49

    casoSwitch                     shift and go to state 48
    bloqueCasosSwitch              shift and go to state 85

state 49

    (25) casoSwitch -> CASE . valores DOSPUNTOS subcodigo
    (40) valores -> . valor
    (41) valores -> . valor COMMA valores
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valores                        shift and go to state 86
    valor                          shift and go to state 87
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 50

    (34) asignacionCorta -> ID DOSPUNTOS EQUAL . valor
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 88
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 51

    (16) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault . RBRACE

    RBRACE          shift and go to state 89


state 52

    (21) casoDefault -> DEFAULT . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 90


state 53

    (22) casoDefault -> empty .

    RBRACE          reduce using rule 22 (casoDefault -> empty .)


state 54

    (18) bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .

    DEFAULT         reduce using rule 18 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)
    RBRACE          reduce using rule 18 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)


state 55

    (19) casoBooleano -> CASE condiciones . DOSPUNTOS subcodigo
    (48) valor -> condiciones .

    DOSPUNTOS       shift and go to state 91
    NOT_EQUAL       reduce using rule 48 (valor -> condiciones .)
    LESS_THAN       reduce using rule 48 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 48 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 48 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 48 (valor -> condiciones .)
    PLUS            reduce using rule 48 (valor -> condiciones .)
    MINUS           reduce using rule 48 (valor -> condiciones .)
    TIMES           reduce using rule 48 (valor -> condiciones .)
    DIVIDE          reduce using rule 48 (valor -> condiciones .)
    MOD             reduce using rule 48 (valor -> condiciones .)


state 56

    (20) casoBooleano -> CASE ID . DOSPUNTOS subcodigo
    (49) valor -> ID .

    DOSPUNTOS       shift and go to state 92
    NOT_EQUAL       reduce using rule 49 (valor -> ID .)
    LESS_THAN       reduce using rule 49 (valor -> ID .)
    LESS_EQUAL      reduce using rule 49 (valor -> ID .)
    GREATER_THAN    reduce using rule 49 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 49 (valor -> ID .)
    PLUS            reduce using rule 49 (valor -> ID .)
    MINUS           reduce using rule 49 (valor -> ID .)
    TIMES           reduce using rule 49 (valor -> ID .)
    DIVIDE          reduce using rule 49 (valor -> ID .)
    MOD             reduce using rule 49 (valor -> ID .)


state 57

    (64) condicion -> valor . operadorComp valor
    (53) expresionAritmetica -> valor . operador valor
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD

    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72

    operadorComp                   shift and go to state 67
    operador                       shift and go to state 66

state 58

    (65) condicion -> BOOL .
    (45) valor -> BOOL .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 45 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 45 (valor -> BOOL .)
    AND             reduce using rule 65 (condicion -> BOOL .)
    OR              reduce using rule 65 (condicion -> BOOL .)
    DOSPUNTOS       reduce using rule 65 (condicion -> BOOL .)
    $end            reduce using rule 65 (condicion -> BOOL .)
    RBRACE          reduce using rule 65 (condicion -> BOOL .)
    CASE            reduce using rule 65 (condicion -> BOOL .)
    DEFAULT         reduce using rule 65 (condicion -> BOOL .)
    COMMA           reduce using rule 65 (condicion -> BOOL .)
    SEMICOLON       reduce using rule 65 (condicion -> BOOL .)
    RPAREN          reduce using rule 65 (condicion -> BOOL .)
    NOT_EQUAL       reduce using rule 45 (valor -> BOOL .)
    LESS_THAN       reduce using rule 45 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 45 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 45 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 45 (valor -> BOOL .)
    PLUS            reduce using rule 45 (valor -> BOOL .)
    MINUS           reduce using rule 45 (valor -> BOOL .)
    TIMES           reduce using rule 45 (valor -> BOOL .)
    DIVIDE          reduce using rule 45 (valor -> BOOL .)
    MOD             reduce using rule 45 (valor -> BOOL .)

  ! NOT_EQUAL       [ reduce using rule 65 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 65 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 65 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 65 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 65 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 65 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 65 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 65 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 65 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 65 (condicion -> BOOL .) ]


state 59

    (15) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID . LBRACE bloqueCasosSwitch casoDefault RBRACE

    LBRACE          shift and go to state 93


state 60

    (10) argumento -> ID . tipoDato
    (11) argumentoVariadico -> ID . PUNTO PUNTO PUNTO tipoDato
    (35) tipoDato -> . FLOAT64_TYPE
    (36) tipoDato -> . COMPLEX64_TYPE
    (37) tipoDato -> . INT_TYPE
    (38) tipoDato -> . BOOL_TYPE
    (39) tipoDato -> . STRING_TYPE

    PUNTO           shift and go to state 95
    FLOAT64_TYPE    shift and go to state 18
    COMPLEX64_TYPE  shift and go to state 19
    INT_TYPE        shift and go to state 20
    BOOL_TYPE       shift and go to state 21
    STRING_TYPE     shift and go to state 22

    tipoDato                       shift and go to state 94

state 61

    (5) funcion -> FUNC ID LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE

    RPAREN          shift and go to state 96


state 62

    (6) argumentos -> argumento .
    (8) argumentos -> argumento . COMMA

    RPAREN          reduce using rule 6 (argumentos -> argumento .)
    COMMA           shift and go to state 97


state 63

    (7) argumentos -> argumentoVariadico .
    (9) argumentos -> argumentoVariadico . COMMA

    RPAREN          reduce using rule 7 (argumentos -> argumentoVariadico .)
    COMMA           shift and go to state 98


state 64

    (72) imprimir -> FMT PUNTO PRINT_LN LPAREN . valores RPAREN
    (73) imprimir -> FMT PUNTO PRINT_LN LPAREN . RPAREN
    (40) valores -> . valor
    (41) valores -> . valor COMMA valores
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RPAREN          shift and go to state 100
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valores                        shift and go to state 99
    valor                          shift and go to state 87
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 65

    (32) asignacion -> VAR ID tipoDato EQUAL valor .
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

    $end            reduce using rule 32 (asignacion -> VAR ID tipoDato EQUAL valor .)
    RBRACE          reduce using rule 32 (asignacion -> VAR ID tipoDato EQUAL valor .)
    CASE            reduce using rule 32 (asignacion -> VAR ID tipoDato EQUAL valor .)
    DEFAULT         reduce using rule 32 (asignacion -> VAR ID tipoDato EQUAL valor .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 66

    (53) expresionAritmetica -> valor operador . valor
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 101
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 67

    (64) condicion -> valor operadorComp . valor
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 102
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 68

    (55) operador -> PLUS .

    FLOAT64         reduce using rule 55 (operador -> PLUS .)
    COMPLEX64       reduce using rule 55 (operador -> PLUS .)
    INT             reduce using rule 55 (operador -> PLUS .)
    BOOL            reduce using rule 55 (operador -> PLUS .)
    STRING          reduce using rule 55 (operador -> PLUS .)
    ID              reduce using rule 55 (operador -> PLUS .)
    LPAREN          reduce using rule 55 (operador -> PLUS .)
    MAP             reduce using rule 55 (operador -> PLUS .)


state 69

    (56) operador -> MINUS .

    FLOAT64         reduce using rule 56 (operador -> MINUS .)
    COMPLEX64       reduce using rule 56 (operador -> MINUS .)
    INT             reduce using rule 56 (operador -> MINUS .)
    BOOL            reduce using rule 56 (operador -> MINUS .)
    STRING          reduce using rule 56 (operador -> MINUS .)
    ID              reduce using rule 56 (operador -> MINUS .)
    LPAREN          reduce using rule 56 (operador -> MINUS .)
    MAP             reduce using rule 56 (operador -> MINUS .)


state 70

    (57) operador -> TIMES .

    FLOAT64         reduce using rule 57 (operador -> TIMES .)
    COMPLEX64       reduce using rule 57 (operador -> TIMES .)
    INT             reduce using rule 57 (operador -> TIMES .)
    BOOL            reduce using rule 57 (operador -> TIMES .)
    STRING          reduce using rule 57 (operador -> TIMES .)
    ID              reduce using rule 57 (operador -> TIMES .)
    LPAREN          reduce using rule 57 (operador -> TIMES .)
    MAP             reduce using rule 57 (operador -> TIMES .)


state 71

    (58) operador -> DIVIDE .

    FLOAT64         reduce using rule 58 (operador -> DIVIDE .)
    COMPLEX64       reduce using rule 58 (operador -> DIVIDE .)
    INT             reduce using rule 58 (operador -> DIVIDE .)
    BOOL            reduce using rule 58 (operador -> DIVIDE .)
    STRING          reduce using rule 58 (operador -> DIVIDE .)
    ID              reduce using rule 58 (operador -> DIVIDE .)
    LPAREN          reduce using rule 58 (operador -> DIVIDE .)
    MAP             reduce using rule 58 (operador -> DIVIDE .)


state 72

    (59) operador -> MOD .

    FLOAT64         reduce using rule 59 (operador -> MOD .)
    COMPLEX64       reduce using rule 59 (operador -> MOD .)
    INT             reduce using rule 59 (operador -> MOD .)
    BOOL            reduce using rule 59 (operador -> MOD .)
    STRING          reduce using rule 59 (operador -> MOD .)
    ID              reduce using rule 59 (operador -> MOD .)
    LPAREN          reduce using rule 59 (operador -> MOD .)
    MAP             reduce using rule 59 (operador -> MOD .)


state 73

    (66) operadorComp -> NOT_EQUAL .

    FLOAT64         reduce using rule 66 (operadorComp -> NOT_EQUAL .)
    COMPLEX64       reduce using rule 66 (operadorComp -> NOT_EQUAL .)
    INT             reduce using rule 66 (operadorComp -> NOT_EQUAL .)
    BOOL            reduce using rule 66 (operadorComp -> NOT_EQUAL .)
    STRING          reduce using rule 66 (operadorComp -> NOT_EQUAL .)
    ID              reduce using rule 66 (operadorComp -> NOT_EQUAL .)
    LPAREN          reduce using rule 66 (operadorComp -> NOT_EQUAL .)
    MAP             reduce using rule 66 (operadorComp -> NOT_EQUAL .)


state 74

    (67) operadorComp -> LESS_THAN .

    FLOAT64         reduce using rule 67 (operadorComp -> LESS_THAN .)
    COMPLEX64       reduce using rule 67 (operadorComp -> LESS_THAN .)
    INT             reduce using rule 67 (operadorComp -> LESS_THAN .)
    BOOL            reduce using rule 67 (operadorComp -> LESS_THAN .)
    STRING          reduce using rule 67 (operadorComp -> LESS_THAN .)
    ID              reduce using rule 67 (operadorComp -> LESS_THAN .)
    LPAREN          reduce using rule 67 (operadorComp -> LESS_THAN .)
    MAP             reduce using rule 67 (operadorComp -> LESS_THAN .)


state 75

    (68) operadorComp -> LESS_EQUAL .

    FLOAT64         reduce using rule 68 (operadorComp -> LESS_EQUAL .)
    COMPLEX64       reduce using rule 68 (operadorComp -> LESS_EQUAL .)
    INT             reduce using rule 68 (operadorComp -> LESS_EQUAL .)
    BOOL            reduce using rule 68 (operadorComp -> LESS_EQUAL .)
    STRING          reduce using rule 68 (operadorComp -> LESS_EQUAL .)
    ID              reduce using rule 68 (operadorComp -> LESS_EQUAL .)
    LPAREN          reduce using rule 68 (operadorComp -> LESS_EQUAL .)
    MAP             reduce using rule 68 (operadorComp -> LESS_EQUAL .)


state 76

    (69) operadorComp -> GREATER_THAN .

    FLOAT64         reduce using rule 69 (operadorComp -> GREATER_THAN .)
    COMPLEX64       reduce using rule 69 (operadorComp -> GREATER_THAN .)
    INT             reduce using rule 69 (operadorComp -> GREATER_THAN .)
    BOOL            reduce using rule 69 (operadorComp -> GREATER_THAN .)
    STRING          reduce using rule 69 (operadorComp -> GREATER_THAN .)
    ID              reduce using rule 69 (operadorComp -> GREATER_THAN .)
    LPAREN          reduce using rule 69 (operadorComp -> GREATER_THAN .)
    MAP             reduce using rule 69 (operadorComp -> GREATER_THAN .)


state 77

    (70) operadorComp -> GREATER_EQUAL .

    FLOAT64         reduce using rule 70 (operadorComp -> GREATER_EQUAL .)
    COMPLEX64       reduce using rule 70 (operadorComp -> GREATER_EQUAL .)
    INT             reduce using rule 70 (operadorComp -> GREATER_EQUAL .)
    BOOL            reduce using rule 70 (operadorComp -> GREATER_EQUAL .)
    STRING          reduce using rule 70 (operadorComp -> GREATER_EQUAL .)
    ID              reduce using rule 70 (operadorComp -> GREATER_EQUAL .)
    LPAREN          reduce using rule 70 (operadorComp -> GREATER_EQUAL .)
    MAP             reduce using rule 70 (operadorComp -> GREATER_EQUAL .)


state 78

    (52) expresionesAritmeticas -> expresionAritmetica operador . expresionesAritmeticas
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LPAREN          shift and go to state 45
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    MAP             shift and go to state 46

    expresionAritmetica            shift and go to state 42
    expresionesAritmeticas         shift and go to state 103
    valor                          shift and go to state 104
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 79

    (61) condiciones -> condicion conector . condiciones
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    BOOL            shift and go to state 58
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    condicion                      shift and go to state 43
    condiciones                    shift and go to state 105
    valor                          shift and go to state 57
    expresionesAritmeticas         shift and go to state 39
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    mapa                           shift and go to state 44

state 80

    (62) conector -> AND .

    BOOL            reduce using rule 62 (conector -> AND .)
    FLOAT64         reduce using rule 62 (conector -> AND .)
    COMPLEX64       reduce using rule 62 (conector -> AND .)
    INT             reduce using rule 62 (conector -> AND .)
    STRING          reduce using rule 62 (conector -> AND .)
    ID              reduce using rule 62 (conector -> AND .)
    LPAREN          reduce using rule 62 (conector -> AND .)
    MAP             reduce using rule 62 (conector -> AND .)


state 81

    (63) conector -> OR .

    BOOL            reduce using rule 63 (conector -> OR .)
    FLOAT64         reduce using rule 63 (conector -> OR .)
    COMPLEX64       reduce using rule 63 (conector -> OR .)
    INT             reduce using rule 63 (conector -> OR .)
    STRING          reduce using rule 63 (conector -> OR .)
    ID              reduce using rule 63 (conector -> OR .)
    LPAREN          reduce using rule 63 (conector -> OR .)
    MAP             reduce using rule 63 (conector -> OR .)


state 82

    (54) expresionAritmetica -> LPAREN valor . operador valor RPAREN
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

    operador                       shift and go to state 106
    operadorComp                   shift and go to state 67

state 83

    (27) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (35) tipoDato -> . FLOAT64_TYPE
    (36) tipoDato -> . COMPLEX64_TYPE
    (37) tipoDato -> . INT_TYPE
    (38) tipoDato -> . BOOL_TYPE
    (39) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 18
    COMPLEX64_TYPE  shift and go to state 19
    INT_TYPE        shift and go to state 20
    BOOL_TYPE       shift and go to state 21
    STRING_TYPE     shift and go to state 22

    tipoDato                       shift and go to state 107

state 84

    (14) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 108


state 85

    (24) bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .

    DEFAULT         reduce using rule 24 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)
    RBRACE          reduce using rule 24 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)


state 86

    (25) casoSwitch -> CASE valores . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 109


state 87

    (40) valores -> valor .
    (41) valores -> valor . COMMA valores
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

    DOSPUNTOS       reduce using rule 40 (valores -> valor .)
    RPAREN          reduce using rule 40 (valores -> valor .)
    COMMA           shift and go to state 110
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 88

    (34) asignacionCorta -> ID DOSPUNTOS EQUAL valor .
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

    SEMICOLON       reduce using rule 34 (asignacionCorta -> ID DOSPUNTOS EQUAL valor .)
    RBRACE          reduce using rule 34 (asignacionCorta -> ID DOSPUNTOS EQUAL valor .)
    CASE            reduce using rule 34 (asignacionCorta -> ID DOSPUNTOS EQUAL valor .)
    DEFAULT         reduce using rule 34 (asignacionCorta -> ID DOSPUNTOS EQUAL valor .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 89

    (16) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .

    $end            reduce using rule 16 (sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .)


state 90

    (21) casoDefault -> DEFAULT DOSPUNTOS . subcodigo
    (12) subcodigo -> . asignacionCorta
    (13) subcodigo -> . asignacion
    (34) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (32) asignacion -> . VAR ID tipoDato EQUAL valor
    (33) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 114
    VAR             shift and go to state 6

    subcodigo                      shift and go to state 111
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 91

    (19) casoBooleano -> CASE condiciones DOSPUNTOS . subcodigo
    (12) subcodigo -> . asignacionCorta
    (13) subcodigo -> . asignacion
    (34) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (32) asignacion -> . VAR ID tipoDato EQUAL valor
    (33) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 114
    VAR             shift and go to state 6

    subcodigo                      shift and go to state 115
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 92

    (20) casoBooleano -> CASE ID DOSPUNTOS . subcodigo
    (12) subcodigo -> . asignacionCorta
    (13) subcodigo -> . asignacion
    (34) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (32) asignacion -> . VAR ID tipoDato EQUAL valor
    (33) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 114
    VAR             shift and go to state 6

    subcodigo                      shift and go to state 116
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 93

    (15) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (23) bloqueCasosSwitch -> . casoSwitch
    (24) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (25) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 49

    bloqueCasosSwitch              shift and go to state 117
    casoSwitch                     shift and go to state 48

state 94

    (10) argumento -> ID tipoDato .

    COMMA           reduce using rule 10 (argumento -> ID tipoDato .)
    RPAREN          reduce using rule 10 (argumento -> ID tipoDato .)


state 95

    (11) argumentoVariadico -> ID PUNTO . PUNTO PUNTO tipoDato

    PUNTO           shift and go to state 118


state 96

    (5) funcion -> FUNC ID LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 119


state 97

    (8) argumentos -> argumento COMMA .

    RPAREN          reduce using rule 8 (argumentos -> argumento COMMA .)


state 98

    (9) argumentos -> argumentoVariadico COMMA .

    RPAREN          reduce using rule 9 (argumentos -> argumentoVariadico COMMA .)


state 99

    (72) imprimir -> FMT PUNTO PRINT_LN LPAREN valores . RPAREN

    RPAREN          shift and go to state 120


state 100

    (73) imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .

    $end            reduce using rule 73 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)


state 101

    (53) expresionAritmetica -> valor operador valor .
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    $end            reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    RBRACE          reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    CASE            reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    DEFAULT         reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    COMMA           reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    DOSPUNTOS       reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    SEMICOLON       reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    RPAREN          reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    AND             reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    OR              reduce using rule 53 (expresionAritmetica -> valor operador valor .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

  ! PLUS            [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 102

    (64) condicion -> valor operadorComp valor .
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    AND             reduce using rule 64 (condicion -> valor operadorComp valor .)
    OR              reduce using rule 64 (condicion -> valor operadorComp valor .)
    $end            reduce using rule 64 (condicion -> valor operadorComp valor .)
    RBRACE          reduce using rule 64 (condicion -> valor operadorComp valor .)
    CASE            reduce using rule 64 (condicion -> valor operadorComp valor .)
    DEFAULT         reduce using rule 64 (condicion -> valor operadorComp valor .)
    DOSPUNTOS       reduce using rule 64 (condicion -> valor operadorComp valor .)
    COMMA           reduce using rule 64 (condicion -> valor operadorComp valor .)
    SEMICOLON       reduce using rule 64 (condicion -> valor operadorComp valor .)
    RPAREN          reduce using rule 64 (condicion -> valor operadorComp valor .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

  ! PLUS            [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! MINUS           [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! TIMES           [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! DIVIDE          [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! MOD             [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! NOT_EQUAL       [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! LESS_THAN       [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! LESS_EQUAL      [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! GREATER_THAN    [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 64 (condicion -> valor operadorComp valor .) ]

    operadorComp                   shift and go to state 67
    operador                       shift and go to state 66

state 103

    (52) expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .
    (47) valor -> expresionesAritmeticas .

  ! reduce/reduce conflict for PLUS resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for TIMES resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MOD resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 47 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 47 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RBRACE          reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    CASE            reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DEFAULT         reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    COMMA           reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    SEMICOLON       reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RPAREN          reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    AND             reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    OR              reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    PLUS            reduce using rule 47 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 47 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 47 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 47 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 47 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 47 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 47 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 47 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 47 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 47 (valor -> expresionesAritmeticas .)

  ! PLUS            [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MINUS           [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! TIMES           [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! DIVIDE          [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MOD             [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! NOT_EQUAL       [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_THAN       [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_EQUAL      [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_THAN    [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_EQUAL   [ reduce using rule 52 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]


state 104

    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 105

    (61) condiciones -> condicion conector condiciones .
    (48) valor -> condiciones .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for PLUS resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for TIMES resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 48 (valor -> condiciones .)
  ! reduce/reduce conflict for MOD resolved using rule 48 (valor -> condiciones .)
    $end            reduce using rule 61 (condiciones -> condicion conector condiciones .)
    RBRACE          reduce using rule 61 (condiciones -> condicion conector condiciones .)
    CASE            reduce using rule 61 (condiciones -> condicion conector condiciones .)
    DEFAULT         reduce using rule 61 (condiciones -> condicion conector condiciones .)
    DOSPUNTOS       reduce using rule 61 (condiciones -> condicion conector condiciones .)
    COMMA           reduce using rule 61 (condiciones -> condicion conector condiciones .)
    SEMICOLON       reduce using rule 61 (condiciones -> condicion conector condiciones .)
    RPAREN          reduce using rule 61 (condiciones -> condicion conector condiciones .)
    AND             reduce using rule 61 (condiciones -> condicion conector condiciones .)
    OR              reduce using rule 61 (condiciones -> condicion conector condiciones .)
    NOT_EQUAL       reduce using rule 48 (valor -> condiciones .)
    LESS_THAN       reduce using rule 48 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 48 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 48 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 48 (valor -> condiciones .)
    PLUS            reduce using rule 48 (valor -> condiciones .)
    MINUS           reduce using rule 48 (valor -> condiciones .)
    TIMES           reduce using rule 48 (valor -> condiciones .)
    DIVIDE          reduce using rule 48 (valor -> condiciones .)
    MOD             reduce using rule 48 (valor -> condiciones .)

  ! PLUS            [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! MINUS           [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! TIMES           [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! DIVIDE          [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! MOD             [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! NOT_EQUAL       [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! LESS_THAN       [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! LESS_EQUAL      [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_THAN    [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_EQUAL   [ reduce using rule 61 (condiciones -> condicion conector condiciones .) ]


state 106

    (54) expresionAritmetica -> LPAREN valor operador . valor RPAREN
    (53) expresionAritmetica -> valor operador . valor
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 121
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 107

    (27) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACKET        shift and go to state 122


state 108

    (14) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 14 (sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 109

    (25) casoSwitch -> CASE valores DOSPUNTOS . subcodigo
    (12) subcodigo -> . asignacionCorta
    (13) subcodigo -> . asignacion
    (34) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (32) asignacion -> . VAR ID tipoDato EQUAL valor
    (33) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 114
    VAR             shift and go to state 6

    subcodigo                      shift and go to state 123
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 110

    (41) valores -> valor COMMA . valores
    (40) valores -> . valor
    (41) valores -> . valor COMMA valores
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 87
    valores                        shift and go to state 124
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 111

    (21) casoDefault -> DEFAULT DOSPUNTOS subcodigo .

    RBRACE          reduce using rule 21 (casoDefault -> DEFAULT DOSPUNTOS subcodigo .)


state 112

    (12) subcodigo -> asignacionCorta .

    RBRACE          reduce using rule 12 (subcodigo -> asignacionCorta .)
    CASE            reduce using rule 12 (subcodigo -> asignacionCorta .)
    DEFAULT         reduce using rule 12 (subcodigo -> asignacionCorta .)


state 113

    (13) subcodigo -> asignacion .

    RBRACE          reduce using rule 13 (subcodigo -> asignacion .)
    CASE            reduce using rule 13 (subcodigo -> asignacion .)
    DEFAULT         reduce using rule 13 (subcodigo -> asignacion .)


state 114

    (34) asignacionCorta -> ID . DOSPUNTOS EQUAL valor

    DOSPUNTOS       shift and go to state 24


state 115

    (19) casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .

    CASE            reduce using rule 19 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 19 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 19 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)


state 116

    (20) casoBooleano -> CASE ID DOSPUNTOS subcodigo .

    CASE            reduce using rule 20 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 20 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 20 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)


state 117

    (15) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (21) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (22) casoDefault -> . empty
    (71) empty -> .

    DEFAULT         shift and go to state 52
    RBRACE          reduce using rule 71 (empty -> .)

    casoDefault                    shift and go to state 125
    empty                          shift and go to state 53

state 118

    (11) argumentoVariadico -> ID PUNTO PUNTO . PUNTO tipoDato

    PUNTO           shift and go to state 126


state 119

    (5) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE
    (12) subcodigo -> . asignacionCorta
    (13) subcodigo -> . asignacion
    (34) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (32) asignacion -> . VAR ID tipoDato EQUAL valor
    (33) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 114
    VAR             shift and go to state 6

    subcodigo                      shift and go to state 127
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 120

    (72) imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .

    $end            reduce using rule 72 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)


state 121

    (54) expresionAritmetica -> LPAREN valor operador valor . RPAREN
    (53) expresionAritmetica -> valor operador valor .
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    RPAREN          shift and go to state 128
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

  ! PLUS            [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 53 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 122

    (27) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE RBRACE
    (28) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE elementosMapa RBRACE
    (35) tipoDato -> . FLOAT64_TYPE
    (36) tipoDato -> . COMPLEX64_TYPE
    (37) tipoDato -> . INT_TYPE
    (38) tipoDato -> . BOOL_TYPE
    (39) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 18
    COMPLEX64_TYPE  shift and go to state 19
    INT_TYPE        shift and go to state 20
    BOOL_TYPE       shift and go to state 21
    STRING_TYPE     shift and go to state 22

    tipoDato                       shift and go to state 129

state 123

    (25) casoSwitch -> CASE valores DOSPUNTOS subcodigo .

    CASE            reduce using rule 25 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 25 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 25 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)


state 124

    (41) valores -> valor COMMA valores .

    DOSPUNTOS       reduce using rule 41 (valores -> valor COMMA valores .)
    RPAREN          reduce using rule 41 (valores -> valor COMMA valores .)


state 125

    (15) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 130


state 126

    (11) argumentoVariadico -> ID PUNTO PUNTO PUNTO . tipoDato
    (35) tipoDato -> . FLOAT64_TYPE
    (36) tipoDato -> . COMPLEX64_TYPE
    (37) tipoDato -> . INT_TYPE
    (38) tipoDato -> . BOOL_TYPE
    (39) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 18
    COMPLEX64_TYPE  shift and go to state 19
    INT_TYPE        shift and go to state 20
    BOOL_TYPE       shift and go to state 21
    STRING_TYPE     shift and go to state 22

    tipoDato                       shift and go to state 131

state 127

    (5) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 132


state 128

    (54) expresionAritmetica -> LPAREN valor operador valor RPAREN .

    PLUS            reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MINUS           reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    TIMES           reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DIVIDE          reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MOD             reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    NOT_EQUAL       reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_THAN       reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_EQUAL      reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_THAN    reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_EQUAL   reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    $end            reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RBRACE          reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    CASE            reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DEFAULT         reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    COMMA           reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DOSPUNTOS       reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    SEMICOLON       reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RPAREN          reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    AND             reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    OR              reduce using rule 54 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)


state 129

    (27) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE RBRACE
    (28) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE elementosMapa RBRACE

    LBRACE          shift and go to state 133


state 130

    (15) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 15 (sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 131

    (11) argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .

    COMMA           reduce using rule 11 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)
    RPAREN          reduce using rule 11 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)


state 132

    (5) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 5 (funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .)


state 133

    (27) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . RBRACE
    (28) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . elementosMapa RBRACE
    (29) elementosMapa -> . elementoMapa
    (30) elementosMapa -> . elementoMapa elementosMapa
    (31) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACE          shift and go to state 134
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    elementosMapa                  shift and go to state 135
    elementoMapa                   shift and go to state 136
    valor                          shift and go to state 137
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 134

    (27) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .

    PLUS            reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MINUS           reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    TIMES           reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DIVIDE          reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MOD             reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_THAN       reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    $end            reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RBRACE          reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    CASE            reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DEFAULT         reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    COMMA           reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DOSPUNTOS       reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    SEMICOLON       reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RPAREN          reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    AND             reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    OR              reduce using rule 27 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)


state 135

    (28) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa . RBRACE

    RBRACE          shift and go to state 138


state 136

    (29) elementosMapa -> elementoMapa .
    (30) elementosMapa -> elementoMapa . elementosMapa
    (29) elementosMapa -> . elementoMapa
    (30) elementosMapa -> . elementoMapa elementosMapa
    (31) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACE          reduce using rule 29 (elementosMapa -> elementoMapa .)
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    elementoMapa                   shift and go to state 136
    elementosMapa                  shift and go to state 139
    valor                          shift and go to state 137
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 137

    (31) elementoMapa -> valor . DOSPUNTOS valor COMMA
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

    DOSPUNTOS       shift and go to state 140
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 138

    (28) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .

    PLUS            reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MINUS           reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    TIMES           reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DIVIDE          reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MOD             reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    NOT_EQUAL       reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_THAN       reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_EQUAL      reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_THAN    reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_EQUAL   reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    $end            reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RBRACE          reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    CASE            reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DEFAULT         reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    COMMA           reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DOSPUNTOS       reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    SEMICOLON       reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RPAREN          reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    AND             reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    OR              reduce using rule 28 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)


state 139

    (30) elementosMapa -> elementoMapa elementosMapa .

    RBRACE          reduce using rule 30 (elementosMapa -> elementoMapa elementosMapa .)


state 140

    (31) elementoMapa -> valor DOSPUNTOS . valor COMMA
    (42) valor -> . FLOAT64
    (43) valor -> . COMPLEX64
    (44) valor -> . INT
    (45) valor -> . BOOL
    (46) valor -> . STRING
    (47) valor -> . expresionesAritmeticas
    (48) valor -> . condiciones
    (49) valor -> . ID
    (50) valor -> . estructurasDeDatos
    (51) expresionesAritmeticas -> . expresionAritmetica
    (52) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) condiciones -> . condicion
    (61) condiciones -> . condicion conector condiciones
    (26) estructurasDeDatos -> . mapa
    (53) expresionAritmetica -> . valor operador valor
    (54) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (64) condicion -> . valor operadorComp valor
    (65) condicion -> . BOOL
    (27) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (28) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 37
    STRING          shift and go to state 38
    ID              shift and go to state 32
    LPAREN          shift and go to state 45
    MAP             shift and go to state 46

    valor                          shift and go to state 141
    expresionesAritmeticas         shift and go to state 39
    condiciones                    shift and go to state 40
    estructurasDeDatos             shift and go to state 41
    expresionAritmetica            shift and go to state 42
    condicion                      shift and go to state 43
    mapa                           shift and go to state 44

state 141

    (31) elementoMapa -> valor DOSPUNTOS valor . COMMA
    (53) expresionAritmetica -> valor . operador valor
    (64) condicion -> valor . operadorComp valor
    (55) operador -> . PLUS
    (56) operador -> . MINUS
    (57) operador -> . TIMES
    (58) operador -> . DIVIDE
    (59) operador -> . MOD
    (66) operadorComp -> . NOT_EQUAL
    (67) operadorComp -> . LESS_THAN
    (68) operadorComp -> . LESS_EQUAL
    (69) operadorComp -> . GREATER_THAN
    (70) operadorComp -> . GREATER_EQUAL

    COMMA           shift and go to state 142
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 71
    MOD             shift and go to state 72
    NOT_EQUAL       shift and go to state 73
    LESS_THAN       shift and go to state 74
    LESS_EQUAL      shift and go to state 75
    GREATER_THAN    shift and go to state 76
    GREATER_EQUAL   shift and go to state 77

    operador                       shift and go to state 66
    operadorComp                   shift and go to state 67

state 142

    (31) elementoMapa -> valor DOSPUNTOS valor COMMA .

    FLOAT64         reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    COMPLEX64       reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    INT             reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    BOOL            reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    STRING          reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    ID              reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LPAREN          reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    MAP             reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    RBRACE          reduce using rule 31 (elementoMapa -> valor DOSPUNTOS valor COMMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for MOD in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for MOD in state 101 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 101 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for MOD in state 102 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 102 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 102 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 121 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 121 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 121 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 121 resolved as shift
WARNING: shift/reduce conflict for MOD in state 121 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 121 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 121 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 121 resolved as shift
WARNING: reduce/reduce conflict in state 37 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 37
WARNING: reduce/reduce conflict in state 58 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 58
WARNING: reduce/reduce conflict in state 103 resolved using rule (valor -> expresionesAritmeticas)
WARNING: rejected rule (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas) in state 103
WARNING: reduce/reduce conflict in state 105 resolved using rule (valor -> condiciones)
WARNING: rejected rule (condiciones -> condicion conector condiciones) in state 105
