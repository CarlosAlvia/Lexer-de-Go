Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CHAN
    COMMENT
    CONST
    CONTINUE
    DEFER
    ELSE
    EQUAL
    FALLTHROUGH
    FOR
    GO
    GOTO
    IF
    ILLEGAL
    IMPORT
    INTERFACE
    NOT
    PACKAGE
    RANGE
    RETURN
    SELECT
    STRUCT
    TYPE

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> asignacion
Rule 2     codigo -> sentenciaSwitch
Rule 3     codigo -> funcion
Rule 4     codigo -> funcionSinArg
Rule 5     codigo -> funcionAnonima
Rule 6     codigo -> imprimir
Rule 7     funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
Rule 8     argumentos -> argumento
Rule 9     argumentos -> argumentoVariadico
Rule 10    argumentos -> argumento COMMA
Rule 11    argumentos -> argumentoVariadico COMMA
Rule 12    argumento -> ID tipoDato
Rule 13    argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato
Rule 14    funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE
Rule 15    funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
Rule 16    funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
Rule 17    subcodigo -> asignacionCorta
Rule 18    subcodigo -> asignacion
Rule 19    sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 20    sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 21    sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
Rule 22    bloqueCasosBooleanos -> casoBooleano
Rule 23    bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos
Rule 24    casoBooleano -> CASE condiciones DOSPUNTOS subcodigo
Rule 25    casoBooleano -> CASE ID DOSPUNTOS subcodigo
Rule 26    casoDefault -> DEFAULT DOSPUNTOS subcodigo
Rule 27    casoDefault -> empty
Rule 28    bloqueCasosSwitch -> casoSwitch
Rule 29    bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch
Rule 30    casoSwitch -> CASE valores DOSPUNTOS subcodigo
Rule 31    estructurasDeDatos -> mapa
Rule 32    estructurasDeDatos -> array
Rule 33    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
Rule 34    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
Rule 35    elementosMapa -> elementoMapa
Rule 36    elementosMapa -> elementoMapa elementosMapa
Rule 37    elementoMapa -> valor DOSPUNTOS valor COMMA
Rule 38    array -> LBRACKET INT RBRACKET tipoDato
Rule 39    asignacion -> VAR ID tipoDato ASSIGN valor
Rule 40    asignacion -> VAR ID ASSIGN valor
Rule 41    asignacionCorta -> ID DOSPUNTOS ASSIGN valor
Rule 42    tipoDato -> FLOAT64_TYPE
Rule 43    tipoDato -> COMPLEX64_TYPE
Rule 44    tipoDato -> INT_TYPE
Rule 45    tipoDato -> BOOL_TYPE
Rule 46    tipoDato -> STRING_TYPE
Rule 47    valores -> valor
Rule 48    valores -> valor COMMA valores
Rule 49    valor -> FLOAT64
Rule 50    valor -> COMPLEX64
Rule 51    valor -> INT
Rule 52    valor -> BOOL
Rule 53    valor -> STRING
Rule 54    valor -> expresionesAritmeticas
Rule 55    valor -> condiciones
Rule 56    valor -> ID
Rule 57    valor -> estructurasDeDatos
Rule 58    expresionesAritmeticas -> expresionAritmetica
Rule 59    expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas
Rule 60    expresionAritmetica -> valor operador valor
Rule 61    expresionAritmetica -> LPAREN valor operador valor RPAREN
Rule 62    operador -> PLUS
Rule 63    operador -> MINUS
Rule 64    operador -> TIMES
Rule 65    operador -> DIVIDE
Rule 66    operador -> MOD
Rule 67    condiciones -> condicion
Rule 68    condiciones -> condicion conector condiciones
Rule 69    conector -> AND
Rule 70    conector -> OR
Rule 71    condicion -> valor operadorComp valor
Rule 72    condicion -> BOOL
Rule 73    operadorComp -> NOT_EQUAL
Rule 74    operadorComp -> LESS_THAN
Rule 75    operadorComp -> LESS_EQUAL
Rule 76    operadorComp -> GREATER_THAN
Rule 77    operadorComp -> GREATER_EQUAL
Rule 78    empty -> <empty>
Rule 79    imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN
Rule 80    imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN

Terminals, with rules where they appear

AND                  : 69
ASSIGN               : 39 40 41
BOOL                 : 52 72
BOOL_TYPE            : 45
BREAK                : 
CASE                 : 24 25 30
CHAN                 : 
COMMA                : 10 11 37 48
COMMENT              : 
COMPLEX64            : 50
COMPLEX64_TYPE       : 43
CONST                : 
CONTINUE             : 
DEFAULT              : 26
DEFER                : 
DIVIDE               : 65
DOSPUNTOS            : 24 25 26 30 37 41
ELSE                 : 
EQUAL                : 
FALLTHROUGH          : 
FLOAT64              : 49
FLOAT64_TYPE         : 42
FMT                  : 79 80
FOR                  : 
FUNC                 : 7 14 15 16
GO                   : 
GOTO                 : 
GREATER_EQUAL        : 77
GREATER_THAN         : 76
ID                   : 7 12 13 14 19 20 25 39 40 41 56
IF                   : 
ILLEGAL              : 
IMPORT               : 
INT                  : 38 51
INTERFACE            : 
INT_TYPE             : 44
LBRACE               : 7 14 15 16 19 20 21 33 34
LBRACKET             : 33 34 38
LESS_EQUAL           : 75
LESS_THAN            : 74
LPAREN               : 7 14 15 15 16 16 61 79 80
MAP                  : 33 34
MINUS                : 63
MOD                  : 66
NOT                  : 
NOT_EQUAL            : 73
OR                   : 70
PACKAGE              : 
PLUS                 : 62
PRINT_LN             : 79 80
PUNTO                : 13 13 13 79 80
RANGE                : 
RBRACE               : 7 14 15 16 19 20 21 33 34
RBRACKET             : 33 34 38
RETURN               : 
RPAREN               : 7 14 15 15 16 16 61 79 80
SELECT               : 
SEMICOLON            : 20
STRING               : 53
STRING_TYPE          : 46
STRUCT               : 
SWITCH               : 19 20 21
TIMES                : 64
TYPE                 : 
VAR                  : 39 40
error                : 

Nonterminals, with rules where they appear

argumento            : 8 10
argumentoVariadico   : 9 11
argumentos           : 7 16
array                : 32
asignacion           : 1 18
asignacionCorta      : 17 20
bloqueCasosBooleanos : 21 23
bloqueCasosSwitch    : 19 20 29
casoBooleano         : 22 23
casoDefault          : 19 20 21
casoSwitch           : 28 29
codigo               : 0
condicion            : 67 68
condiciones          : 24 55 68
conector             : 68
elementoMapa         : 35 36
elementosMapa        : 34 36
empty                : 27
estructurasDeDatos   : 57
expresionAritmetica  : 58 59
expresionesAritmeticas : 54 59
funcion              : 3
funcionAnonima       : 5
funcionSinArg        : 4
imprimir             : 6
mapa                 : 31
operador             : 59 60 61
operadorComp         : 71
sentenciaSwitch      : 2
subcodigo            : 7 14 15 16 24 25 26 30
tipoDato             : 12 13 33 33 34 34 38 39
valor                : 37 37 39 40 41 47 48 60 60 61 61 71 71
valores              : 30 48 79

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . asignacion
    (2) codigo -> . sentenciaSwitch
    (3) codigo -> . funcion
    (4) codigo -> . funcionSinArg
    (5) codigo -> . funcionAnonima
    (6) codigo -> . imprimir
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor
    (19) sentenciaSwitch -> . SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (20) sentenciaSwitch -> . SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (21) sentenciaSwitch -> . SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (7) funcion -> . FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (14) funcionSinArg -> . FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE
    (15) funcionAnonima -> . FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (16) funcionAnonima -> . FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (79) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (80) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    VAR             shift and go to state 8
    SWITCH          shift and go to state 9
    FUNC            shift and go to state 10
    FMT             shift and go to state 11

    codigo                         shift and go to state 1
    asignacion                     shift and go to state 2
    sentenciaSwitch                shift and go to state 3
    funcion                        shift and go to state 4
    funcionSinArg                  shift and go to state 5
    funcionAnonima                 shift and go to state 6
    imprimir                       shift and go to state 7

state 1

    (0) S' -> codigo .



state 2

    (1) codigo -> asignacion .

    $end            reduce using rule 1 (codigo -> asignacion .)


state 3

    (2) codigo -> sentenciaSwitch .

    $end            reduce using rule 2 (codigo -> sentenciaSwitch .)


state 4

    (3) codigo -> funcion .

    $end            reduce using rule 3 (codigo -> funcion .)


state 5

    (4) codigo -> funcionSinArg .

    $end            reduce using rule 4 (codigo -> funcionSinArg .)


state 6

    (5) codigo -> funcionAnonima .

    $end            reduce using rule 5 (codigo -> funcionAnonima .)


state 7

    (6) codigo -> imprimir .

    $end            reduce using rule 6 (codigo -> imprimir .)


state 8

    (39) asignacion -> VAR . ID tipoDato ASSIGN valor
    (40) asignacion -> VAR . ID ASSIGN valor

    ID              shift and go to state 12


state 9

    (19) sentenciaSwitch -> SWITCH . ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (20) sentenciaSwitch -> SWITCH . asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (21) sentenciaSwitch -> SWITCH . LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor

    ID              shift and go to state 13
    LBRACE          shift and go to state 14

    asignacionCorta                shift and go to state 15

state 10

    (7) funcion -> FUNC . ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (14) funcionSinArg -> FUNC . ID LPAREN RPAREN LBRACE subcodigo RBRACE
    (15) funcionAnonima -> FUNC . LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (16) funcionAnonima -> FUNC . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN

    ID              shift and go to state 16
    LPAREN          shift and go to state 17


state 11

    (79) imprimir -> FMT . PUNTO PRINT_LN LPAREN valores RPAREN
    (80) imprimir -> FMT . PUNTO PRINT_LN LPAREN RPAREN

    PUNTO           shift and go to state 18


state 12

    (39) asignacion -> VAR ID . tipoDato ASSIGN valor
    (40) asignacion -> VAR ID . ASSIGN valor
    (42) tipoDato -> . FLOAT64_TYPE
    (43) tipoDato -> . COMPLEX64_TYPE
    (44) tipoDato -> . INT_TYPE
    (45) tipoDato -> . BOOL_TYPE
    (46) tipoDato -> . STRING_TYPE

    ASSIGN          shift and go to state 20
    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 19

state 13

    (19) sentenciaSwitch -> SWITCH ID . LBRACE bloqueCasosSwitch casoDefault RBRACE
    (41) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor

    LBRACE          shift and go to state 26
    DOSPUNTOS       shift and go to state 27


state 14

    (21) sentenciaSwitch -> SWITCH LBRACE . bloqueCasosBooleanos casoDefault RBRACE
    (22) bloqueCasosBooleanos -> . casoBooleano
    (23) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (24) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (25) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    CASE            shift and go to state 30

    bloqueCasosBooleanos           shift and go to state 28
    casoBooleano                   shift and go to state 29

state 15

    (20) sentenciaSwitch -> SWITCH asignacionCorta . SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    SEMICOLON       shift and go to state 31


state 16

    (7) funcion -> FUNC ID . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (14) funcionSinArg -> FUNC ID . LPAREN RPAREN LBRACE subcodigo RBRACE

    LPAREN          shift and go to state 32


state 17

    (15) funcionAnonima -> FUNC LPAREN . RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (16) funcionAnonima -> FUNC LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (8) argumentos -> . argumento
    (9) argumentos -> . argumentoVariadico
    (10) argumentos -> . argumento COMMA
    (11) argumentos -> . argumentoVariadico COMMA
    (12) argumento -> . ID tipoDato
    (13) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    RPAREN          shift and go to state 33
    ID              shift and go to state 37

    argumentos                     shift and go to state 34
    argumento                      shift and go to state 35
    argumentoVariadico             shift and go to state 36

state 18

    (79) imprimir -> FMT PUNTO . PRINT_LN LPAREN valores RPAREN
    (80) imprimir -> FMT PUNTO . PRINT_LN LPAREN RPAREN

    PRINT_LN        shift and go to state 38


state 19

    (39) asignacion -> VAR ID tipoDato . ASSIGN valor

    ASSIGN          shift and go to state 39


state 20

    (40) asignacion -> VAR ID ASSIGN . valor
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 41
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 21

    (42) tipoDato -> FLOAT64_TYPE .

    ASSIGN          reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    COMMA           reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    RPAREN          reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    RBRACKET        reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    PLUS            reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    MINUS           reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    TIMES           reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    DIVIDE          reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    MOD             reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    NOT_EQUAL       reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    LESS_THAN       reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    LESS_EQUAL      reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    GREATER_THAN    reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    GREATER_EQUAL   reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    $end            reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    RBRACE          reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    CASE            reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    DEFAULT         reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    DOSPUNTOS       reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    SEMICOLON       reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    AND             reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    OR              reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)
    LBRACE          reduce using rule 42 (tipoDato -> FLOAT64_TYPE .)


state 22

    (43) tipoDato -> COMPLEX64_TYPE .

    ASSIGN          reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    COMMA           reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    RPAREN          reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    RBRACKET        reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    PLUS            reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    MINUS           reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    TIMES           reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    DIVIDE          reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    MOD             reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    NOT_EQUAL       reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    LESS_THAN       reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    LESS_EQUAL      reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    GREATER_THAN    reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    GREATER_EQUAL   reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    $end            reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    RBRACE          reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    CASE            reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    DEFAULT         reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    DOSPUNTOS       reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    SEMICOLON       reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    AND             reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    OR              reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)
    LBRACE          reduce using rule 43 (tipoDato -> COMPLEX64_TYPE .)


state 23

    (44) tipoDato -> INT_TYPE .

    ASSIGN          reduce using rule 44 (tipoDato -> INT_TYPE .)
    COMMA           reduce using rule 44 (tipoDato -> INT_TYPE .)
    RPAREN          reduce using rule 44 (tipoDato -> INT_TYPE .)
    RBRACKET        reduce using rule 44 (tipoDato -> INT_TYPE .)
    PLUS            reduce using rule 44 (tipoDato -> INT_TYPE .)
    MINUS           reduce using rule 44 (tipoDato -> INT_TYPE .)
    TIMES           reduce using rule 44 (tipoDato -> INT_TYPE .)
    DIVIDE          reduce using rule 44 (tipoDato -> INT_TYPE .)
    MOD             reduce using rule 44 (tipoDato -> INT_TYPE .)
    NOT_EQUAL       reduce using rule 44 (tipoDato -> INT_TYPE .)
    LESS_THAN       reduce using rule 44 (tipoDato -> INT_TYPE .)
    LESS_EQUAL      reduce using rule 44 (tipoDato -> INT_TYPE .)
    GREATER_THAN    reduce using rule 44 (tipoDato -> INT_TYPE .)
    GREATER_EQUAL   reduce using rule 44 (tipoDato -> INT_TYPE .)
    $end            reduce using rule 44 (tipoDato -> INT_TYPE .)
    RBRACE          reduce using rule 44 (tipoDato -> INT_TYPE .)
    CASE            reduce using rule 44 (tipoDato -> INT_TYPE .)
    DEFAULT         reduce using rule 44 (tipoDato -> INT_TYPE .)
    DOSPUNTOS       reduce using rule 44 (tipoDato -> INT_TYPE .)
    SEMICOLON       reduce using rule 44 (tipoDato -> INT_TYPE .)
    AND             reduce using rule 44 (tipoDato -> INT_TYPE .)
    OR              reduce using rule 44 (tipoDato -> INT_TYPE .)
    LBRACE          reduce using rule 44 (tipoDato -> INT_TYPE .)


state 24

    (45) tipoDato -> BOOL_TYPE .

    ASSIGN          reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    COMMA           reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    RPAREN          reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    RBRACKET        reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    PLUS            reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    MINUS           reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    TIMES           reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    DIVIDE          reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    MOD             reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    NOT_EQUAL       reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    LESS_THAN       reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    LESS_EQUAL      reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    GREATER_THAN    reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    GREATER_EQUAL   reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    $end            reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    RBRACE          reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    CASE            reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    DEFAULT         reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    DOSPUNTOS       reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    SEMICOLON       reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    AND             reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    OR              reduce using rule 45 (tipoDato -> BOOL_TYPE .)
    LBRACE          reduce using rule 45 (tipoDato -> BOOL_TYPE .)


state 25

    (46) tipoDato -> STRING_TYPE .

    ASSIGN          reduce using rule 46 (tipoDato -> STRING_TYPE .)
    COMMA           reduce using rule 46 (tipoDato -> STRING_TYPE .)
    RPAREN          reduce using rule 46 (tipoDato -> STRING_TYPE .)
    RBRACKET        reduce using rule 46 (tipoDato -> STRING_TYPE .)
    PLUS            reduce using rule 46 (tipoDato -> STRING_TYPE .)
    MINUS           reduce using rule 46 (tipoDato -> STRING_TYPE .)
    TIMES           reduce using rule 46 (tipoDato -> STRING_TYPE .)
    DIVIDE          reduce using rule 46 (tipoDato -> STRING_TYPE .)
    MOD             reduce using rule 46 (tipoDato -> STRING_TYPE .)
    NOT_EQUAL       reduce using rule 46 (tipoDato -> STRING_TYPE .)
    LESS_THAN       reduce using rule 46 (tipoDato -> STRING_TYPE .)
    LESS_EQUAL      reduce using rule 46 (tipoDato -> STRING_TYPE .)
    GREATER_THAN    reduce using rule 46 (tipoDato -> STRING_TYPE .)
    GREATER_EQUAL   reduce using rule 46 (tipoDato -> STRING_TYPE .)
    $end            reduce using rule 46 (tipoDato -> STRING_TYPE .)
    RBRACE          reduce using rule 46 (tipoDato -> STRING_TYPE .)
    CASE            reduce using rule 46 (tipoDato -> STRING_TYPE .)
    DEFAULT         reduce using rule 46 (tipoDato -> STRING_TYPE .)
    DOSPUNTOS       reduce using rule 46 (tipoDato -> STRING_TYPE .)
    SEMICOLON       reduce using rule 46 (tipoDato -> STRING_TYPE .)
    AND             reduce using rule 46 (tipoDato -> STRING_TYPE .)
    OR              reduce using rule 46 (tipoDato -> STRING_TYPE .)
    LBRACE          reduce using rule 46 (tipoDato -> STRING_TYPE .)


state 26

    (19) sentenciaSwitch -> SWITCH ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (28) bloqueCasosSwitch -> . casoSwitch
    (29) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (30) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 59

    bloqueCasosSwitch              shift and go to state 57
    casoSwitch                     shift and go to state 58

state 27

    (41) asignacionCorta -> ID DOSPUNTOS . ASSIGN valor

    ASSIGN          shift and go to state 60


state 28

    (21) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos . casoDefault RBRACE
    (26) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (27) casoDefault -> . empty
    (78) empty -> .

    DEFAULT         shift and go to state 62
    RBRACE          reduce using rule 78 (empty -> .)

    casoDefault                    shift and go to state 61
    empty                          shift and go to state 63

state 29

    (22) bloqueCasosBooleanos -> casoBooleano .
    (23) bloqueCasosBooleanos -> casoBooleano . bloqueCasosBooleanos
    (22) bloqueCasosBooleanos -> . casoBooleano
    (23) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (24) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (25) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 22 (bloqueCasosBooleanos -> casoBooleano .)
    RBRACE          reduce using rule 22 (bloqueCasosBooleanos -> casoBooleano .)
    CASE            shift and go to state 30

    casoBooleano                   shift and go to state 29
    bloqueCasosBooleanos           shift and go to state 64

state 30

    (24) casoBooleano -> CASE . condiciones DOSPUNTOS subcodigo
    (25) casoBooleano -> CASE . ID DOSPUNTOS subcodigo
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    ID              shift and go to state 66
    BOOL            shift and go to state 68
    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    STRING          shift and go to state 46
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    condiciones                    shift and go to state 65
    condicion                      shift and go to state 51
    valor                          shift and go to state 67
    expresionesAritmeticas         shift and go to state 47
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 31

    (20) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON . ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    ID              shift and go to state 69


state 32

    (7) funcion -> FUNC ID LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE
    (14) funcionSinArg -> FUNC ID LPAREN . RPAREN LBRACE subcodigo RBRACE
    (8) argumentos -> . argumento
    (9) argumentos -> . argumentoVariadico
    (10) argumentos -> . argumento COMMA
    (11) argumentos -> . argumentoVariadico COMMA
    (12) argumento -> . ID tipoDato
    (13) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    RPAREN          shift and go to state 71
    ID              shift and go to state 37

    argumentos                     shift and go to state 70
    argumento                      shift and go to state 35
    argumentoVariadico             shift and go to state 36

state 33

    (15) funcionAnonima -> FUNC LPAREN RPAREN . LBRACE subcodigo RBRACE LPAREN RPAREN

    LBRACE          shift and go to state 72


state 34

    (16) funcionAnonima -> FUNC LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN

    RPAREN          shift and go to state 73


state 35

    (8) argumentos -> argumento .
    (10) argumentos -> argumento . COMMA

    RPAREN          reduce using rule 8 (argumentos -> argumento .)
    COMMA           shift and go to state 74


state 36

    (9) argumentos -> argumentoVariadico .
    (11) argumentos -> argumentoVariadico . COMMA

    RPAREN          reduce using rule 9 (argumentos -> argumentoVariadico .)
    COMMA           shift and go to state 75


state 37

    (12) argumento -> ID . tipoDato
    (13) argumentoVariadico -> ID . PUNTO PUNTO PUNTO tipoDato
    (42) tipoDato -> . FLOAT64_TYPE
    (43) tipoDato -> . COMPLEX64_TYPE
    (44) tipoDato -> . INT_TYPE
    (45) tipoDato -> . BOOL_TYPE
    (46) tipoDato -> . STRING_TYPE

    PUNTO           shift and go to state 77
    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 76

state 38

    (79) imprimir -> FMT PUNTO PRINT_LN . LPAREN valores RPAREN
    (80) imprimir -> FMT PUNTO PRINT_LN . LPAREN RPAREN

    LPAREN          shift and go to state 78


state 39

    (39) asignacion -> VAR ID tipoDato ASSIGN . valor
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 79
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 40

    (56) valor -> ID .

    PLUS            reduce using rule 56 (valor -> ID .)
    MINUS           reduce using rule 56 (valor -> ID .)
    TIMES           reduce using rule 56 (valor -> ID .)
    DIVIDE          reduce using rule 56 (valor -> ID .)
    MOD             reduce using rule 56 (valor -> ID .)
    NOT_EQUAL       reduce using rule 56 (valor -> ID .)
    LESS_THAN       reduce using rule 56 (valor -> ID .)
    LESS_EQUAL      reduce using rule 56 (valor -> ID .)
    GREATER_THAN    reduce using rule 56 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 56 (valor -> ID .)
    $end            reduce using rule 56 (valor -> ID .)
    RBRACE          reduce using rule 56 (valor -> ID .)
    CASE            reduce using rule 56 (valor -> ID .)
    DEFAULT         reduce using rule 56 (valor -> ID .)
    COMMA           reduce using rule 56 (valor -> ID .)
    DOSPUNTOS       reduce using rule 56 (valor -> ID .)
    SEMICOLON       reduce using rule 56 (valor -> ID .)
    RPAREN          reduce using rule 56 (valor -> ID .)
    AND             reduce using rule 56 (valor -> ID .)
    OR              reduce using rule 56 (valor -> ID .)


state 41

    (40) asignacion -> VAR ID ASSIGN valor .
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

    $end            reduce using rule 40 (asignacion -> VAR ID ASSIGN valor .)
    RBRACE          reduce using rule 40 (asignacion -> VAR ID ASSIGN valor .)
    CASE            reduce using rule 40 (asignacion -> VAR ID ASSIGN valor .)
    DEFAULT         reduce using rule 40 (asignacion -> VAR ID ASSIGN valor .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 42

    (49) valor -> FLOAT64 .

    PLUS            reduce using rule 49 (valor -> FLOAT64 .)
    MINUS           reduce using rule 49 (valor -> FLOAT64 .)
    TIMES           reduce using rule 49 (valor -> FLOAT64 .)
    DIVIDE          reduce using rule 49 (valor -> FLOAT64 .)
    MOD             reduce using rule 49 (valor -> FLOAT64 .)
    NOT_EQUAL       reduce using rule 49 (valor -> FLOAT64 .)
    LESS_THAN       reduce using rule 49 (valor -> FLOAT64 .)
    LESS_EQUAL      reduce using rule 49 (valor -> FLOAT64 .)
    GREATER_THAN    reduce using rule 49 (valor -> FLOAT64 .)
    GREATER_EQUAL   reduce using rule 49 (valor -> FLOAT64 .)
    $end            reduce using rule 49 (valor -> FLOAT64 .)
    RBRACE          reduce using rule 49 (valor -> FLOAT64 .)
    CASE            reduce using rule 49 (valor -> FLOAT64 .)
    DEFAULT         reduce using rule 49 (valor -> FLOAT64 .)
    COMMA           reduce using rule 49 (valor -> FLOAT64 .)
    DOSPUNTOS       reduce using rule 49 (valor -> FLOAT64 .)
    SEMICOLON       reduce using rule 49 (valor -> FLOAT64 .)
    RPAREN          reduce using rule 49 (valor -> FLOAT64 .)
    AND             reduce using rule 49 (valor -> FLOAT64 .)
    OR              reduce using rule 49 (valor -> FLOAT64 .)


state 43

    (50) valor -> COMPLEX64 .

    PLUS            reduce using rule 50 (valor -> COMPLEX64 .)
    MINUS           reduce using rule 50 (valor -> COMPLEX64 .)
    TIMES           reduce using rule 50 (valor -> COMPLEX64 .)
    DIVIDE          reduce using rule 50 (valor -> COMPLEX64 .)
    MOD             reduce using rule 50 (valor -> COMPLEX64 .)
    NOT_EQUAL       reduce using rule 50 (valor -> COMPLEX64 .)
    LESS_THAN       reduce using rule 50 (valor -> COMPLEX64 .)
    LESS_EQUAL      reduce using rule 50 (valor -> COMPLEX64 .)
    GREATER_THAN    reduce using rule 50 (valor -> COMPLEX64 .)
    GREATER_EQUAL   reduce using rule 50 (valor -> COMPLEX64 .)
    $end            reduce using rule 50 (valor -> COMPLEX64 .)
    RBRACE          reduce using rule 50 (valor -> COMPLEX64 .)
    CASE            reduce using rule 50 (valor -> COMPLEX64 .)
    DEFAULT         reduce using rule 50 (valor -> COMPLEX64 .)
    COMMA           reduce using rule 50 (valor -> COMPLEX64 .)
    DOSPUNTOS       reduce using rule 50 (valor -> COMPLEX64 .)
    SEMICOLON       reduce using rule 50 (valor -> COMPLEX64 .)
    RPAREN          reduce using rule 50 (valor -> COMPLEX64 .)
    AND             reduce using rule 50 (valor -> COMPLEX64 .)
    OR              reduce using rule 50 (valor -> COMPLEX64 .)


state 44

    (51) valor -> INT .

    PLUS            reduce using rule 51 (valor -> INT .)
    MINUS           reduce using rule 51 (valor -> INT .)
    TIMES           reduce using rule 51 (valor -> INT .)
    DIVIDE          reduce using rule 51 (valor -> INT .)
    MOD             reduce using rule 51 (valor -> INT .)
    NOT_EQUAL       reduce using rule 51 (valor -> INT .)
    LESS_THAN       reduce using rule 51 (valor -> INT .)
    LESS_EQUAL      reduce using rule 51 (valor -> INT .)
    GREATER_THAN    reduce using rule 51 (valor -> INT .)
    GREATER_EQUAL   reduce using rule 51 (valor -> INT .)
    $end            reduce using rule 51 (valor -> INT .)
    RBRACE          reduce using rule 51 (valor -> INT .)
    CASE            reduce using rule 51 (valor -> INT .)
    DEFAULT         reduce using rule 51 (valor -> INT .)
    COMMA           reduce using rule 51 (valor -> INT .)
    DOSPUNTOS       reduce using rule 51 (valor -> INT .)
    SEMICOLON       reduce using rule 51 (valor -> INT .)
    RPAREN          reduce using rule 51 (valor -> INT .)
    AND             reduce using rule 51 (valor -> INT .)
    OR              reduce using rule 51 (valor -> INT .)


state 45

    (52) valor -> BOOL .
    (72) condicion -> BOOL .

  ! reduce/reduce conflict for AND resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for OR resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for $end resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for RBRACE resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for CASE resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for COMMA resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for RPAREN resolved using rule 52 (valor -> BOOL .)
    PLUS            reduce using rule 52 (valor -> BOOL .)
    MINUS           reduce using rule 52 (valor -> BOOL .)
    TIMES           reduce using rule 52 (valor -> BOOL .)
    DIVIDE          reduce using rule 52 (valor -> BOOL .)
    MOD             reduce using rule 52 (valor -> BOOL .)
    NOT_EQUAL       reduce using rule 52 (valor -> BOOL .)
    LESS_THAN       reduce using rule 52 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 52 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 52 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 52 (valor -> BOOL .)
    $end            reduce using rule 52 (valor -> BOOL .)
    RBRACE          reduce using rule 52 (valor -> BOOL .)
    CASE            reduce using rule 52 (valor -> BOOL .)
    DEFAULT         reduce using rule 52 (valor -> BOOL .)
    COMMA           reduce using rule 52 (valor -> BOOL .)
    DOSPUNTOS       reduce using rule 52 (valor -> BOOL .)
    SEMICOLON       reduce using rule 52 (valor -> BOOL .)
    RPAREN          reduce using rule 52 (valor -> BOOL .)
    AND             reduce using rule 52 (valor -> BOOL .)
    OR              reduce using rule 52 (valor -> BOOL .)

  ! AND             [ reduce using rule 72 (condicion -> BOOL .) ]
  ! OR              [ reduce using rule 72 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 72 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 72 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 72 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 72 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 72 (condicion -> BOOL .) ]
  ! NOT_EQUAL       [ reduce using rule 72 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 72 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 72 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 72 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 72 (condicion -> BOOL .) ]
  ! $end            [ reduce using rule 72 (condicion -> BOOL .) ]
  ! RBRACE          [ reduce using rule 72 (condicion -> BOOL .) ]
  ! CASE            [ reduce using rule 72 (condicion -> BOOL .) ]
  ! DEFAULT         [ reduce using rule 72 (condicion -> BOOL .) ]
  ! COMMA           [ reduce using rule 72 (condicion -> BOOL .) ]
  ! DOSPUNTOS       [ reduce using rule 72 (condicion -> BOOL .) ]
  ! SEMICOLON       [ reduce using rule 72 (condicion -> BOOL .) ]
  ! RPAREN          [ reduce using rule 72 (condicion -> BOOL .) ]


state 46

    (53) valor -> STRING .

    PLUS            reduce using rule 53 (valor -> STRING .)
    MINUS           reduce using rule 53 (valor -> STRING .)
    TIMES           reduce using rule 53 (valor -> STRING .)
    DIVIDE          reduce using rule 53 (valor -> STRING .)
    MOD             reduce using rule 53 (valor -> STRING .)
    NOT_EQUAL       reduce using rule 53 (valor -> STRING .)
    LESS_THAN       reduce using rule 53 (valor -> STRING .)
    LESS_EQUAL      reduce using rule 53 (valor -> STRING .)
    GREATER_THAN    reduce using rule 53 (valor -> STRING .)
    GREATER_EQUAL   reduce using rule 53 (valor -> STRING .)
    $end            reduce using rule 53 (valor -> STRING .)
    RBRACE          reduce using rule 53 (valor -> STRING .)
    CASE            reduce using rule 53 (valor -> STRING .)
    DEFAULT         reduce using rule 53 (valor -> STRING .)
    COMMA           reduce using rule 53 (valor -> STRING .)
    DOSPUNTOS       reduce using rule 53 (valor -> STRING .)
    SEMICOLON       reduce using rule 53 (valor -> STRING .)
    RPAREN          reduce using rule 53 (valor -> STRING .)
    AND             reduce using rule 53 (valor -> STRING .)
    OR              reduce using rule 53 (valor -> STRING .)


state 47

    (54) valor -> expresionesAritmeticas .

    PLUS            reduce using rule 54 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 54 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 54 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 54 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 54 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 54 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 54 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 54 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 54 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 54 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 54 (valor -> expresionesAritmeticas .)
    RBRACE          reduce using rule 54 (valor -> expresionesAritmeticas .)
    CASE            reduce using rule 54 (valor -> expresionesAritmeticas .)
    DEFAULT         reduce using rule 54 (valor -> expresionesAritmeticas .)
    COMMA           reduce using rule 54 (valor -> expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 54 (valor -> expresionesAritmeticas .)
    SEMICOLON       reduce using rule 54 (valor -> expresionesAritmeticas .)
    RPAREN          reduce using rule 54 (valor -> expresionesAritmeticas .)
    AND             reduce using rule 54 (valor -> expresionesAritmeticas .)
    OR              reduce using rule 54 (valor -> expresionesAritmeticas .)


state 48

    (55) valor -> condiciones .

    PLUS            reduce using rule 55 (valor -> condiciones .)
    MINUS           reduce using rule 55 (valor -> condiciones .)
    TIMES           reduce using rule 55 (valor -> condiciones .)
    DIVIDE          reduce using rule 55 (valor -> condiciones .)
    MOD             reduce using rule 55 (valor -> condiciones .)
    NOT_EQUAL       reduce using rule 55 (valor -> condiciones .)
    LESS_THAN       reduce using rule 55 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 55 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 55 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 55 (valor -> condiciones .)
    $end            reduce using rule 55 (valor -> condiciones .)
    RBRACE          reduce using rule 55 (valor -> condiciones .)
    CASE            reduce using rule 55 (valor -> condiciones .)
    DEFAULT         reduce using rule 55 (valor -> condiciones .)
    COMMA           reduce using rule 55 (valor -> condiciones .)
    DOSPUNTOS       reduce using rule 55 (valor -> condiciones .)
    SEMICOLON       reduce using rule 55 (valor -> condiciones .)
    RPAREN          reduce using rule 55 (valor -> condiciones .)
    AND             reduce using rule 55 (valor -> condiciones .)
    OR              reduce using rule 55 (valor -> condiciones .)


state 49

    (57) valor -> estructurasDeDatos .

    PLUS            reduce using rule 57 (valor -> estructurasDeDatos .)
    MINUS           reduce using rule 57 (valor -> estructurasDeDatos .)
    TIMES           reduce using rule 57 (valor -> estructurasDeDatos .)
    DIVIDE          reduce using rule 57 (valor -> estructurasDeDatos .)
    MOD             reduce using rule 57 (valor -> estructurasDeDatos .)
    NOT_EQUAL       reduce using rule 57 (valor -> estructurasDeDatos .)
    LESS_THAN       reduce using rule 57 (valor -> estructurasDeDatos .)
    LESS_EQUAL      reduce using rule 57 (valor -> estructurasDeDatos .)
    GREATER_THAN    reduce using rule 57 (valor -> estructurasDeDatos .)
    GREATER_EQUAL   reduce using rule 57 (valor -> estructurasDeDatos .)
    $end            reduce using rule 57 (valor -> estructurasDeDatos .)
    RBRACE          reduce using rule 57 (valor -> estructurasDeDatos .)
    CASE            reduce using rule 57 (valor -> estructurasDeDatos .)
    DEFAULT         reduce using rule 57 (valor -> estructurasDeDatos .)
    COMMA           reduce using rule 57 (valor -> estructurasDeDatos .)
    DOSPUNTOS       reduce using rule 57 (valor -> estructurasDeDatos .)
    SEMICOLON       reduce using rule 57 (valor -> estructurasDeDatos .)
    RPAREN          reduce using rule 57 (valor -> estructurasDeDatos .)
    AND             reduce using rule 57 (valor -> estructurasDeDatos .)
    OR              reduce using rule 57 (valor -> estructurasDeDatos .)


state 50

    (58) expresionesAritmeticas -> expresionAritmetica .
    (59) expresionesAritmeticas -> expresionAritmetica . operador expresionesAritmeticas
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NOT_EQUAL       reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_THAN       reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_EQUAL      reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_THAN    reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_EQUAL   reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    $end            reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    RBRACE          reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    CASE            reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    DEFAULT         reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    COMMA           reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    DOSPUNTOS       reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    SEMICOLON       reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    RPAREN          reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    AND             reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    OR              reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86

  ! PLUS            [ reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MINUS           [ reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! TIMES           [ reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! DIVIDE          [ reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MOD             [ reduce using rule 58 (expresionesAritmeticas -> expresionAritmetica .) ]

    operador                       shift and go to state 92

state 51

    (67) condiciones -> condicion .
    (68) condiciones -> condicion . conector condiciones
    (69) conector -> . AND
    (70) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PLUS            reduce using rule 67 (condiciones -> condicion .)
    MINUS           reduce using rule 67 (condiciones -> condicion .)
    TIMES           reduce using rule 67 (condiciones -> condicion .)
    DIVIDE          reduce using rule 67 (condiciones -> condicion .)
    MOD             reduce using rule 67 (condiciones -> condicion .)
    NOT_EQUAL       reduce using rule 67 (condiciones -> condicion .)
    LESS_THAN       reduce using rule 67 (condiciones -> condicion .)
    LESS_EQUAL      reduce using rule 67 (condiciones -> condicion .)
    GREATER_THAN    reduce using rule 67 (condiciones -> condicion .)
    GREATER_EQUAL   reduce using rule 67 (condiciones -> condicion .)
    $end            reduce using rule 67 (condiciones -> condicion .)
    RBRACE          reduce using rule 67 (condiciones -> condicion .)
    CASE            reduce using rule 67 (condiciones -> condicion .)
    DEFAULT         reduce using rule 67 (condiciones -> condicion .)
    DOSPUNTOS       reduce using rule 67 (condiciones -> condicion .)
    COMMA           reduce using rule 67 (condiciones -> condicion .)
    SEMICOLON       reduce using rule 67 (condiciones -> condicion .)
    RPAREN          reduce using rule 67 (condiciones -> condicion .)
    AND             shift and go to state 94
    OR              shift and go to state 95

  ! AND             [ reduce using rule 67 (condiciones -> condicion .) ]
  ! OR              [ reduce using rule 67 (condiciones -> condicion .) ]

    conector                       shift and go to state 93

state 52

    (31) estructurasDeDatos -> mapa .

    PLUS            reduce using rule 31 (estructurasDeDatos -> mapa .)
    MINUS           reduce using rule 31 (estructurasDeDatos -> mapa .)
    TIMES           reduce using rule 31 (estructurasDeDatos -> mapa .)
    DIVIDE          reduce using rule 31 (estructurasDeDatos -> mapa .)
    MOD             reduce using rule 31 (estructurasDeDatos -> mapa .)
    NOT_EQUAL       reduce using rule 31 (estructurasDeDatos -> mapa .)
    LESS_THAN       reduce using rule 31 (estructurasDeDatos -> mapa .)
    LESS_EQUAL      reduce using rule 31 (estructurasDeDatos -> mapa .)
    GREATER_THAN    reduce using rule 31 (estructurasDeDatos -> mapa .)
    GREATER_EQUAL   reduce using rule 31 (estructurasDeDatos -> mapa .)
    $end            reduce using rule 31 (estructurasDeDatos -> mapa .)
    RBRACE          reduce using rule 31 (estructurasDeDatos -> mapa .)
    CASE            reduce using rule 31 (estructurasDeDatos -> mapa .)
    DEFAULT         reduce using rule 31 (estructurasDeDatos -> mapa .)
    COMMA           reduce using rule 31 (estructurasDeDatos -> mapa .)
    DOSPUNTOS       reduce using rule 31 (estructurasDeDatos -> mapa .)
    SEMICOLON       reduce using rule 31 (estructurasDeDatos -> mapa .)
    RPAREN          reduce using rule 31 (estructurasDeDatos -> mapa .)
    AND             reduce using rule 31 (estructurasDeDatos -> mapa .)
    OR              reduce using rule 31 (estructurasDeDatos -> mapa .)


state 53

    (32) estructurasDeDatos -> array .

    PLUS            reduce using rule 32 (estructurasDeDatos -> array .)
    MINUS           reduce using rule 32 (estructurasDeDatos -> array .)
    TIMES           reduce using rule 32 (estructurasDeDatos -> array .)
    DIVIDE          reduce using rule 32 (estructurasDeDatos -> array .)
    MOD             reduce using rule 32 (estructurasDeDatos -> array .)
    NOT_EQUAL       reduce using rule 32 (estructurasDeDatos -> array .)
    LESS_THAN       reduce using rule 32 (estructurasDeDatos -> array .)
    LESS_EQUAL      reduce using rule 32 (estructurasDeDatos -> array .)
    GREATER_THAN    reduce using rule 32 (estructurasDeDatos -> array .)
    GREATER_EQUAL   reduce using rule 32 (estructurasDeDatos -> array .)
    $end            reduce using rule 32 (estructurasDeDatos -> array .)
    RBRACE          reduce using rule 32 (estructurasDeDatos -> array .)
    CASE            reduce using rule 32 (estructurasDeDatos -> array .)
    DEFAULT         reduce using rule 32 (estructurasDeDatos -> array .)
    COMMA           reduce using rule 32 (estructurasDeDatos -> array .)
    DOSPUNTOS       reduce using rule 32 (estructurasDeDatos -> array .)
    SEMICOLON       reduce using rule 32 (estructurasDeDatos -> array .)
    RPAREN          reduce using rule 32 (estructurasDeDatos -> array .)
    AND             reduce using rule 32 (estructurasDeDatos -> array .)
    OR              reduce using rule 32 (estructurasDeDatos -> array .)


state 54

    (61) expresionAritmetica -> LPAREN . valor operador valor RPAREN
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 96
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 55

    (33) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LBRACKET        shift and go to state 97


state 56

    (38) array -> LBRACKET . INT RBRACKET tipoDato

    INT             shift and go to state 98


state 57

    (19) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (26) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (27) casoDefault -> . empty
    (78) empty -> .

    DEFAULT         shift and go to state 62
    RBRACE          reduce using rule 78 (empty -> .)

    casoDefault                    shift and go to state 99
    empty                          shift and go to state 63

state 58

    (28) bloqueCasosSwitch -> casoSwitch .
    (29) bloqueCasosSwitch -> casoSwitch . bloqueCasosSwitch
    (28) bloqueCasosSwitch -> . casoSwitch
    (29) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (30) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 28 (bloqueCasosSwitch -> casoSwitch .)
    RBRACE          reduce using rule 28 (bloqueCasosSwitch -> casoSwitch .)
    CASE            shift and go to state 59

    casoSwitch                     shift and go to state 58
    bloqueCasosSwitch              shift and go to state 100

state 59

    (30) casoSwitch -> CASE . valores DOSPUNTOS subcodigo
    (47) valores -> . valor
    (48) valores -> . valor COMMA valores
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valores                        shift and go to state 101
    valor                          shift and go to state 102
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 60

    (41) asignacionCorta -> ID DOSPUNTOS ASSIGN . valor
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 103
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 61

    (21) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault . RBRACE

    RBRACE          shift and go to state 104


state 62

    (26) casoDefault -> DEFAULT . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 105


state 63

    (27) casoDefault -> empty .

    RBRACE          reduce using rule 27 (casoDefault -> empty .)


state 64

    (23) bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .

    DEFAULT         reduce using rule 23 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)
    RBRACE          reduce using rule 23 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)


state 65

    (24) casoBooleano -> CASE condiciones . DOSPUNTOS subcodigo
    (55) valor -> condiciones .

    DOSPUNTOS       shift and go to state 106
    NOT_EQUAL       reduce using rule 55 (valor -> condiciones .)
    LESS_THAN       reduce using rule 55 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 55 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 55 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 55 (valor -> condiciones .)
    PLUS            reduce using rule 55 (valor -> condiciones .)
    MINUS           reduce using rule 55 (valor -> condiciones .)
    TIMES           reduce using rule 55 (valor -> condiciones .)
    DIVIDE          reduce using rule 55 (valor -> condiciones .)
    MOD             reduce using rule 55 (valor -> condiciones .)


state 66

    (25) casoBooleano -> CASE ID . DOSPUNTOS subcodigo
    (56) valor -> ID .

    DOSPUNTOS       shift and go to state 107
    NOT_EQUAL       reduce using rule 56 (valor -> ID .)
    LESS_THAN       reduce using rule 56 (valor -> ID .)
    LESS_EQUAL      reduce using rule 56 (valor -> ID .)
    GREATER_THAN    reduce using rule 56 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 56 (valor -> ID .)
    PLUS            reduce using rule 56 (valor -> ID .)
    MINUS           reduce using rule 56 (valor -> ID .)
    TIMES           reduce using rule 56 (valor -> ID .)
    DIVIDE          reduce using rule 56 (valor -> ID .)
    MOD             reduce using rule 56 (valor -> ID .)


state 67

    (71) condicion -> valor . operadorComp valor
    (60) expresionAritmetica -> valor . operador valor
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD

    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86

    operadorComp                   shift and go to state 81
    operador                       shift and go to state 80

state 68

    (72) condicion -> BOOL .
    (52) valor -> BOOL .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 52 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 52 (valor -> BOOL .)
    AND             reduce using rule 72 (condicion -> BOOL .)
    OR              reduce using rule 72 (condicion -> BOOL .)
    DOSPUNTOS       reduce using rule 72 (condicion -> BOOL .)
    $end            reduce using rule 72 (condicion -> BOOL .)
    RBRACE          reduce using rule 72 (condicion -> BOOL .)
    CASE            reduce using rule 72 (condicion -> BOOL .)
    DEFAULT         reduce using rule 72 (condicion -> BOOL .)
    COMMA           reduce using rule 72 (condicion -> BOOL .)
    SEMICOLON       reduce using rule 72 (condicion -> BOOL .)
    RPAREN          reduce using rule 72 (condicion -> BOOL .)
    NOT_EQUAL       reduce using rule 52 (valor -> BOOL .)
    LESS_THAN       reduce using rule 52 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 52 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 52 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 52 (valor -> BOOL .)
    PLUS            reduce using rule 52 (valor -> BOOL .)
    MINUS           reduce using rule 52 (valor -> BOOL .)
    TIMES           reduce using rule 52 (valor -> BOOL .)
    DIVIDE          reduce using rule 52 (valor -> BOOL .)
    MOD             reduce using rule 52 (valor -> BOOL .)

  ! NOT_EQUAL       [ reduce using rule 72 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 72 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 72 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 72 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 72 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 72 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 72 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 72 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 72 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 72 (condicion -> BOOL .) ]


state 69

    (20) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID . LBRACE bloqueCasosSwitch casoDefault RBRACE

    LBRACE          shift and go to state 108


state 70

    (7) funcion -> FUNC ID LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE

    RPAREN          shift and go to state 109


state 71

    (14) funcionSinArg -> FUNC ID LPAREN RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 110


state 72

    (15) funcionAnonima -> FUNC LPAREN RPAREN LBRACE . subcodigo RBRACE LPAREN RPAREN
    (17) subcodigo -> . asignacionCorta
    (18) subcodigo -> . asignacion
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 114
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 111
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 73

    (16) funcionAnonima -> FUNC LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE LPAREN RPAREN

    LBRACE          shift and go to state 115


state 74

    (10) argumentos -> argumento COMMA .

    RPAREN          reduce using rule 10 (argumentos -> argumento COMMA .)


state 75

    (11) argumentos -> argumentoVariadico COMMA .

    RPAREN          reduce using rule 11 (argumentos -> argumentoVariadico COMMA .)


state 76

    (12) argumento -> ID tipoDato .

    COMMA           reduce using rule 12 (argumento -> ID tipoDato .)
    RPAREN          reduce using rule 12 (argumento -> ID tipoDato .)


state 77

    (13) argumentoVariadico -> ID PUNTO . PUNTO PUNTO tipoDato

    PUNTO           shift and go to state 116


state 78

    (79) imprimir -> FMT PUNTO PRINT_LN LPAREN . valores RPAREN
    (80) imprimir -> FMT PUNTO PRINT_LN LPAREN . RPAREN
    (47) valores -> . valor
    (48) valores -> . valor COMMA valores
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    RPAREN          shift and go to state 118
    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valores                        shift and go to state 117
    valor                          shift and go to state 102
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 79

    (39) asignacion -> VAR ID tipoDato ASSIGN valor .
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

    $end            reduce using rule 39 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    RBRACE          reduce using rule 39 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    CASE            reduce using rule 39 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    DEFAULT         reduce using rule 39 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 80

    (60) expresionAritmetica -> valor operador . valor
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 119
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 81

    (71) condicion -> valor operadorComp . valor
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 120
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 82

    (62) operador -> PLUS .

    FLOAT64         reduce using rule 62 (operador -> PLUS .)
    COMPLEX64       reduce using rule 62 (operador -> PLUS .)
    INT             reduce using rule 62 (operador -> PLUS .)
    BOOL            reduce using rule 62 (operador -> PLUS .)
    STRING          reduce using rule 62 (operador -> PLUS .)
    ID              reduce using rule 62 (operador -> PLUS .)
    LPAREN          reduce using rule 62 (operador -> PLUS .)
    MAP             reduce using rule 62 (operador -> PLUS .)
    LBRACKET        reduce using rule 62 (operador -> PLUS .)


state 83

    (63) operador -> MINUS .

    FLOAT64         reduce using rule 63 (operador -> MINUS .)
    COMPLEX64       reduce using rule 63 (operador -> MINUS .)
    INT             reduce using rule 63 (operador -> MINUS .)
    BOOL            reduce using rule 63 (operador -> MINUS .)
    STRING          reduce using rule 63 (operador -> MINUS .)
    ID              reduce using rule 63 (operador -> MINUS .)
    LPAREN          reduce using rule 63 (operador -> MINUS .)
    MAP             reduce using rule 63 (operador -> MINUS .)
    LBRACKET        reduce using rule 63 (operador -> MINUS .)


state 84

    (64) operador -> TIMES .

    FLOAT64         reduce using rule 64 (operador -> TIMES .)
    COMPLEX64       reduce using rule 64 (operador -> TIMES .)
    INT             reduce using rule 64 (operador -> TIMES .)
    BOOL            reduce using rule 64 (operador -> TIMES .)
    STRING          reduce using rule 64 (operador -> TIMES .)
    ID              reduce using rule 64 (operador -> TIMES .)
    LPAREN          reduce using rule 64 (operador -> TIMES .)
    MAP             reduce using rule 64 (operador -> TIMES .)
    LBRACKET        reduce using rule 64 (operador -> TIMES .)


state 85

    (65) operador -> DIVIDE .

    FLOAT64         reduce using rule 65 (operador -> DIVIDE .)
    COMPLEX64       reduce using rule 65 (operador -> DIVIDE .)
    INT             reduce using rule 65 (operador -> DIVIDE .)
    BOOL            reduce using rule 65 (operador -> DIVIDE .)
    STRING          reduce using rule 65 (operador -> DIVIDE .)
    ID              reduce using rule 65 (operador -> DIVIDE .)
    LPAREN          reduce using rule 65 (operador -> DIVIDE .)
    MAP             reduce using rule 65 (operador -> DIVIDE .)
    LBRACKET        reduce using rule 65 (operador -> DIVIDE .)


state 86

    (66) operador -> MOD .

    FLOAT64         reduce using rule 66 (operador -> MOD .)
    COMPLEX64       reduce using rule 66 (operador -> MOD .)
    INT             reduce using rule 66 (operador -> MOD .)
    BOOL            reduce using rule 66 (operador -> MOD .)
    STRING          reduce using rule 66 (operador -> MOD .)
    ID              reduce using rule 66 (operador -> MOD .)
    LPAREN          reduce using rule 66 (operador -> MOD .)
    MAP             reduce using rule 66 (operador -> MOD .)
    LBRACKET        reduce using rule 66 (operador -> MOD .)


state 87

    (73) operadorComp -> NOT_EQUAL .

    FLOAT64         reduce using rule 73 (operadorComp -> NOT_EQUAL .)
    COMPLEX64       reduce using rule 73 (operadorComp -> NOT_EQUAL .)
    INT             reduce using rule 73 (operadorComp -> NOT_EQUAL .)
    BOOL            reduce using rule 73 (operadorComp -> NOT_EQUAL .)
    STRING          reduce using rule 73 (operadorComp -> NOT_EQUAL .)
    ID              reduce using rule 73 (operadorComp -> NOT_EQUAL .)
    LPAREN          reduce using rule 73 (operadorComp -> NOT_EQUAL .)
    MAP             reduce using rule 73 (operadorComp -> NOT_EQUAL .)
    LBRACKET        reduce using rule 73 (operadorComp -> NOT_EQUAL .)


state 88

    (74) operadorComp -> LESS_THAN .

    FLOAT64         reduce using rule 74 (operadorComp -> LESS_THAN .)
    COMPLEX64       reduce using rule 74 (operadorComp -> LESS_THAN .)
    INT             reduce using rule 74 (operadorComp -> LESS_THAN .)
    BOOL            reduce using rule 74 (operadorComp -> LESS_THAN .)
    STRING          reduce using rule 74 (operadorComp -> LESS_THAN .)
    ID              reduce using rule 74 (operadorComp -> LESS_THAN .)
    LPAREN          reduce using rule 74 (operadorComp -> LESS_THAN .)
    MAP             reduce using rule 74 (operadorComp -> LESS_THAN .)
    LBRACKET        reduce using rule 74 (operadorComp -> LESS_THAN .)


state 89

    (75) operadorComp -> LESS_EQUAL .

    FLOAT64         reduce using rule 75 (operadorComp -> LESS_EQUAL .)
    COMPLEX64       reduce using rule 75 (operadorComp -> LESS_EQUAL .)
    INT             reduce using rule 75 (operadorComp -> LESS_EQUAL .)
    BOOL            reduce using rule 75 (operadorComp -> LESS_EQUAL .)
    STRING          reduce using rule 75 (operadorComp -> LESS_EQUAL .)
    ID              reduce using rule 75 (operadorComp -> LESS_EQUAL .)
    LPAREN          reduce using rule 75 (operadorComp -> LESS_EQUAL .)
    MAP             reduce using rule 75 (operadorComp -> LESS_EQUAL .)
    LBRACKET        reduce using rule 75 (operadorComp -> LESS_EQUAL .)


state 90

    (76) operadorComp -> GREATER_THAN .

    FLOAT64         reduce using rule 76 (operadorComp -> GREATER_THAN .)
    COMPLEX64       reduce using rule 76 (operadorComp -> GREATER_THAN .)
    INT             reduce using rule 76 (operadorComp -> GREATER_THAN .)
    BOOL            reduce using rule 76 (operadorComp -> GREATER_THAN .)
    STRING          reduce using rule 76 (operadorComp -> GREATER_THAN .)
    ID              reduce using rule 76 (operadorComp -> GREATER_THAN .)
    LPAREN          reduce using rule 76 (operadorComp -> GREATER_THAN .)
    MAP             reduce using rule 76 (operadorComp -> GREATER_THAN .)
    LBRACKET        reduce using rule 76 (operadorComp -> GREATER_THAN .)


state 91

    (77) operadorComp -> GREATER_EQUAL .

    FLOAT64         reduce using rule 77 (operadorComp -> GREATER_EQUAL .)
    COMPLEX64       reduce using rule 77 (operadorComp -> GREATER_EQUAL .)
    INT             reduce using rule 77 (operadorComp -> GREATER_EQUAL .)
    BOOL            reduce using rule 77 (operadorComp -> GREATER_EQUAL .)
    STRING          reduce using rule 77 (operadorComp -> GREATER_EQUAL .)
    ID              reduce using rule 77 (operadorComp -> GREATER_EQUAL .)
    LPAREN          reduce using rule 77 (operadorComp -> GREATER_EQUAL .)
    MAP             reduce using rule 77 (operadorComp -> GREATER_EQUAL .)
    LBRACKET        reduce using rule 77 (operadorComp -> GREATER_EQUAL .)


state 92

    (59) expresionesAritmeticas -> expresionAritmetica operador . expresionesAritmeticas
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    LPAREN          shift and go to state 54
    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    expresionAritmetica            shift and go to state 50
    expresionesAritmeticas         shift and go to state 121
    valor                          shift and go to state 122
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 93

    (68) condiciones -> condicion conector . condiciones
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    BOOL            shift and go to state 68
    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    condicion                      shift and go to state 51
    condiciones                    shift and go to state 123
    valor                          shift and go to state 67
    expresionesAritmeticas         shift and go to state 47
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 94

    (69) conector -> AND .

    BOOL            reduce using rule 69 (conector -> AND .)
    FLOAT64         reduce using rule 69 (conector -> AND .)
    COMPLEX64       reduce using rule 69 (conector -> AND .)
    INT             reduce using rule 69 (conector -> AND .)
    STRING          reduce using rule 69 (conector -> AND .)
    ID              reduce using rule 69 (conector -> AND .)
    LPAREN          reduce using rule 69 (conector -> AND .)
    MAP             reduce using rule 69 (conector -> AND .)
    LBRACKET        reduce using rule 69 (conector -> AND .)


state 95

    (70) conector -> OR .

    BOOL            reduce using rule 70 (conector -> OR .)
    FLOAT64         reduce using rule 70 (conector -> OR .)
    COMPLEX64       reduce using rule 70 (conector -> OR .)
    INT             reduce using rule 70 (conector -> OR .)
    STRING          reduce using rule 70 (conector -> OR .)
    ID              reduce using rule 70 (conector -> OR .)
    LPAREN          reduce using rule 70 (conector -> OR .)
    MAP             reduce using rule 70 (conector -> OR .)
    LBRACKET        reduce using rule 70 (conector -> OR .)


state 96

    (61) expresionAritmetica -> LPAREN valor . operador valor RPAREN
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

    operador                       shift and go to state 124
    operadorComp                   shift and go to state 81

state 97

    (33) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (42) tipoDato -> . FLOAT64_TYPE
    (43) tipoDato -> . COMPLEX64_TYPE
    (44) tipoDato -> . INT_TYPE
    (45) tipoDato -> . BOOL_TYPE
    (46) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 125

state 98

    (38) array -> LBRACKET INT . RBRACKET tipoDato

    RBRACKET        shift and go to state 126


state 99

    (19) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 127


state 100

    (29) bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .

    DEFAULT         reduce using rule 29 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)
    RBRACE          reduce using rule 29 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)


state 101

    (30) casoSwitch -> CASE valores . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 128


state 102

    (47) valores -> valor .
    (48) valores -> valor . COMMA valores
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

    DOSPUNTOS       reduce using rule 47 (valores -> valor .)
    RPAREN          reduce using rule 47 (valores -> valor .)
    COMMA           shift and go to state 129
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 103

    (41) asignacionCorta -> ID DOSPUNTOS ASSIGN valor .
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

    SEMICOLON       reduce using rule 41 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    RBRACE          reduce using rule 41 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    CASE            reduce using rule 41 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    DEFAULT         reduce using rule 41 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 104

    (21) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .

    $end            reduce using rule 21 (sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .)


state 105

    (26) casoDefault -> DEFAULT DOSPUNTOS . subcodigo
    (17) subcodigo -> . asignacionCorta
    (18) subcodigo -> . asignacion
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 114
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 130
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 106

    (24) casoBooleano -> CASE condiciones DOSPUNTOS . subcodigo
    (17) subcodigo -> . asignacionCorta
    (18) subcodigo -> . asignacion
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 114
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 131
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 107

    (25) casoBooleano -> CASE ID DOSPUNTOS . subcodigo
    (17) subcodigo -> . asignacionCorta
    (18) subcodigo -> . asignacion
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 114
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 132
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 108

    (20) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (28) bloqueCasosSwitch -> . casoSwitch
    (29) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (30) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 59

    bloqueCasosSwitch              shift and go to state 133
    casoSwitch                     shift and go to state 58

state 109

    (7) funcion -> FUNC ID LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 134


state 110

    (14) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE . subcodigo RBRACE
    (17) subcodigo -> . asignacionCorta
    (18) subcodigo -> . asignacion
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 114
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 135
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 111

    (15) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo . RBRACE LPAREN RPAREN

    RBRACE          shift and go to state 136


state 112

    (17) subcodigo -> asignacionCorta .

    RBRACE          reduce using rule 17 (subcodigo -> asignacionCorta .)
    CASE            reduce using rule 17 (subcodigo -> asignacionCorta .)
    DEFAULT         reduce using rule 17 (subcodigo -> asignacionCorta .)


state 113

    (18) subcodigo -> asignacion .

    RBRACE          reduce using rule 18 (subcodigo -> asignacion .)
    CASE            reduce using rule 18 (subcodigo -> asignacion .)
    DEFAULT         reduce using rule 18 (subcodigo -> asignacion .)


state 114

    (41) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor

    DOSPUNTOS       shift and go to state 27


state 115

    (16) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE LPAREN RPAREN
    (17) subcodigo -> . asignacionCorta
    (18) subcodigo -> . asignacion
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 114
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 137
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 116

    (13) argumentoVariadico -> ID PUNTO PUNTO . PUNTO tipoDato

    PUNTO           shift and go to state 138


state 117

    (79) imprimir -> FMT PUNTO PRINT_LN LPAREN valores . RPAREN

    RPAREN          shift and go to state 139


state 118

    (80) imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .

    $end            reduce using rule 80 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)


state 119

    (60) expresionAritmetica -> valor operador valor .
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    $end            reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    RBRACE          reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    CASE            reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    DEFAULT         reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    COMMA           reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    DOSPUNTOS       reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    SEMICOLON       reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    RPAREN          reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    AND             reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    OR              reduce using rule 60 (expresionAritmetica -> valor operador valor .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

  ! PLUS            [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 120

    (71) condicion -> valor operadorComp valor .
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    AND             reduce using rule 71 (condicion -> valor operadorComp valor .)
    OR              reduce using rule 71 (condicion -> valor operadorComp valor .)
    $end            reduce using rule 71 (condicion -> valor operadorComp valor .)
    RBRACE          reduce using rule 71 (condicion -> valor operadorComp valor .)
    CASE            reduce using rule 71 (condicion -> valor operadorComp valor .)
    DEFAULT         reduce using rule 71 (condicion -> valor operadorComp valor .)
    DOSPUNTOS       reduce using rule 71 (condicion -> valor operadorComp valor .)
    COMMA           reduce using rule 71 (condicion -> valor operadorComp valor .)
    SEMICOLON       reduce using rule 71 (condicion -> valor operadorComp valor .)
    RPAREN          reduce using rule 71 (condicion -> valor operadorComp valor .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

  ! PLUS            [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! MINUS           [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! TIMES           [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! DIVIDE          [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! MOD             [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! NOT_EQUAL       [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! LESS_THAN       [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! LESS_EQUAL      [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! GREATER_THAN    [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 71 (condicion -> valor operadorComp valor .) ]

    operadorComp                   shift and go to state 81
    operador                       shift and go to state 80

state 121

    (59) expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .
    (54) valor -> expresionesAritmeticas .

  ! reduce/reduce conflict for PLUS resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MINUS resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for TIMES resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MOD resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 54 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 54 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RBRACE          reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    CASE            reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DEFAULT         reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    COMMA           reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    SEMICOLON       reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RPAREN          reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    AND             reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    OR              reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    PLUS            reduce using rule 54 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 54 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 54 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 54 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 54 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 54 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 54 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 54 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 54 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 54 (valor -> expresionesAritmeticas .)

  ! PLUS            [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MINUS           [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! TIMES           [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! DIVIDE          [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MOD             [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! NOT_EQUAL       [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_THAN       [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_EQUAL      [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_THAN    [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_EQUAL   [ reduce using rule 59 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]


state 122

    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 123

    (68) condiciones -> condicion conector condiciones .
    (55) valor -> condiciones .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for PLUS resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for TIMES resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 55 (valor -> condiciones .)
  ! reduce/reduce conflict for MOD resolved using rule 55 (valor -> condiciones .)
    $end            reduce using rule 68 (condiciones -> condicion conector condiciones .)
    RBRACE          reduce using rule 68 (condiciones -> condicion conector condiciones .)
    CASE            reduce using rule 68 (condiciones -> condicion conector condiciones .)
    DEFAULT         reduce using rule 68 (condiciones -> condicion conector condiciones .)
    DOSPUNTOS       reduce using rule 68 (condiciones -> condicion conector condiciones .)
    COMMA           reduce using rule 68 (condiciones -> condicion conector condiciones .)
    SEMICOLON       reduce using rule 68 (condiciones -> condicion conector condiciones .)
    RPAREN          reduce using rule 68 (condiciones -> condicion conector condiciones .)
    AND             reduce using rule 68 (condiciones -> condicion conector condiciones .)
    OR              reduce using rule 68 (condiciones -> condicion conector condiciones .)
    NOT_EQUAL       reduce using rule 55 (valor -> condiciones .)
    LESS_THAN       reduce using rule 55 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 55 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 55 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 55 (valor -> condiciones .)
    PLUS            reduce using rule 55 (valor -> condiciones .)
    MINUS           reduce using rule 55 (valor -> condiciones .)
    TIMES           reduce using rule 55 (valor -> condiciones .)
    DIVIDE          reduce using rule 55 (valor -> condiciones .)
    MOD             reduce using rule 55 (valor -> condiciones .)

  ! PLUS            [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! MINUS           [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! TIMES           [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! DIVIDE          [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! MOD             [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! NOT_EQUAL       [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! LESS_THAN       [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! LESS_EQUAL      [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_THAN    [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_EQUAL   [ reduce using rule 68 (condiciones -> condicion conector condiciones .) ]


state 124

    (61) expresionAritmetica -> LPAREN valor operador . valor RPAREN
    (60) expresionAritmetica -> valor operador . valor
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 140
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 125

    (33) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACKET        shift and go to state 141


state 126

    (38) array -> LBRACKET INT RBRACKET . tipoDato
    (42) tipoDato -> . FLOAT64_TYPE
    (43) tipoDato -> . COMPLEX64_TYPE
    (44) tipoDato -> . INT_TYPE
    (45) tipoDato -> . BOOL_TYPE
    (46) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 142

state 127

    (19) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 19 (sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 128

    (30) casoSwitch -> CASE valores DOSPUNTOS . subcodigo
    (17) subcodigo -> . asignacionCorta
    (18) subcodigo -> . asignacion
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 114
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 143
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 129

    (48) valores -> valor COMMA . valores
    (47) valores -> . valor
    (48) valores -> . valor COMMA valores
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 102
    valores                        shift and go to state 144
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 130

    (26) casoDefault -> DEFAULT DOSPUNTOS subcodigo .

    RBRACE          reduce using rule 26 (casoDefault -> DEFAULT DOSPUNTOS subcodigo .)


state 131

    (24) casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .

    CASE            reduce using rule 24 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 24 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 24 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)


state 132

    (25) casoBooleano -> CASE ID DOSPUNTOS subcodigo .

    CASE            reduce using rule 25 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 25 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 25 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)


state 133

    (20) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (26) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (27) casoDefault -> . empty
    (78) empty -> .

    DEFAULT         shift and go to state 62
    RBRACE          reduce using rule 78 (empty -> .)

    casoDefault                    shift and go to state 145
    empty                          shift and go to state 63

state 134

    (7) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE
    (17) subcodigo -> . asignacionCorta
    (18) subcodigo -> . asignacion
    (41) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (39) asignacion -> . VAR ID tipoDato ASSIGN valor
    (40) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 114
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 146
    asignacionCorta                shift and go to state 112
    asignacion                     shift and go to state 113

state 135

    (14) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 147


state 136

    (15) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE . LPAREN RPAREN

    LPAREN          shift and go to state 148


state 137

    (16) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE LPAREN RPAREN

    RBRACE          shift and go to state 149


state 138

    (13) argumentoVariadico -> ID PUNTO PUNTO PUNTO . tipoDato
    (42) tipoDato -> . FLOAT64_TYPE
    (43) tipoDato -> . COMPLEX64_TYPE
    (44) tipoDato -> . INT_TYPE
    (45) tipoDato -> . BOOL_TYPE
    (46) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 150

state 139

    (79) imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .

    $end            reduce using rule 79 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)


state 140

    (61) expresionAritmetica -> LPAREN valor operador valor . RPAREN
    (60) expresionAritmetica -> valor operador valor .
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    RPAREN          shift and go to state 151
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

  ! PLUS            [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 60 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 141

    (33) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE RBRACE
    (34) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE elementosMapa RBRACE
    (42) tipoDato -> . FLOAT64_TYPE
    (43) tipoDato -> . COMPLEX64_TYPE
    (44) tipoDato -> . INT_TYPE
    (45) tipoDato -> . BOOL_TYPE
    (46) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 152

state 142

    (38) array -> LBRACKET INT RBRACKET tipoDato .

    PLUS            reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    MINUS           reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    TIMES           reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    DIVIDE          reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    MOD             reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    NOT_EQUAL       reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    LESS_THAN       reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    LESS_EQUAL      reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    GREATER_THAN    reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    GREATER_EQUAL   reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    $end            reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    RBRACE          reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    CASE            reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    DEFAULT         reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    COMMA           reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    DOSPUNTOS       reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    SEMICOLON       reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    RPAREN          reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    AND             reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)
    OR              reduce using rule 38 (array -> LBRACKET INT RBRACKET tipoDato .)


state 143

    (30) casoSwitch -> CASE valores DOSPUNTOS subcodigo .

    CASE            reduce using rule 30 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 30 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 30 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)


state 144

    (48) valores -> valor COMMA valores .

    DOSPUNTOS       reduce using rule 48 (valores -> valor COMMA valores .)
    RPAREN          reduce using rule 48 (valores -> valor COMMA valores .)


state 145

    (20) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 153


state 146

    (7) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 154


state 147

    (14) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 14 (funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE .)


state 148

    (15) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN . RPAREN

    RPAREN          shift and go to state 155


state 149

    (16) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE . LPAREN RPAREN

    LPAREN          shift and go to state 156


state 150

    (13) argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .

    COMMA           reduce using rule 13 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)
    RPAREN          reduce using rule 13 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)


state 151

    (61) expresionAritmetica -> LPAREN valor operador valor RPAREN .

    PLUS            reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MINUS           reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    TIMES           reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DIVIDE          reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MOD             reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    NOT_EQUAL       reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_THAN       reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_EQUAL      reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_THAN    reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_EQUAL   reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    $end            reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RBRACE          reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    CASE            reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DEFAULT         reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    COMMA           reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DOSPUNTOS       reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    SEMICOLON       reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RPAREN          reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    AND             reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    OR              reduce using rule 61 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)


state 152

    (33) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE RBRACE
    (34) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE elementosMapa RBRACE

    LBRACE          shift and go to state 157


state 153

    (20) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 20 (sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 154

    (7) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 7 (funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .)


state 155

    (15) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .

    $end            reduce using rule 15 (funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .)


state 156

    (16) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN . RPAREN

    RPAREN          shift and go to state 158


state 157

    (33) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . RBRACE
    (34) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . elementosMapa RBRACE
    (35) elementosMapa -> . elementoMapa
    (36) elementosMapa -> . elementoMapa elementosMapa
    (37) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    RBRACE          shift and go to state 159
    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    elementosMapa                  shift and go to state 160
    elementoMapa                   shift and go to state 161
    valor                          shift and go to state 162
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 158

    (16) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .

    $end            reduce using rule 16 (funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .)


state 159

    (33) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .

    PLUS            reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MINUS           reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    TIMES           reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DIVIDE          reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MOD             reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_THAN       reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    $end            reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RBRACE          reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    CASE            reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DEFAULT         reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    COMMA           reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DOSPUNTOS       reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    SEMICOLON       reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RPAREN          reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    AND             reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    OR              reduce using rule 33 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)


state 160

    (34) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa . RBRACE

    RBRACE          shift and go to state 163


state 161

    (35) elementosMapa -> elementoMapa .
    (36) elementosMapa -> elementoMapa . elementosMapa
    (35) elementosMapa -> . elementoMapa
    (36) elementosMapa -> . elementoMapa elementosMapa
    (37) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    RBRACE          reduce using rule 35 (elementosMapa -> elementoMapa .)
    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    elementoMapa                   shift and go to state 161
    elementosMapa                  shift and go to state 164
    valor                          shift and go to state 162
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 162

    (37) elementoMapa -> valor . DOSPUNTOS valor COMMA
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

    DOSPUNTOS       shift and go to state 165
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 163

    (34) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .

    PLUS            reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MINUS           reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    TIMES           reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DIVIDE          reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MOD             reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    NOT_EQUAL       reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_THAN       reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_EQUAL      reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_THAN    reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_EQUAL   reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    $end            reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RBRACE          reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    CASE            reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DEFAULT         reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    COMMA           reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DOSPUNTOS       reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    SEMICOLON       reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RPAREN          reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    AND             reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    OR              reduce using rule 34 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)


state 164

    (36) elementosMapa -> elementoMapa elementosMapa .

    RBRACE          reduce using rule 36 (elementosMapa -> elementoMapa elementosMapa .)


state 165

    (37) elementoMapa -> valor DOSPUNTOS . valor COMMA
    (49) valor -> . FLOAT64
    (50) valor -> . COMPLEX64
    (51) valor -> . INT
    (52) valor -> . BOOL
    (53) valor -> . STRING
    (54) valor -> . expresionesAritmeticas
    (55) valor -> . condiciones
    (56) valor -> . ID
    (57) valor -> . estructurasDeDatos
    (58) expresionesAritmeticas -> . expresionAritmetica
    (59) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (67) condiciones -> . condicion
    (68) condiciones -> . condicion conector condiciones
    (31) estructurasDeDatos -> . mapa
    (32) estructurasDeDatos -> . array
    (60) expresionAritmetica -> . valor operador valor
    (61) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (71) condicion -> . valor operadorComp valor
    (72) condicion -> . BOOL
    (33) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (34) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (38) array -> . LBRACKET INT RBRACKET tipoDato

    FLOAT64         shift and go to state 42
    COMPLEX64       shift and go to state 43
    INT             shift and go to state 44
    BOOL            shift and go to state 45
    STRING          shift and go to state 46
    ID              shift and go to state 40
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55
    LBRACKET        shift and go to state 56

    valor                          shift and go to state 166
    expresionesAritmeticas         shift and go to state 47
    condiciones                    shift and go to state 48
    estructurasDeDatos             shift and go to state 49
    expresionAritmetica            shift and go to state 50
    condicion                      shift and go to state 51
    mapa                           shift and go to state 52
    array                          shift and go to state 53

state 166

    (37) elementoMapa -> valor DOSPUNTOS valor . COMMA
    (60) expresionAritmetica -> valor . operador valor
    (71) condicion -> valor . operadorComp valor
    (62) operador -> . PLUS
    (63) operador -> . MINUS
    (64) operador -> . TIMES
    (65) operador -> . DIVIDE
    (66) operador -> . MOD
    (73) operadorComp -> . NOT_EQUAL
    (74) operadorComp -> . LESS_THAN
    (75) operadorComp -> . LESS_EQUAL
    (76) operadorComp -> . GREATER_THAN
    (77) operadorComp -> . GREATER_EQUAL

    COMMA           shift and go to state 167
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    NOT_EQUAL       shift and go to state 87
    LESS_THAN       shift and go to state 88
    LESS_EQUAL      shift and go to state 89
    GREATER_THAN    shift and go to state 90
    GREATER_EQUAL   shift and go to state 91

    operador                       shift and go to state 80
    operadorComp                   shift and go to state 81

state 167

    (37) elementoMapa -> valor DOSPUNTOS valor COMMA .

    FLOAT64         reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    COMPLEX64       reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    INT             reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    BOOL            reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    STRING          reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    ID              reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LPAREN          reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    MAP             reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LBRACKET        reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    RBRACE          reduce using rule 37 (elementoMapa -> valor DOSPUNTOS valor COMMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for MOD in state 50 resolved as shift
WARNING: shift/reduce conflict for AND in state 51 resolved as shift
WARNING: shift/reduce conflict for OR in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 119 resolved as shift
WARNING: shift/reduce conflict for MOD in state 119 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 119 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 119 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 120 resolved as shift
WARNING: shift/reduce conflict for MOD in state 120 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 120 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 120 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 140 resolved as shift
WARNING: shift/reduce conflict for MOD in state 140 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 140 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 140 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 140 resolved as shift
WARNING: reduce/reduce conflict in state 45 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 45
WARNING: reduce/reduce conflict in state 68 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 68
WARNING: reduce/reduce conflict in state 121 resolved using rule (valor -> expresionesAritmeticas)
WARNING: rejected rule (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas) in state 121
WARNING: reduce/reduce conflict in state 123 resolved using rule (valor -> condiciones)
WARNING: rejected rule (condiciones -> condicion conector condiciones) in state 123
