Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CHAN
    COMMENT
    CONST
    CONTINUE
    DEFER
    ELSE
    EQUAL
    FALLTHROUGH
    FOR
    GO
    GOTO
    IF
    ILLEGAL
    IMPORT
    INTERFACE
    NOT
    PACKAGE
    RANGE
    RETURN
    SELECT
    STRUCT
    TYPE

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> asignacion
Rule 2     codigo -> sentenciaSwitch
Rule 3     codigo -> funcion
Rule 4     codigo -> imprimir
Rule 5     codigo -> funcionSinArg
Rule 6     funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
Rule 7     argumentos -> argumento
Rule 8     argumentos -> argumentoVariadico
Rule 9     argumentos -> argumento COMMA
Rule 10    argumentos -> argumentoVariadico COMMA
Rule 11    argumento -> ID tipoDato
Rule 12    argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato
Rule 13    funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE
Rule 14    subcodigo -> asignacionCorta
Rule 15    subcodigo -> asignacion
Rule 16    sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 17    sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 18    sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
Rule 19    bloqueCasosBooleanos -> casoBooleano
Rule 20    bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos
Rule 21    casoBooleano -> CASE condiciones DOSPUNTOS subcodigo
Rule 22    casoBooleano -> CASE ID DOSPUNTOS subcodigo
Rule 23    casoDefault -> DEFAULT DOSPUNTOS subcodigo
Rule 24    casoDefault -> empty
Rule 25    bloqueCasosSwitch -> casoSwitch
Rule 26    bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch
Rule 27    casoSwitch -> CASE valores DOSPUNTOS subcodigo
Rule 28    estructurasDeDatos -> mapa
Rule 29    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
Rule 30    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
Rule 31    elementosMapa -> elementoMapa
Rule 32    elementosMapa -> elementoMapa elementosMapa
Rule 33    elementoMapa -> valor DOSPUNTOS valor COMMA
Rule 34    asignacion -> VAR ID tipoDato ASSIGN valor
Rule 35    asignacion -> VAR ID ASSIGN valor
Rule 36    asignacionCorta -> ID DOSPUNTOS ASSIGN valor
Rule 37    tipoDato -> FLOAT64_TYPE
Rule 38    tipoDato -> COMPLEX64_TYPE
Rule 39    tipoDato -> INT_TYPE
Rule 40    tipoDato -> BOOL_TYPE
Rule 41    tipoDato -> STRING_TYPE
Rule 42    valores -> valor
Rule 43    valores -> valor COMMA valores
Rule 44    valor -> FLOAT64
Rule 45    valor -> COMPLEX64
Rule 46    valor -> INT
Rule 47    valor -> BOOL
Rule 48    valor -> STRING
Rule 49    valor -> expresionesAritmeticas
Rule 50    valor -> condiciones
Rule 51    valor -> ID
Rule 52    valor -> estructurasDeDatos
Rule 53    expresionesAritmeticas -> expresionAritmetica
Rule 54    expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas
Rule 55    expresionAritmetica -> valor operador valor
Rule 56    expresionAritmetica -> LPAREN valor operador valor RPAREN
Rule 57    operador -> PLUS
Rule 58    operador -> MINUS
Rule 59    operador -> TIMES
Rule 60    operador -> DIVIDE
Rule 61    operador -> MOD
Rule 62    condiciones -> condicion
Rule 63    condiciones -> condicion conector condiciones
Rule 64    conector -> AND
Rule 65    conector -> OR
Rule 66    condicion -> valor operadorComp valor
Rule 67    condicion -> BOOL
Rule 68    operadorComp -> NOT_EQUAL
Rule 69    operadorComp -> LESS_THAN
Rule 70    operadorComp -> LESS_EQUAL
Rule 71    operadorComp -> GREATER_THAN
Rule 72    operadorComp -> GREATER_EQUAL
Rule 73    empty -> <empty>
Rule 74    imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN
Rule 75    imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN

Terminals, with rules where they appear

AND                  : 64
ASSIGN               : 34 35 36
BOOL                 : 47 67
BOOL_TYPE            : 40
BREAK                : 
CASE                 : 21 22 27
CHAN                 : 
COMMA                : 9 10 33 43
COMMENT              : 
COMPLEX64            : 45
COMPLEX64_TYPE       : 38
CONST                : 
CONTINUE             : 
DEFAULT              : 23
DEFER                : 
DIVIDE               : 60
DOSPUNTOS            : 21 22 23 27 33 36
ELSE                 : 
EQUAL                : 
FALLTHROUGH          : 
FLOAT64              : 44
FLOAT64_TYPE         : 37
FMT                  : 74 75
FOR                  : 
FUNC                 : 6 13
GO                   : 
GOTO                 : 
GREATER_EQUAL        : 72
GREATER_THAN         : 71
ID                   : 6 11 12 13 16 17 22 34 35 36 51
IF                   : 
ILLEGAL              : 
IMPORT               : 
INT                  : 46
INTERFACE            : 
INT_TYPE             : 39
LBRACE               : 6 13 16 17 18 29 30
LBRACKET             : 29 30
LESS_EQUAL           : 70
LESS_THAN            : 69
LPAREN               : 6 13 56 74 75
MAP                  : 29 30
MINUS                : 58
MOD                  : 61
NOT                  : 
NOT_EQUAL            : 68
OR                   : 65
PACKAGE              : 
PLUS                 : 57
PRINT_LN             : 74 75
PUNTO                : 12 12 12 74 75
RANGE                : 
RBRACE               : 6 13 16 17 18 29 30
RBRACKET             : 29 30
RETURN               : 
RPAREN               : 6 13 56 74 75
SELECT               : 
SEMICOLON            : 17
STRING               : 48
STRING_TYPE          : 41
STRUCT               : 
SWITCH               : 16 17 18
TIMES                : 59
TYPE                 : 
VAR                  : 34 35
error                : 

Nonterminals, with rules where they appear

argumento            : 7 9
argumentoVariadico   : 8 10
argumentos           : 6
asignacion           : 1 15
asignacionCorta      : 14 17
bloqueCasosBooleanos : 18 20
bloqueCasosSwitch    : 16 17 26
casoBooleano         : 19 20
casoDefault          : 16 17 18
casoSwitch           : 25 26
codigo               : 0
condicion            : 62 63
condiciones          : 21 50 63
conector             : 63
elementoMapa         : 31 32
elementosMapa        : 30 32
empty                : 24
estructurasDeDatos   : 52
expresionAritmetica  : 53 54
expresionesAritmeticas : 49 54
funcion              : 3
funcionSinArg        : 5
imprimir             : 4
mapa                 : 28
operador             : 54 55 56
operadorComp         : 66
sentenciaSwitch      : 2
subcodigo            : 6 13 21 22 23 27
tipoDato             : 11 12 29 29 30 30 34
valor                : 33 33 34 35 36 42 43 55 55 56 56 66 66
valores              : 27 43 74

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . asignacion
    (2) codigo -> . sentenciaSwitch
    (3) codigo -> . funcion
    (4) codigo -> . imprimir
    (5) codigo -> . funcionSinArg
    (34) asignacion -> . VAR ID tipoDato ASSIGN valor
    (35) asignacion -> . VAR ID ASSIGN valor
    (16) sentenciaSwitch -> . SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (17) sentenciaSwitch -> . SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (18) sentenciaSwitch -> . SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (6) funcion -> . FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (74) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (75) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (13) funcionSinArg -> . FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE

    VAR             shift and go to state 7
    SWITCH          shift and go to state 8
    FUNC            shift and go to state 9
    FMT             shift and go to state 10

    codigo                         shift and go to state 1
    asignacion                     shift and go to state 2
    sentenciaSwitch                shift and go to state 3
    funcion                        shift and go to state 4
    imprimir                       shift and go to state 5
    funcionSinArg                  shift and go to state 6

state 1

    (0) S' -> codigo .



state 2

    (1) codigo -> asignacion .

    $end            reduce using rule 1 (codigo -> asignacion .)


state 3

    (2) codigo -> sentenciaSwitch .

    $end            reduce using rule 2 (codigo -> sentenciaSwitch .)


state 4

    (3) codigo -> funcion .

    $end            reduce using rule 3 (codigo -> funcion .)


state 5

    (4) codigo -> imprimir .

    $end            reduce using rule 4 (codigo -> imprimir .)


state 6

    (5) codigo -> funcionSinArg .

    $end            reduce using rule 5 (codigo -> funcionSinArg .)


state 7

    (34) asignacion -> VAR . ID tipoDato ASSIGN valor
    (35) asignacion -> VAR . ID ASSIGN valor

    ID              shift and go to state 11


state 8

    (16) sentenciaSwitch -> SWITCH . ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (17) sentenciaSwitch -> SWITCH . asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (18) sentenciaSwitch -> SWITCH . LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (36) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor

    ID              shift and go to state 12
    LBRACE          shift and go to state 13

    asignacionCorta                shift and go to state 14

state 9

    (6) funcion -> FUNC . ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (13) funcionSinArg -> FUNC . ID LPAREN RPAREN LBRACE subcodigo RBRACE

    ID              shift and go to state 15


state 10

    (74) imprimir -> FMT . PUNTO PRINT_LN LPAREN valores RPAREN
    (75) imprimir -> FMT . PUNTO PRINT_LN LPAREN RPAREN

    PUNTO           shift and go to state 16


state 11

    (34) asignacion -> VAR ID . tipoDato ASSIGN valor
    (35) asignacion -> VAR ID . ASSIGN valor
    (37) tipoDato -> . FLOAT64_TYPE
    (38) tipoDato -> . COMPLEX64_TYPE
    (39) tipoDato -> . INT_TYPE
    (40) tipoDato -> . BOOL_TYPE
    (41) tipoDato -> . STRING_TYPE

    ASSIGN          shift and go to state 18
    FLOAT64_TYPE    shift and go to state 19
    COMPLEX64_TYPE  shift and go to state 20
    INT_TYPE        shift and go to state 21
    BOOL_TYPE       shift and go to state 22
    STRING_TYPE     shift and go to state 23

    tipoDato                       shift and go to state 17

state 12

    (16) sentenciaSwitch -> SWITCH ID . LBRACE bloqueCasosSwitch casoDefault RBRACE
    (36) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor

    LBRACE          shift and go to state 24
    DOSPUNTOS       shift and go to state 25


state 13

    (18) sentenciaSwitch -> SWITCH LBRACE . bloqueCasosBooleanos casoDefault RBRACE
    (19) bloqueCasosBooleanos -> . casoBooleano
    (20) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (21) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (22) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    CASE            shift and go to state 28

    bloqueCasosBooleanos           shift and go to state 26
    casoBooleano                   shift and go to state 27

state 14

    (17) sentenciaSwitch -> SWITCH asignacionCorta . SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    SEMICOLON       shift and go to state 29


state 15

    (6) funcion -> FUNC ID . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (13) funcionSinArg -> FUNC ID . LPAREN RPAREN LBRACE subcodigo RBRACE

    LPAREN          shift and go to state 30


state 16

    (74) imprimir -> FMT PUNTO . PRINT_LN LPAREN valores RPAREN
    (75) imprimir -> FMT PUNTO . PRINT_LN LPAREN RPAREN

    PRINT_LN        shift and go to state 31


state 17

    (34) asignacion -> VAR ID tipoDato . ASSIGN valor

    ASSIGN          shift and go to state 32


state 18

    (35) asignacion -> VAR ID ASSIGN . valor
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 34
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 19

    (37) tipoDato -> FLOAT64_TYPE .

    ASSIGN          reduce using rule 37 (tipoDato -> FLOAT64_TYPE .)
    COMMA           reduce using rule 37 (tipoDato -> FLOAT64_TYPE .)
    RPAREN          reduce using rule 37 (tipoDato -> FLOAT64_TYPE .)
    RBRACKET        reduce using rule 37 (tipoDato -> FLOAT64_TYPE .)
    LBRACE          reduce using rule 37 (tipoDato -> FLOAT64_TYPE .)


state 20

    (38) tipoDato -> COMPLEX64_TYPE .

    ASSIGN          reduce using rule 38 (tipoDato -> COMPLEX64_TYPE .)
    COMMA           reduce using rule 38 (tipoDato -> COMPLEX64_TYPE .)
    RPAREN          reduce using rule 38 (tipoDato -> COMPLEX64_TYPE .)
    RBRACKET        reduce using rule 38 (tipoDato -> COMPLEX64_TYPE .)
    LBRACE          reduce using rule 38 (tipoDato -> COMPLEX64_TYPE .)


state 21

    (39) tipoDato -> INT_TYPE .

    ASSIGN          reduce using rule 39 (tipoDato -> INT_TYPE .)
    COMMA           reduce using rule 39 (tipoDato -> INT_TYPE .)
    RPAREN          reduce using rule 39 (tipoDato -> INT_TYPE .)
    RBRACKET        reduce using rule 39 (tipoDato -> INT_TYPE .)
    LBRACE          reduce using rule 39 (tipoDato -> INT_TYPE .)


state 22

    (40) tipoDato -> BOOL_TYPE .

    ASSIGN          reduce using rule 40 (tipoDato -> BOOL_TYPE .)
    COMMA           reduce using rule 40 (tipoDato -> BOOL_TYPE .)
    RPAREN          reduce using rule 40 (tipoDato -> BOOL_TYPE .)
    RBRACKET        reduce using rule 40 (tipoDato -> BOOL_TYPE .)
    LBRACE          reduce using rule 40 (tipoDato -> BOOL_TYPE .)


state 23

    (41) tipoDato -> STRING_TYPE .

    ASSIGN          reduce using rule 41 (tipoDato -> STRING_TYPE .)
    COMMA           reduce using rule 41 (tipoDato -> STRING_TYPE .)
    RPAREN          reduce using rule 41 (tipoDato -> STRING_TYPE .)
    RBRACKET        reduce using rule 41 (tipoDato -> STRING_TYPE .)
    LBRACE          reduce using rule 41 (tipoDato -> STRING_TYPE .)


state 24

    (16) sentenciaSwitch -> SWITCH ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (25) bloqueCasosSwitch -> . casoSwitch
    (26) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (27) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 50

    bloqueCasosSwitch              shift and go to state 48
    casoSwitch                     shift and go to state 49

state 25

    (36) asignacionCorta -> ID DOSPUNTOS . ASSIGN valor

    ASSIGN          shift and go to state 51


state 26

    (18) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos . casoDefault RBRACE
    (23) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (24) casoDefault -> . empty
    (73) empty -> .

    DEFAULT         shift and go to state 53
    RBRACE          reduce using rule 73 (empty -> .)

    casoDefault                    shift and go to state 52
    empty                          shift and go to state 54

state 27

    (19) bloqueCasosBooleanos -> casoBooleano .
    (20) bloqueCasosBooleanos -> casoBooleano . bloqueCasosBooleanos
    (19) bloqueCasosBooleanos -> . casoBooleano
    (20) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (21) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (22) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 19 (bloqueCasosBooleanos -> casoBooleano .)
    RBRACE          reduce using rule 19 (bloqueCasosBooleanos -> casoBooleano .)
    CASE            shift and go to state 28

    casoBooleano                   shift and go to state 27
    bloqueCasosBooleanos           shift and go to state 55

state 28

    (21) casoBooleano -> CASE . condiciones DOSPUNTOS subcodigo
    (22) casoBooleano -> CASE . ID DOSPUNTOS subcodigo
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    ID              shift and go to state 57
    BOOL            shift and go to state 59
    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    STRING          shift and go to state 39
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    condiciones                    shift and go to state 56
    condicion                      shift and go to state 44
    valor                          shift and go to state 58
    expresionesAritmeticas         shift and go to state 40
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    mapa                           shift and go to state 45

state 29

    (17) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON . ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    ID              shift and go to state 60


state 30

    (6) funcion -> FUNC ID LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE
    (13) funcionSinArg -> FUNC ID LPAREN . RPAREN LBRACE subcodigo RBRACE
    (7) argumentos -> . argumento
    (8) argumentos -> . argumentoVariadico
    (9) argumentos -> . argumento COMMA
    (10) argumentos -> . argumentoVariadico COMMA
    (11) argumento -> . ID tipoDato
    (12) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    RPAREN          shift and go to state 63
    ID              shift and go to state 61

    argumentos                     shift and go to state 62
    argumento                      shift and go to state 64
    argumentoVariadico             shift and go to state 65

state 31

    (74) imprimir -> FMT PUNTO PRINT_LN . LPAREN valores RPAREN
    (75) imprimir -> FMT PUNTO PRINT_LN . LPAREN RPAREN

    LPAREN          shift and go to state 66


state 32

    (34) asignacion -> VAR ID tipoDato ASSIGN . valor
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 67
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 33

    (51) valor -> ID .

    PLUS            reduce using rule 51 (valor -> ID .)
    MINUS           reduce using rule 51 (valor -> ID .)
    TIMES           reduce using rule 51 (valor -> ID .)
    DIVIDE          reduce using rule 51 (valor -> ID .)
    MOD             reduce using rule 51 (valor -> ID .)
    NOT_EQUAL       reduce using rule 51 (valor -> ID .)
    LESS_THAN       reduce using rule 51 (valor -> ID .)
    LESS_EQUAL      reduce using rule 51 (valor -> ID .)
    GREATER_THAN    reduce using rule 51 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 51 (valor -> ID .)
    $end            reduce using rule 51 (valor -> ID .)
    RBRACE          reduce using rule 51 (valor -> ID .)
    CASE            reduce using rule 51 (valor -> ID .)
    DEFAULT         reduce using rule 51 (valor -> ID .)
    COMMA           reduce using rule 51 (valor -> ID .)
    DOSPUNTOS       reduce using rule 51 (valor -> ID .)
    SEMICOLON       reduce using rule 51 (valor -> ID .)
    RPAREN          reduce using rule 51 (valor -> ID .)
    AND             reduce using rule 51 (valor -> ID .)
    OR              reduce using rule 51 (valor -> ID .)


state 34

    (35) asignacion -> VAR ID ASSIGN valor .
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

    $end            reduce using rule 35 (asignacion -> VAR ID ASSIGN valor .)
    RBRACE          reduce using rule 35 (asignacion -> VAR ID ASSIGN valor .)
    CASE            reduce using rule 35 (asignacion -> VAR ID ASSIGN valor .)
    DEFAULT         reduce using rule 35 (asignacion -> VAR ID ASSIGN valor .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 35

    (44) valor -> FLOAT64 .

    PLUS            reduce using rule 44 (valor -> FLOAT64 .)
    MINUS           reduce using rule 44 (valor -> FLOAT64 .)
    TIMES           reduce using rule 44 (valor -> FLOAT64 .)
    DIVIDE          reduce using rule 44 (valor -> FLOAT64 .)
    MOD             reduce using rule 44 (valor -> FLOAT64 .)
    NOT_EQUAL       reduce using rule 44 (valor -> FLOAT64 .)
    LESS_THAN       reduce using rule 44 (valor -> FLOAT64 .)
    LESS_EQUAL      reduce using rule 44 (valor -> FLOAT64 .)
    GREATER_THAN    reduce using rule 44 (valor -> FLOAT64 .)
    GREATER_EQUAL   reduce using rule 44 (valor -> FLOAT64 .)
    $end            reduce using rule 44 (valor -> FLOAT64 .)
    RBRACE          reduce using rule 44 (valor -> FLOAT64 .)
    CASE            reduce using rule 44 (valor -> FLOAT64 .)
    DEFAULT         reduce using rule 44 (valor -> FLOAT64 .)
    COMMA           reduce using rule 44 (valor -> FLOAT64 .)
    DOSPUNTOS       reduce using rule 44 (valor -> FLOAT64 .)
    SEMICOLON       reduce using rule 44 (valor -> FLOAT64 .)
    RPAREN          reduce using rule 44 (valor -> FLOAT64 .)
    AND             reduce using rule 44 (valor -> FLOAT64 .)
    OR              reduce using rule 44 (valor -> FLOAT64 .)


state 36

    (45) valor -> COMPLEX64 .

    PLUS            reduce using rule 45 (valor -> COMPLEX64 .)
    MINUS           reduce using rule 45 (valor -> COMPLEX64 .)
    TIMES           reduce using rule 45 (valor -> COMPLEX64 .)
    DIVIDE          reduce using rule 45 (valor -> COMPLEX64 .)
    MOD             reduce using rule 45 (valor -> COMPLEX64 .)
    NOT_EQUAL       reduce using rule 45 (valor -> COMPLEX64 .)
    LESS_THAN       reduce using rule 45 (valor -> COMPLEX64 .)
    LESS_EQUAL      reduce using rule 45 (valor -> COMPLEX64 .)
    GREATER_THAN    reduce using rule 45 (valor -> COMPLEX64 .)
    GREATER_EQUAL   reduce using rule 45 (valor -> COMPLEX64 .)
    $end            reduce using rule 45 (valor -> COMPLEX64 .)
    RBRACE          reduce using rule 45 (valor -> COMPLEX64 .)
    CASE            reduce using rule 45 (valor -> COMPLEX64 .)
    DEFAULT         reduce using rule 45 (valor -> COMPLEX64 .)
    COMMA           reduce using rule 45 (valor -> COMPLEX64 .)
    DOSPUNTOS       reduce using rule 45 (valor -> COMPLEX64 .)
    SEMICOLON       reduce using rule 45 (valor -> COMPLEX64 .)
    RPAREN          reduce using rule 45 (valor -> COMPLEX64 .)
    AND             reduce using rule 45 (valor -> COMPLEX64 .)
    OR              reduce using rule 45 (valor -> COMPLEX64 .)


state 37

    (46) valor -> INT .

    PLUS            reduce using rule 46 (valor -> INT .)
    MINUS           reduce using rule 46 (valor -> INT .)
    TIMES           reduce using rule 46 (valor -> INT .)
    DIVIDE          reduce using rule 46 (valor -> INT .)
    MOD             reduce using rule 46 (valor -> INT .)
    NOT_EQUAL       reduce using rule 46 (valor -> INT .)
    LESS_THAN       reduce using rule 46 (valor -> INT .)
    LESS_EQUAL      reduce using rule 46 (valor -> INT .)
    GREATER_THAN    reduce using rule 46 (valor -> INT .)
    GREATER_EQUAL   reduce using rule 46 (valor -> INT .)
    $end            reduce using rule 46 (valor -> INT .)
    RBRACE          reduce using rule 46 (valor -> INT .)
    CASE            reduce using rule 46 (valor -> INT .)
    DEFAULT         reduce using rule 46 (valor -> INT .)
    COMMA           reduce using rule 46 (valor -> INT .)
    DOSPUNTOS       reduce using rule 46 (valor -> INT .)
    SEMICOLON       reduce using rule 46 (valor -> INT .)
    RPAREN          reduce using rule 46 (valor -> INT .)
    AND             reduce using rule 46 (valor -> INT .)
    OR              reduce using rule 46 (valor -> INT .)


state 38

    (47) valor -> BOOL .
    (67) condicion -> BOOL .

  ! reduce/reduce conflict for AND resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for OR resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for $end resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for RBRACE resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for CASE resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for RPAREN resolved using rule 47 (valor -> BOOL .)
    PLUS            reduce using rule 47 (valor -> BOOL .)
    MINUS           reduce using rule 47 (valor -> BOOL .)
    TIMES           reduce using rule 47 (valor -> BOOL .)
    DIVIDE          reduce using rule 47 (valor -> BOOL .)
    MOD             reduce using rule 47 (valor -> BOOL .)
    NOT_EQUAL       reduce using rule 47 (valor -> BOOL .)
    LESS_THAN       reduce using rule 47 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 47 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 47 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 47 (valor -> BOOL .)
    $end            reduce using rule 47 (valor -> BOOL .)
    RBRACE          reduce using rule 47 (valor -> BOOL .)
    CASE            reduce using rule 47 (valor -> BOOL .)
    DEFAULT         reduce using rule 47 (valor -> BOOL .)
    COMMA           reduce using rule 47 (valor -> BOOL .)
    DOSPUNTOS       reduce using rule 47 (valor -> BOOL .)
    SEMICOLON       reduce using rule 47 (valor -> BOOL .)
    RPAREN          reduce using rule 47 (valor -> BOOL .)
    AND             reduce using rule 47 (valor -> BOOL .)
    OR              reduce using rule 47 (valor -> BOOL .)

  ! AND             [ reduce using rule 67 (condicion -> BOOL .) ]
  ! OR              [ reduce using rule 67 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 67 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 67 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 67 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 67 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 67 (condicion -> BOOL .) ]
  ! NOT_EQUAL       [ reduce using rule 67 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 67 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 67 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 67 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 67 (condicion -> BOOL .) ]
  ! $end            [ reduce using rule 67 (condicion -> BOOL .) ]
  ! RBRACE          [ reduce using rule 67 (condicion -> BOOL .) ]
  ! CASE            [ reduce using rule 67 (condicion -> BOOL .) ]
  ! DEFAULT         [ reduce using rule 67 (condicion -> BOOL .) ]
  ! COMMA           [ reduce using rule 67 (condicion -> BOOL .) ]
  ! DOSPUNTOS       [ reduce using rule 67 (condicion -> BOOL .) ]
  ! SEMICOLON       [ reduce using rule 67 (condicion -> BOOL .) ]
  ! RPAREN          [ reduce using rule 67 (condicion -> BOOL .) ]


state 39

    (48) valor -> STRING .

    PLUS            reduce using rule 48 (valor -> STRING .)
    MINUS           reduce using rule 48 (valor -> STRING .)
    TIMES           reduce using rule 48 (valor -> STRING .)
    DIVIDE          reduce using rule 48 (valor -> STRING .)
    MOD             reduce using rule 48 (valor -> STRING .)
    NOT_EQUAL       reduce using rule 48 (valor -> STRING .)
    LESS_THAN       reduce using rule 48 (valor -> STRING .)
    LESS_EQUAL      reduce using rule 48 (valor -> STRING .)
    GREATER_THAN    reduce using rule 48 (valor -> STRING .)
    GREATER_EQUAL   reduce using rule 48 (valor -> STRING .)
    $end            reduce using rule 48 (valor -> STRING .)
    RBRACE          reduce using rule 48 (valor -> STRING .)
    CASE            reduce using rule 48 (valor -> STRING .)
    DEFAULT         reduce using rule 48 (valor -> STRING .)
    COMMA           reduce using rule 48 (valor -> STRING .)
    DOSPUNTOS       reduce using rule 48 (valor -> STRING .)
    SEMICOLON       reduce using rule 48 (valor -> STRING .)
    RPAREN          reduce using rule 48 (valor -> STRING .)
    AND             reduce using rule 48 (valor -> STRING .)
    OR              reduce using rule 48 (valor -> STRING .)


state 40

    (49) valor -> expresionesAritmeticas .

    PLUS            reduce using rule 49 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 49 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 49 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 49 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 49 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 49 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 49 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 49 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 49 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 49 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 49 (valor -> expresionesAritmeticas .)
    RBRACE          reduce using rule 49 (valor -> expresionesAritmeticas .)
    CASE            reduce using rule 49 (valor -> expresionesAritmeticas .)
    DEFAULT         reduce using rule 49 (valor -> expresionesAritmeticas .)
    COMMA           reduce using rule 49 (valor -> expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 49 (valor -> expresionesAritmeticas .)
    SEMICOLON       reduce using rule 49 (valor -> expresionesAritmeticas .)
    RPAREN          reduce using rule 49 (valor -> expresionesAritmeticas .)
    AND             reduce using rule 49 (valor -> expresionesAritmeticas .)
    OR              reduce using rule 49 (valor -> expresionesAritmeticas .)


state 41

    (50) valor -> condiciones .

    PLUS            reduce using rule 50 (valor -> condiciones .)
    MINUS           reduce using rule 50 (valor -> condiciones .)
    TIMES           reduce using rule 50 (valor -> condiciones .)
    DIVIDE          reduce using rule 50 (valor -> condiciones .)
    MOD             reduce using rule 50 (valor -> condiciones .)
    NOT_EQUAL       reduce using rule 50 (valor -> condiciones .)
    LESS_THAN       reduce using rule 50 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 50 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 50 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 50 (valor -> condiciones .)
    $end            reduce using rule 50 (valor -> condiciones .)
    RBRACE          reduce using rule 50 (valor -> condiciones .)
    CASE            reduce using rule 50 (valor -> condiciones .)
    DEFAULT         reduce using rule 50 (valor -> condiciones .)
    COMMA           reduce using rule 50 (valor -> condiciones .)
    DOSPUNTOS       reduce using rule 50 (valor -> condiciones .)
    SEMICOLON       reduce using rule 50 (valor -> condiciones .)
    RPAREN          reduce using rule 50 (valor -> condiciones .)
    AND             reduce using rule 50 (valor -> condiciones .)
    OR              reduce using rule 50 (valor -> condiciones .)


state 42

    (52) valor -> estructurasDeDatos .

    PLUS            reduce using rule 52 (valor -> estructurasDeDatos .)
    MINUS           reduce using rule 52 (valor -> estructurasDeDatos .)
    TIMES           reduce using rule 52 (valor -> estructurasDeDatos .)
    DIVIDE          reduce using rule 52 (valor -> estructurasDeDatos .)
    MOD             reduce using rule 52 (valor -> estructurasDeDatos .)
    NOT_EQUAL       reduce using rule 52 (valor -> estructurasDeDatos .)
    LESS_THAN       reduce using rule 52 (valor -> estructurasDeDatos .)
    LESS_EQUAL      reduce using rule 52 (valor -> estructurasDeDatos .)
    GREATER_THAN    reduce using rule 52 (valor -> estructurasDeDatos .)
    GREATER_EQUAL   reduce using rule 52 (valor -> estructurasDeDatos .)
    $end            reduce using rule 52 (valor -> estructurasDeDatos .)
    RBRACE          reduce using rule 52 (valor -> estructurasDeDatos .)
    CASE            reduce using rule 52 (valor -> estructurasDeDatos .)
    DEFAULT         reduce using rule 52 (valor -> estructurasDeDatos .)
    COMMA           reduce using rule 52 (valor -> estructurasDeDatos .)
    DOSPUNTOS       reduce using rule 52 (valor -> estructurasDeDatos .)
    SEMICOLON       reduce using rule 52 (valor -> estructurasDeDatos .)
    RPAREN          reduce using rule 52 (valor -> estructurasDeDatos .)
    AND             reduce using rule 52 (valor -> estructurasDeDatos .)
    OR              reduce using rule 52 (valor -> estructurasDeDatos .)


state 43

    (53) expresionesAritmeticas -> expresionAritmetica .
    (54) expresionesAritmeticas -> expresionAritmetica . operador expresionesAritmeticas
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NOT_EQUAL       reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_THAN       reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_EQUAL      reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_THAN    reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_EQUAL   reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    $end            reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    RBRACE          reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    CASE            reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    DEFAULT         reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    COMMA           reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    DOSPUNTOS       reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    SEMICOLON       reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    RPAREN          reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    AND             reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    OR              reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74

  ! PLUS            [ reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MINUS           [ reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! TIMES           [ reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! DIVIDE          [ reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MOD             [ reduce using rule 53 (expresionesAritmeticas -> expresionAritmetica .) ]

    operador                       shift and go to state 80

state 44

    (62) condiciones -> condicion .
    (63) condiciones -> condicion . conector condiciones
    (64) conector -> . AND
    (65) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PLUS            reduce using rule 62 (condiciones -> condicion .)
    MINUS           reduce using rule 62 (condiciones -> condicion .)
    TIMES           reduce using rule 62 (condiciones -> condicion .)
    DIVIDE          reduce using rule 62 (condiciones -> condicion .)
    MOD             reduce using rule 62 (condiciones -> condicion .)
    NOT_EQUAL       reduce using rule 62 (condiciones -> condicion .)
    LESS_THAN       reduce using rule 62 (condiciones -> condicion .)
    LESS_EQUAL      reduce using rule 62 (condiciones -> condicion .)
    GREATER_THAN    reduce using rule 62 (condiciones -> condicion .)
    GREATER_EQUAL   reduce using rule 62 (condiciones -> condicion .)
    $end            reduce using rule 62 (condiciones -> condicion .)
    RBRACE          reduce using rule 62 (condiciones -> condicion .)
    CASE            reduce using rule 62 (condiciones -> condicion .)
    DEFAULT         reduce using rule 62 (condiciones -> condicion .)
    DOSPUNTOS       reduce using rule 62 (condiciones -> condicion .)
    COMMA           reduce using rule 62 (condiciones -> condicion .)
    SEMICOLON       reduce using rule 62 (condiciones -> condicion .)
    RPAREN          reduce using rule 62 (condiciones -> condicion .)
    AND             shift and go to state 82
    OR              shift and go to state 83

  ! AND             [ reduce using rule 62 (condiciones -> condicion .) ]
  ! OR              [ reduce using rule 62 (condiciones -> condicion .) ]

    conector                       shift and go to state 81

state 45

    (28) estructurasDeDatos -> mapa .

    PLUS            reduce using rule 28 (estructurasDeDatos -> mapa .)
    MINUS           reduce using rule 28 (estructurasDeDatos -> mapa .)
    TIMES           reduce using rule 28 (estructurasDeDatos -> mapa .)
    DIVIDE          reduce using rule 28 (estructurasDeDatos -> mapa .)
    MOD             reduce using rule 28 (estructurasDeDatos -> mapa .)
    NOT_EQUAL       reduce using rule 28 (estructurasDeDatos -> mapa .)
    LESS_THAN       reduce using rule 28 (estructurasDeDatos -> mapa .)
    LESS_EQUAL      reduce using rule 28 (estructurasDeDatos -> mapa .)
    GREATER_THAN    reduce using rule 28 (estructurasDeDatos -> mapa .)
    GREATER_EQUAL   reduce using rule 28 (estructurasDeDatos -> mapa .)
    $end            reduce using rule 28 (estructurasDeDatos -> mapa .)
    RBRACE          reduce using rule 28 (estructurasDeDatos -> mapa .)
    CASE            reduce using rule 28 (estructurasDeDatos -> mapa .)
    DEFAULT         reduce using rule 28 (estructurasDeDatos -> mapa .)
    COMMA           reduce using rule 28 (estructurasDeDatos -> mapa .)
    DOSPUNTOS       reduce using rule 28 (estructurasDeDatos -> mapa .)
    SEMICOLON       reduce using rule 28 (estructurasDeDatos -> mapa .)
    RPAREN          reduce using rule 28 (estructurasDeDatos -> mapa .)
    AND             reduce using rule 28 (estructurasDeDatos -> mapa .)
    OR              reduce using rule 28 (estructurasDeDatos -> mapa .)


state 46

    (56) expresionAritmetica -> LPAREN . valor operador valor RPAREN
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 84
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 47

    (29) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LBRACKET        shift and go to state 85


state 48

    (16) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (23) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (24) casoDefault -> . empty
    (73) empty -> .

    DEFAULT         shift and go to state 53
    RBRACE          reduce using rule 73 (empty -> .)

    casoDefault                    shift and go to state 86
    empty                          shift and go to state 54

state 49

    (25) bloqueCasosSwitch -> casoSwitch .
    (26) bloqueCasosSwitch -> casoSwitch . bloqueCasosSwitch
    (25) bloqueCasosSwitch -> . casoSwitch
    (26) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (27) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 25 (bloqueCasosSwitch -> casoSwitch .)
    RBRACE          reduce using rule 25 (bloqueCasosSwitch -> casoSwitch .)
    CASE            shift and go to state 50

    casoSwitch                     shift and go to state 49
    bloqueCasosSwitch              shift and go to state 87

state 50

    (27) casoSwitch -> CASE . valores DOSPUNTOS subcodigo
    (42) valores -> . valor
    (43) valores -> . valor COMMA valores
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valores                        shift and go to state 88
    valor                          shift and go to state 89
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 51

    (36) asignacionCorta -> ID DOSPUNTOS ASSIGN . valor
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 90
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 52

    (18) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault . RBRACE

    RBRACE          shift and go to state 91


state 53

    (23) casoDefault -> DEFAULT . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 92


state 54

    (24) casoDefault -> empty .

    RBRACE          reduce using rule 24 (casoDefault -> empty .)


state 55

    (20) bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .

    DEFAULT         reduce using rule 20 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)
    RBRACE          reduce using rule 20 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)


state 56

    (21) casoBooleano -> CASE condiciones . DOSPUNTOS subcodigo
    (50) valor -> condiciones .

    DOSPUNTOS       shift and go to state 93
    NOT_EQUAL       reduce using rule 50 (valor -> condiciones .)
    LESS_THAN       reduce using rule 50 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 50 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 50 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 50 (valor -> condiciones .)
    PLUS            reduce using rule 50 (valor -> condiciones .)
    MINUS           reduce using rule 50 (valor -> condiciones .)
    TIMES           reduce using rule 50 (valor -> condiciones .)
    DIVIDE          reduce using rule 50 (valor -> condiciones .)
    MOD             reduce using rule 50 (valor -> condiciones .)


state 57

    (22) casoBooleano -> CASE ID . DOSPUNTOS subcodigo
    (51) valor -> ID .

    DOSPUNTOS       shift and go to state 94
    NOT_EQUAL       reduce using rule 51 (valor -> ID .)
    LESS_THAN       reduce using rule 51 (valor -> ID .)
    LESS_EQUAL      reduce using rule 51 (valor -> ID .)
    GREATER_THAN    reduce using rule 51 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 51 (valor -> ID .)
    PLUS            reduce using rule 51 (valor -> ID .)
    MINUS           reduce using rule 51 (valor -> ID .)
    TIMES           reduce using rule 51 (valor -> ID .)
    DIVIDE          reduce using rule 51 (valor -> ID .)
    MOD             reduce using rule 51 (valor -> ID .)


state 58

    (66) condicion -> valor . operadorComp valor
    (55) expresionAritmetica -> valor . operador valor
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD

    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74

    operadorComp                   shift and go to state 69
    operador                       shift and go to state 68

state 59

    (67) condicion -> BOOL .
    (47) valor -> BOOL .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 47 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 47 (valor -> BOOL .)
    AND             reduce using rule 67 (condicion -> BOOL .)
    OR              reduce using rule 67 (condicion -> BOOL .)
    DOSPUNTOS       reduce using rule 67 (condicion -> BOOL .)
    $end            reduce using rule 67 (condicion -> BOOL .)
    RBRACE          reduce using rule 67 (condicion -> BOOL .)
    CASE            reduce using rule 67 (condicion -> BOOL .)
    DEFAULT         reduce using rule 67 (condicion -> BOOL .)
    COMMA           reduce using rule 67 (condicion -> BOOL .)
    SEMICOLON       reduce using rule 67 (condicion -> BOOL .)
    RPAREN          reduce using rule 67 (condicion -> BOOL .)
    NOT_EQUAL       reduce using rule 47 (valor -> BOOL .)
    LESS_THAN       reduce using rule 47 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 47 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 47 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 47 (valor -> BOOL .)
    PLUS            reduce using rule 47 (valor -> BOOL .)
    MINUS           reduce using rule 47 (valor -> BOOL .)
    TIMES           reduce using rule 47 (valor -> BOOL .)
    DIVIDE          reduce using rule 47 (valor -> BOOL .)
    MOD             reduce using rule 47 (valor -> BOOL .)

  ! NOT_EQUAL       [ reduce using rule 67 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 67 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 67 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 67 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 67 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 67 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 67 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 67 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 67 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 67 (condicion -> BOOL .) ]


state 60

    (17) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID . LBRACE bloqueCasosSwitch casoDefault RBRACE

    LBRACE          shift and go to state 95


state 61

    (11) argumento -> ID . tipoDato
    (12) argumentoVariadico -> ID . PUNTO PUNTO PUNTO tipoDato
    (37) tipoDato -> . FLOAT64_TYPE
    (38) tipoDato -> . COMPLEX64_TYPE
    (39) tipoDato -> . INT_TYPE
    (40) tipoDato -> . BOOL_TYPE
    (41) tipoDato -> . STRING_TYPE

    PUNTO           shift and go to state 97
    FLOAT64_TYPE    shift and go to state 19
    COMPLEX64_TYPE  shift and go to state 20
    INT_TYPE        shift and go to state 21
    BOOL_TYPE       shift and go to state 22
    STRING_TYPE     shift and go to state 23

    tipoDato                       shift and go to state 96

state 62

    (6) funcion -> FUNC ID LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE

    RPAREN          shift and go to state 98


state 63

    (13) funcionSinArg -> FUNC ID LPAREN RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 99


state 64

    (7) argumentos -> argumento .
    (9) argumentos -> argumento . COMMA

    RPAREN          reduce using rule 7 (argumentos -> argumento .)
    COMMA           shift and go to state 100


state 65

    (8) argumentos -> argumentoVariadico .
    (10) argumentos -> argumentoVariadico . COMMA

    RPAREN          reduce using rule 8 (argumentos -> argumentoVariadico .)
    COMMA           shift and go to state 101


state 66

    (74) imprimir -> FMT PUNTO PRINT_LN LPAREN . valores RPAREN
    (75) imprimir -> FMT PUNTO PRINT_LN LPAREN . RPAREN
    (42) valores -> . valor
    (43) valores -> . valor COMMA valores
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RPAREN          shift and go to state 103
    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valores                        shift and go to state 102
    valor                          shift and go to state 89
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 67

    (34) asignacion -> VAR ID tipoDato ASSIGN valor .
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

    $end            reduce using rule 34 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    RBRACE          reduce using rule 34 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    CASE            reduce using rule 34 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    DEFAULT         reduce using rule 34 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 68

    (55) expresionAritmetica -> valor operador . valor
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 104
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 69

    (66) condicion -> valor operadorComp . valor
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 105
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 70

    (57) operador -> PLUS .

    FLOAT64         reduce using rule 57 (operador -> PLUS .)
    COMPLEX64       reduce using rule 57 (operador -> PLUS .)
    INT             reduce using rule 57 (operador -> PLUS .)
    BOOL            reduce using rule 57 (operador -> PLUS .)
    STRING          reduce using rule 57 (operador -> PLUS .)
    ID              reduce using rule 57 (operador -> PLUS .)
    LPAREN          reduce using rule 57 (operador -> PLUS .)
    MAP             reduce using rule 57 (operador -> PLUS .)


state 71

    (58) operador -> MINUS .

    FLOAT64         reduce using rule 58 (operador -> MINUS .)
    COMPLEX64       reduce using rule 58 (operador -> MINUS .)
    INT             reduce using rule 58 (operador -> MINUS .)
    BOOL            reduce using rule 58 (operador -> MINUS .)
    STRING          reduce using rule 58 (operador -> MINUS .)
    ID              reduce using rule 58 (operador -> MINUS .)
    LPAREN          reduce using rule 58 (operador -> MINUS .)
    MAP             reduce using rule 58 (operador -> MINUS .)


state 72

    (59) operador -> TIMES .

    FLOAT64         reduce using rule 59 (operador -> TIMES .)
    COMPLEX64       reduce using rule 59 (operador -> TIMES .)
    INT             reduce using rule 59 (operador -> TIMES .)
    BOOL            reduce using rule 59 (operador -> TIMES .)
    STRING          reduce using rule 59 (operador -> TIMES .)
    ID              reduce using rule 59 (operador -> TIMES .)
    LPAREN          reduce using rule 59 (operador -> TIMES .)
    MAP             reduce using rule 59 (operador -> TIMES .)


state 73

    (60) operador -> DIVIDE .

    FLOAT64         reduce using rule 60 (operador -> DIVIDE .)
    COMPLEX64       reduce using rule 60 (operador -> DIVIDE .)
    INT             reduce using rule 60 (operador -> DIVIDE .)
    BOOL            reduce using rule 60 (operador -> DIVIDE .)
    STRING          reduce using rule 60 (operador -> DIVIDE .)
    ID              reduce using rule 60 (operador -> DIVIDE .)
    LPAREN          reduce using rule 60 (operador -> DIVIDE .)
    MAP             reduce using rule 60 (operador -> DIVIDE .)


state 74

    (61) operador -> MOD .

    FLOAT64         reduce using rule 61 (operador -> MOD .)
    COMPLEX64       reduce using rule 61 (operador -> MOD .)
    INT             reduce using rule 61 (operador -> MOD .)
    BOOL            reduce using rule 61 (operador -> MOD .)
    STRING          reduce using rule 61 (operador -> MOD .)
    ID              reduce using rule 61 (operador -> MOD .)
    LPAREN          reduce using rule 61 (operador -> MOD .)
    MAP             reduce using rule 61 (operador -> MOD .)


state 75

    (68) operadorComp -> NOT_EQUAL .

    FLOAT64         reduce using rule 68 (operadorComp -> NOT_EQUAL .)
    COMPLEX64       reduce using rule 68 (operadorComp -> NOT_EQUAL .)
    INT             reduce using rule 68 (operadorComp -> NOT_EQUAL .)
    BOOL            reduce using rule 68 (operadorComp -> NOT_EQUAL .)
    STRING          reduce using rule 68 (operadorComp -> NOT_EQUAL .)
    ID              reduce using rule 68 (operadorComp -> NOT_EQUAL .)
    LPAREN          reduce using rule 68 (operadorComp -> NOT_EQUAL .)
    MAP             reduce using rule 68 (operadorComp -> NOT_EQUAL .)


state 76

    (69) operadorComp -> LESS_THAN .

    FLOAT64         reduce using rule 69 (operadorComp -> LESS_THAN .)
    COMPLEX64       reduce using rule 69 (operadorComp -> LESS_THAN .)
    INT             reduce using rule 69 (operadorComp -> LESS_THAN .)
    BOOL            reduce using rule 69 (operadorComp -> LESS_THAN .)
    STRING          reduce using rule 69 (operadorComp -> LESS_THAN .)
    ID              reduce using rule 69 (operadorComp -> LESS_THAN .)
    LPAREN          reduce using rule 69 (operadorComp -> LESS_THAN .)
    MAP             reduce using rule 69 (operadorComp -> LESS_THAN .)


state 77

    (70) operadorComp -> LESS_EQUAL .

    FLOAT64         reduce using rule 70 (operadorComp -> LESS_EQUAL .)
    COMPLEX64       reduce using rule 70 (operadorComp -> LESS_EQUAL .)
    INT             reduce using rule 70 (operadorComp -> LESS_EQUAL .)
    BOOL            reduce using rule 70 (operadorComp -> LESS_EQUAL .)
    STRING          reduce using rule 70 (operadorComp -> LESS_EQUAL .)
    ID              reduce using rule 70 (operadorComp -> LESS_EQUAL .)
    LPAREN          reduce using rule 70 (operadorComp -> LESS_EQUAL .)
    MAP             reduce using rule 70 (operadorComp -> LESS_EQUAL .)


state 78

    (71) operadorComp -> GREATER_THAN .

    FLOAT64         reduce using rule 71 (operadorComp -> GREATER_THAN .)
    COMPLEX64       reduce using rule 71 (operadorComp -> GREATER_THAN .)
    INT             reduce using rule 71 (operadorComp -> GREATER_THAN .)
    BOOL            reduce using rule 71 (operadorComp -> GREATER_THAN .)
    STRING          reduce using rule 71 (operadorComp -> GREATER_THAN .)
    ID              reduce using rule 71 (operadorComp -> GREATER_THAN .)
    LPAREN          reduce using rule 71 (operadorComp -> GREATER_THAN .)
    MAP             reduce using rule 71 (operadorComp -> GREATER_THAN .)


state 79

    (72) operadorComp -> GREATER_EQUAL .

    FLOAT64         reduce using rule 72 (operadorComp -> GREATER_EQUAL .)
    COMPLEX64       reduce using rule 72 (operadorComp -> GREATER_EQUAL .)
    INT             reduce using rule 72 (operadorComp -> GREATER_EQUAL .)
    BOOL            reduce using rule 72 (operadorComp -> GREATER_EQUAL .)
    STRING          reduce using rule 72 (operadorComp -> GREATER_EQUAL .)
    ID              reduce using rule 72 (operadorComp -> GREATER_EQUAL .)
    LPAREN          reduce using rule 72 (operadorComp -> GREATER_EQUAL .)
    MAP             reduce using rule 72 (operadorComp -> GREATER_EQUAL .)


state 80

    (54) expresionesAritmeticas -> expresionAritmetica operador . expresionesAritmeticas
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LPAREN          shift and go to state 46
    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    MAP             shift and go to state 47

    expresionAritmetica            shift and go to state 43
    expresionesAritmeticas         shift and go to state 106
    valor                          shift and go to state 107
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 81

    (63) condiciones -> condicion conector . condiciones
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    BOOL            shift and go to state 59
    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    condicion                      shift and go to state 44
    condiciones                    shift and go to state 108
    valor                          shift and go to state 58
    expresionesAritmeticas         shift and go to state 40
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    mapa                           shift and go to state 45

state 82

    (64) conector -> AND .

    BOOL            reduce using rule 64 (conector -> AND .)
    FLOAT64         reduce using rule 64 (conector -> AND .)
    COMPLEX64       reduce using rule 64 (conector -> AND .)
    INT             reduce using rule 64 (conector -> AND .)
    STRING          reduce using rule 64 (conector -> AND .)
    ID              reduce using rule 64 (conector -> AND .)
    LPAREN          reduce using rule 64 (conector -> AND .)
    MAP             reduce using rule 64 (conector -> AND .)


state 83

    (65) conector -> OR .

    BOOL            reduce using rule 65 (conector -> OR .)
    FLOAT64         reduce using rule 65 (conector -> OR .)
    COMPLEX64       reduce using rule 65 (conector -> OR .)
    INT             reduce using rule 65 (conector -> OR .)
    STRING          reduce using rule 65 (conector -> OR .)
    ID              reduce using rule 65 (conector -> OR .)
    LPAREN          reduce using rule 65 (conector -> OR .)
    MAP             reduce using rule 65 (conector -> OR .)


state 84

    (56) expresionAritmetica -> LPAREN valor . operador valor RPAREN
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

    operador                       shift and go to state 109
    operadorComp                   shift and go to state 69

state 85

    (29) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (37) tipoDato -> . FLOAT64_TYPE
    (38) tipoDato -> . COMPLEX64_TYPE
    (39) tipoDato -> . INT_TYPE
    (40) tipoDato -> . BOOL_TYPE
    (41) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 19
    COMPLEX64_TYPE  shift and go to state 20
    INT_TYPE        shift and go to state 21
    BOOL_TYPE       shift and go to state 22
    STRING_TYPE     shift and go to state 23

    tipoDato                       shift and go to state 110

state 86

    (16) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 111


state 87

    (26) bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .

    DEFAULT         reduce using rule 26 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)
    RBRACE          reduce using rule 26 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)


state 88

    (27) casoSwitch -> CASE valores . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 112


state 89

    (42) valores -> valor .
    (43) valores -> valor . COMMA valores
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

    DOSPUNTOS       reduce using rule 42 (valores -> valor .)
    RPAREN          reduce using rule 42 (valores -> valor .)
    COMMA           shift and go to state 113
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 90

    (36) asignacionCorta -> ID DOSPUNTOS ASSIGN valor .
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

    SEMICOLON       reduce using rule 36 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    RBRACE          reduce using rule 36 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    CASE            reduce using rule 36 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    DEFAULT         reduce using rule 36 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 91

    (18) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .

    $end            reduce using rule 18 (sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .)


state 92

    (23) casoDefault -> DEFAULT DOSPUNTOS . subcodigo
    (14) subcodigo -> . asignacionCorta
    (15) subcodigo -> . asignacion
    (36) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (34) asignacion -> . VAR ID tipoDato ASSIGN valor
    (35) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 117
    VAR             shift and go to state 7

    subcodigo                      shift and go to state 114
    asignacionCorta                shift and go to state 115
    asignacion                     shift and go to state 116

state 93

    (21) casoBooleano -> CASE condiciones DOSPUNTOS . subcodigo
    (14) subcodigo -> . asignacionCorta
    (15) subcodigo -> . asignacion
    (36) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (34) asignacion -> . VAR ID tipoDato ASSIGN valor
    (35) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 117
    VAR             shift and go to state 7

    subcodigo                      shift and go to state 118
    asignacionCorta                shift and go to state 115
    asignacion                     shift and go to state 116

state 94

    (22) casoBooleano -> CASE ID DOSPUNTOS . subcodigo
    (14) subcodigo -> . asignacionCorta
    (15) subcodigo -> . asignacion
    (36) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (34) asignacion -> . VAR ID tipoDato ASSIGN valor
    (35) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 117
    VAR             shift and go to state 7

    subcodigo                      shift and go to state 119
    asignacionCorta                shift and go to state 115
    asignacion                     shift and go to state 116

state 95

    (17) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (25) bloqueCasosSwitch -> . casoSwitch
    (26) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (27) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 50

    bloqueCasosSwitch              shift and go to state 120
    casoSwitch                     shift and go to state 49

state 96

    (11) argumento -> ID tipoDato .

    COMMA           reduce using rule 11 (argumento -> ID tipoDato .)
    RPAREN          reduce using rule 11 (argumento -> ID tipoDato .)


state 97

    (12) argumentoVariadico -> ID PUNTO . PUNTO PUNTO tipoDato

    PUNTO           shift and go to state 121


state 98

    (6) funcion -> FUNC ID LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 122


state 99

    (13) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE . subcodigo RBRACE
    (14) subcodigo -> . asignacionCorta
    (15) subcodigo -> . asignacion
    (36) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (34) asignacion -> . VAR ID tipoDato ASSIGN valor
    (35) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 117
    VAR             shift and go to state 7

    subcodigo                      shift and go to state 123
    asignacionCorta                shift and go to state 115
    asignacion                     shift and go to state 116

state 100

    (9) argumentos -> argumento COMMA .

    RPAREN          reduce using rule 9 (argumentos -> argumento COMMA .)


state 101

    (10) argumentos -> argumentoVariadico COMMA .

    RPAREN          reduce using rule 10 (argumentos -> argumentoVariadico COMMA .)


state 102

    (74) imprimir -> FMT PUNTO PRINT_LN LPAREN valores . RPAREN

    RPAREN          shift and go to state 124


state 103

    (75) imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .

    $end            reduce using rule 75 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)


state 104

    (55) expresionAritmetica -> valor operador valor .
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    $end            reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    RBRACE          reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    CASE            reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    DEFAULT         reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    COMMA           reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    DOSPUNTOS       reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    SEMICOLON       reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    RPAREN          reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    AND             reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    OR              reduce using rule 55 (expresionAritmetica -> valor operador valor .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

  ! PLUS            [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 105

    (66) condicion -> valor operadorComp valor .
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    AND             reduce using rule 66 (condicion -> valor operadorComp valor .)
    OR              reduce using rule 66 (condicion -> valor operadorComp valor .)
    $end            reduce using rule 66 (condicion -> valor operadorComp valor .)
    RBRACE          reduce using rule 66 (condicion -> valor operadorComp valor .)
    CASE            reduce using rule 66 (condicion -> valor operadorComp valor .)
    DEFAULT         reduce using rule 66 (condicion -> valor operadorComp valor .)
    DOSPUNTOS       reduce using rule 66 (condicion -> valor operadorComp valor .)
    COMMA           reduce using rule 66 (condicion -> valor operadorComp valor .)
    SEMICOLON       reduce using rule 66 (condicion -> valor operadorComp valor .)
    RPAREN          reduce using rule 66 (condicion -> valor operadorComp valor .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

  ! PLUS            [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! MINUS           [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! TIMES           [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! DIVIDE          [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! MOD             [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! NOT_EQUAL       [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! LESS_THAN       [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! LESS_EQUAL      [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! GREATER_THAN    [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 66 (condicion -> valor operadorComp valor .) ]

    operadorComp                   shift and go to state 69
    operador                       shift and go to state 68

state 106

    (54) expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .
    (49) valor -> expresionesAritmeticas .

  ! reduce/reduce conflict for PLUS resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 49 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 49 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RBRACE          reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    CASE            reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DEFAULT         reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    COMMA           reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    SEMICOLON       reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RPAREN          reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    AND             reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    OR              reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    PLUS            reduce using rule 49 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 49 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 49 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 49 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 49 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 49 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 49 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 49 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 49 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 49 (valor -> expresionesAritmeticas .)

  ! PLUS            [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MINUS           [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! TIMES           [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! DIVIDE          [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MOD             [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! NOT_EQUAL       [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_THAN       [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_EQUAL      [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_THAN    [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_EQUAL   [ reduce using rule 54 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]


state 107

    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 108

    (63) condiciones -> condicion conector condiciones .
    (50) valor -> condiciones .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for PLUS resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for TIMES resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 50 (valor -> condiciones .)
  ! reduce/reduce conflict for MOD resolved using rule 50 (valor -> condiciones .)
    $end            reduce using rule 63 (condiciones -> condicion conector condiciones .)
    RBRACE          reduce using rule 63 (condiciones -> condicion conector condiciones .)
    CASE            reduce using rule 63 (condiciones -> condicion conector condiciones .)
    DEFAULT         reduce using rule 63 (condiciones -> condicion conector condiciones .)
    DOSPUNTOS       reduce using rule 63 (condiciones -> condicion conector condiciones .)
    COMMA           reduce using rule 63 (condiciones -> condicion conector condiciones .)
    SEMICOLON       reduce using rule 63 (condiciones -> condicion conector condiciones .)
    RPAREN          reduce using rule 63 (condiciones -> condicion conector condiciones .)
    AND             reduce using rule 63 (condiciones -> condicion conector condiciones .)
    OR              reduce using rule 63 (condiciones -> condicion conector condiciones .)
    NOT_EQUAL       reduce using rule 50 (valor -> condiciones .)
    LESS_THAN       reduce using rule 50 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 50 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 50 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 50 (valor -> condiciones .)
    PLUS            reduce using rule 50 (valor -> condiciones .)
    MINUS           reduce using rule 50 (valor -> condiciones .)
    TIMES           reduce using rule 50 (valor -> condiciones .)
    DIVIDE          reduce using rule 50 (valor -> condiciones .)
    MOD             reduce using rule 50 (valor -> condiciones .)

  ! PLUS            [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! MINUS           [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! TIMES           [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! DIVIDE          [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! MOD             [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! NOT_EQUAL       [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! LESS_THAN       [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! LESS_EQUAL      [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_THAN    [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_EQUAL   [ reduce using rule 63 (condiciones -> condicion conector condiciones .) ]


state 109

    (56) expresionAritmetica -> LPAREN valor operador . valor RPAREN
    (55) expresionAritmetica -> valor operador . valor
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 125
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 110

    (29) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACKET        shift and go to state 126


state 111

    (16) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 16 (sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 112

    (27) casoSwitch -> CASE valores DOSPUNTOS . subcodigo
    (14) subcodigo -> . asignacionCorta
    (15) subcodigo -> . asignacion
    (36) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (34) asignacion -> . VAR ID tipoDato ASSIGN valor
    (35) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 117
    VAR             shift and go to state 7

    subcodigo                      shift and go to state 127
    asignacionCorta                shift and go to state 115
    asignacion                     shift and go to state 116

state 113

    (43) valores -> valor COMMA . valores
    (42) valores -> . valor
    (43) valores -> . valor COMMA valores
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 89
    valores                        shift and go to state 128
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 114

    (23) casoDefault -> DEFAULT DOSPUNTOS subcodigo .

    RBRACE          reduce using rule 23 (casoDefault -> DEFAULT DOSPUNTOS subcodigo .)


state 115

    (14) subcodigo -> asignacionCorta .

    RBRACE          reduce using rule 14 (subcodigo -> asignacionCorta .)
    CASE            reduce using rule 14 (subcodigo -> asignacionCorta .)
    DEFAULT         reduce using rule 14 (subcodigo -> asignacionCorta .)


state 116

    (15) subcodigo -> asignacion .

    RBRACE          reduce using rule 15 (subcodigo -> asignacion .)
    CASE            reduce using rule 15 (subcodigo -> asignacion .)
    DEFAULT         reduce using rule 15 (subcodigo -> asignacion .)


state 117

    (36) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor

    DOSPUNTOS       shift and go to state 25


state 118

    (21) casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .

    CASE            reduce using rule 21 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 21 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 21 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)


state 119

    (22) casoBooleano -> CASE ID DOSPUNTOS subcodigo .

    CASE            reduce using rule 22 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 22 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 22 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)


state 120

    (17) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (23) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (24) casoDefault -> . empty
    (73) empty -> .

    DEFAULT         shift and go to state 53
    RBRACE          reduce using rule 73 (empty -> .)

    casoDefault                    shift and go to state 129
    empty                          shift and go to state 54

state 121

    (12) argumentoVariadico -> ID PUNTO PUNTO . PUNTO tipoDato

    PUNTO           shift and go to state 130


state 122

    (6) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE
    (14) subcodigo -> . asignacionCorta
    (15) subcodigo -> . asignacion
    (36) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (34) asignacion -> . VAR ID tipoDato ASSIGN valor
    (35) asignacion -> . VAR ID ASSIGN valor

    ID              shift and go to state 117
    VAR             shift and go to state 7

    subcodigo                      shift and go to state 131
    asignacionCorta                shift and go to state 115
    asignacion                     shift and go to state 116

state 123

    (13) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 132


state 124

    (74) imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .

    $end            reduce using rule 74 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)


state 125

    (56) expresionAritmetica -> LPAREN valor operador valor . RPAREN
    (55) expresionAritmetica -> valor operador valor .
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    RPAREN          shift and go to state 133
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

  ! PLUS            [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 55 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 126

    (29) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE RBRACE
    (30) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE elementosMapa RBRACE
    (37) tipoDato -> . FLOAT64_TYPE
    (38) tipoDato -> . COMPLEX64_TYPE
    (39) tipoDato -> . INT_TYPE
    (40) tipoDato -> . BOOL_TYPE
    (41) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 19
    COMPLEX64_TYPE  shift and go to state 20
    INT_TYPE        shift and go to state 21
    BOOL_TYPE       shift and go to state 22
    STRING_TYPE     shift and go to state 23

    tipoDato                       shift and go to state 134

state 127

    (27) casoSwitch -> CASE valores DOSPUNTOS subcodigo .

    CASE            reduce using rule 27 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 27 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 27 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)


state 128

    (43) valores -> valor COMMA valores .

    DOSPUNTOS       reduce using rule 43 (valores -> valor COMMA valores .)
    RPAREN          reduce using rule 43 (valores -> valor COMMA valores .)


state 129

    (17) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 135


state 130

    (12) argumentoVariadico -> ID PUNTO PUNTO PUNTO . tipoDato
    (37) tipoDato -> . FLOAT64_TYPE
    (38) tipoDato -> . COMPLEX64_TYPE
    (39) tipoDato -> . INT_TYPE
    (40) tipoDato -> . BOOL_TYPE
    (41) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 19
    COMPLEX64_TYPE  shift and go to state 20
    INT_TYPE        shift and go to state 21
    BOOL_TYPE       shift and go to state 22
    STRING_TYPE     shift and go to state 23

    tipoDato                       shift and go to state 136

state 131

    (6) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 137


state 132

    (13) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 13 (funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE .)


state 133

    (56) expresionAritmetica -> LPAREN valor operador valor RPAREN .

    PLUS            reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MINUS           reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    TIMES           reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DIVIDE          reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MOD             reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    NOT_EQUAL       reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_THAN       reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_EQUAL      reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_THAN    reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_EQUAL   reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    $end            reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RBRACE          reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    CASE            reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DEFAULT         reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    COMMA           reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DOSPUNTOS       reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    SEMICOLON       reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RPAREN          reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    AND             reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    OR              reduce using rule 56 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)


state 134

    (29) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE RBRACE
    (30) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE elementosMapa RBRACE

    LBRACE          shift and go to state 138


state 135

    (17) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 17 (sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 136

    (12) argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .

    COMMA           reduce using rule 12 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)
    RPAREN          reduce using rule 12 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)


state 137

    (6) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 6 (funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .)


state 138

    (29) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . RBRACE
    (30) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . elementosMapa RBRACE
    (31) elementosMapa -> . elementoMapa
    (32) elementosMapa -> . elementoMapa elementosMapa
    (33) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACE          shift and go to state 139
    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    elementosMapa                  shift and go to state 140
    elementoMapa                   shift and go to state 141
    valor                          shift and go to state 142
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 139

    (29) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .

    PLUS            reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MINUS           reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    TIMES           reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DIVIDE          reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MOD             reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_THAN       reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    $end            reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RBRACE          reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    CASE            reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DEFAULT         reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    COMMA           reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DOSPUNTOS       reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    SEMICOLON       reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RPAREN          reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    AND             reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    OR              reduce using rule 29 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)


state 140

    (30) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa . RBRACE

    RBRACE          shift and go to state 143


state 141

    (31) elementosMapa -> elementoMapa .
    (32) elementosMapa -> elementoMapa . elementosMapa
    (31) elementosMapa -> . elementoMapa
    (32) elementosMapa -> . elementoMapa elementosMapa
    (33) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACE          reduce using rule 31 (elementosMapa -> elementoMapa .)
    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    elementoMapa                   shift and go to state 141
    elementosMapa                  shift and go to state 144
    valor                          shift and go to state 142
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 142

    (33) elementoMapa -> valor . DOSPUNTOS valor COMMA
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

    DOSPUNTOS       shift and go to state 145
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 143

    (30) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .

    PLUS            reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MINUS           reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    TIMES           reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DIVIDE          reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MOD             reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    NOT_EQUAL       reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_THAN       reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_EQUAL      reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_THAN    reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_EQUAL   reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    $end            reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RBRACE          reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    CASE            reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DEFAULT         reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    COMMA           reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DOSPUNTOS       reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    SEMICOLON       reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RPAREN          reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    AND             reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    OR              reduce using rule 30 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)


state 144

    (32) elementosMapa -> elementoMapa elementosMapa .

    RBRACE          reduce using rule 32 (elementosMapa -> elementoMapa elementosMapa .)


state 145

    (33) elementoMapa -> valor DOSPUNTOS . valor COMMA
    (44) valor -> . FLOAT64
    (45) valor -> . COMPLEX64
    (46) valor -> . INT
    (47) valor -> . BOOL
    (48) valor -> . STRING
    (49) valor -> . expresionesAritmeticas
    (50) valor -> . condiciones
    (51) valor -> . ID
    (52) valor -> . estructurasDeDatos
    (53) expresionesAritmeticas -> . expresionAritmetica
    (54) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (62) condiciones -> . condicion
    (63) condiciones -> . condicion conector condiciones
    (28) estructurasDeDatos -> . mapa
    (55) expresionAritmetica -> . valor operador valor
    (56) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (66) condicion -> . valor operadorComp valor
    (67) condicion -> . BOOL
    (29) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (30) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 35
    COMPLEX64       shift and go to state 36
    INT             shift and go to state 37
    BOOL            shift and go to state 38
    STRING          shift and go to state 39
    ID              shift and go to state 33
    LPAREN          shift and go to state 46
    MAP             shift and go to state 47

    valor                          shift and go to state 146
    expresionesAritmeticas         shift and go to state 40
    condiciones                    shift and go to state 41
    estructurasDeDatos             shift and go to state 42
    expresionAritmetica            shift and go to state 43
    condicion                      shift and go to state 44
    mapa                           shift and go to state 45

state 146

    (33) elementoMapa -> valor DOSPUNTOS valor . COMMA
    (55) expresionAritmetica -> valor . operador valor
    (66) condicion -> valor . operadorComp valor
    (57) operador -> . PLUS
    (58) operador -> . MINUS
    (59) operador -> . TIMES
    (60) operador -> . DIVIDE
    (61) operador -> . MOD
    (68) operadorComp -> . NOT_EQUAL
    (69) operadorComp -> . LESS_THAN
    (70) operadorComp -> . LESS_EQUAL
    (71) operadorComp -> . GREATER_THAN
    (72) operadorComp -> . GREATER_EQUAL

    COMMA           shift and go to state 147
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 72
    DIVIDE          shift and go to state 73
    MOD             shift and go to state 74
    NOT_EQUAL       shift and go to state 75
    LESS_THAN       shift and go to state 76
    LESS_EQUAL      shift and go to state 77
    GREATER_THAN    shift and go to state 78
    GREATER_EQUAL   shift and go to state 79

    operador                       shift and go to state 68
    operadorComp                   shift and go to state 69

state 147

    (33) elementoMapa -> valor DOSPUNTOS valor COMMA .

    FLOAT64         reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    COMPLEX64       reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    INT             reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    BOOL            reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    STRING          reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    ID              reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LPAREN          reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    MAP             reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    RBRACE          reduce using rule 33 (elementoMapa -> valor DOSPUNTOS valor COMMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for MOD in state 43 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for MOD in state 104 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for MOD in state 105 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 105 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 105 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 125 resolved as shift
WARNING: shift/reduce conflict for MOD in state 125 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 125 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 125 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 125 resolved as shift
WARNING: reduce/reduce conflict in state 38 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 38
WARNING: reduce/reduce conflict in state 59 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 59
WARNING: reduce/reduce conflict in state 106 resolved using rule (valor -> expresionesAritmeticas)
WARNING: rejected rule (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas) in state 106
WARNING: reduce/reduce conflict in state 108 resolved using rule (valor -> condiciones)
WARNING: rejected rule (condiciones -> condicion conector condiciones) in state 108
