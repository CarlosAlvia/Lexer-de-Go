Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CHAN
    COMMENT
    CONST
    CONTINUE
    DEFER
    ELSE
    FALLTHROUGH
    FOR
    GO
    GOTO
    ILLEGAL
    IMPORT
    INTERFACE
    NOT
    PACKAGE
    RANGE
    RETURN
    SELECT
    STRUCT
    TYPE

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> asignacion
Rule 2     codigo -> sentenciaSwitch
Rule 3     codigo -> funcion
Rule 4     codigo -> funcionSinArg
Rule 5     codigo -> funcionAnonima
Rule 6     codigo -> imprimir
Rule 7     codigo -> mapa
Rule 8     codigo -> array
Rule 9     codigo -> solicitudDatos
Rule 10    codigo -> sentenciaIf
Rule 11    funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
Rule 12    argumentos -> argumento
Rule 13    argumentos -> argumentoVariadico
Rule 14    argumentos -> argumento COMMA argumentos
Rule 15    argumentos -> argumentoVariadico COMMA argumentos
Rule 16    argumento -> ID tipoDato
Rule 17    argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato
Rule 18    funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE
Rule 19    funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
Rule 20    funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
Rule 21    subcodigo -> asignacionCorta
Rule 22    subcodigo -> asignacion
Rule 23    subcodigo -> imprimir
Rule 24    sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 25    sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 26    sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
Rule 27    bloqueCasosBooleanos -> casoBooleano
Rule 28    bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos
Rule 29    casoBooleano -> CASE condiciones DOSPUNTOS subcodigo
Rule 30    casoBooleano -> CASE ID DOSPUNTOS subcodigo
Rule 31    casoDefault -> DEFAULT DOSPUNTOS subcodigo
Rule 32    casoDefault -> empty
Rule 33    bloqueCasosSwitch -> casoSwitch
Rule 34    bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch
Rule 35    casoSwitch -> CASE valores DOSPUNTOS subcodigo
Rule 36    sentenciaIf -> IF condiciones LBRACE RBRACE
Rule 37    sentenciaIf -> IF condiciones LBRACE subcodigo RBRACE
Rule 38    sentenciaIf -> IF asignacionCorta SEMICOLON condiciones LBRACE subcodigo RBRACE
Rule 39    estructurasDeDatos -> mapa
Rule 40    estructurasDeDatos -> array
Rule 41    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
Rule 42    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato
Rule 43    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
Rule 44    elementosMapa -> elementoMapa
Rule 45    elementosMapa -> elementoMapa elementosMapa
Rule 46    elementoMapa -> valor DOSPUNTOS valor COMMA
Rule 47    array -> LBRACKET INT RBRACKET tipoDato
Rule 48    array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
Rule 49    array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
Rule 50    elementosArray -> valor
Rule 51    elementosArray -> valor COMMA elementosArray
Rule 52    asignacion -> VAR ID tipoDato ASSIGN valor
Rule 53    asignacion -> VAR ID ASSIGN valor
Rule 54    asignacionCorta -> ID DOSPUNTOS ASSIGN valor
Rule 55    tipoDato -> FLOAT64_TYPE
Rule 56    tipoDato -> COMPLEX64_TYPE
Rule 57    tipoDato -> INT_TYPE
Rule 58    tipoDato -> BOOL_TYPE
Rule 59    tipoDato -> STRING_TYPE
Rule 60    valores -> valor
Rule 61    valores -> valor COMMA valores
Rule 62    valor -> FLOAT64
Rule 63    valor -> COMPLEX64
Rule 64    valor -> INT
Rule 65    valor -> BOOL
Rule 66    valor -> STRING
Rule 67    valor -> expresionesAritmeticas
Rule 68    valor -> condiciones
Rule 69    valor -> ID
Rule 70    valor -> estructurasDeDatos
Rule 71    expresionesAritmeticas -> expresionAritmetica
Rule 72    expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas
Rule 73    expresionAritmetica -> valor operador valor
Rule 74    expresionAritmetica -> LPAREN valor operador valor RPAREN
Rule 75    operador -> PLUS
Rule 76    operador -> MINUS
Rule 77    operador -> TIMES
Rule 78    operador -> DIVIDE
Rule 79    operador -> MOD
Rule 80    condiciones -> condicion
Rule 81    condiciones -> condicion conector condiciones
Rule 82    conector -> AND
Rule 83    conector -> OR
Rule 84    condicion -> valor operadorComp valor
Rule 85    condicion -> BOOL
Rule 86    operadorComp -> NOT_EQUAL
Rule 87    operadorComp -> LESS_THAN
Rule 88    operadorComp -> LESS_EQUAL
Rule 89    operadorComp -> GREATER_THAN
Rule 90    operadorComp -> GREATER_EQUAL
Rule 91    operadorComp -> EQUAL
Rule 92    empty -> <empty>
Rule 93    imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN
Rule 94    imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN
Rule 95    solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

Terminals, with rules where they appear

AND                  : 82
ASSIGN               : 52 53 54
BOOL                 : 65 85
BOOL_TYPE            : 58
BREAK                : 
CASE                 : 29 30 35
CHAN                 : 
COMMA                : 14 15 46 51 61
COMMENT              : 
COMPLEX64            : 63
COMPLEX64_TYPE       : 56
CONST                : 
CONTINUE             : 
DEFAULT              : 31
DEFER                : 
DIVIDE               : 78
DOSPUNTOS            : 29 30 31 35 46 54
ELSE                 : 
EQUAL                : 91
FALLTHROUGH          : 
FLOAT64              : 62
FLOAT64_TYPE         : 55
FMT                  : 93 94 95
FOR                  : 
FUNC                 : 11 18 19 20
GO                   : 
GOTO                 : 
GREATER_EQUAL        : 90
GREATER_THAN         : 89
ID                   : 11 16 17 18 24 25 30 52 53 54 69 95
IF                   : 36 37 38
ILLEGAL              : 
IMPORT               : 
INT                  : 47 48 49 64
INTERFACE            : 
INT_TYPE             : 57
LBRACE               : 11 18 19 20 24 25 26 36 37 38 41 43 48 49
LBRACKET             : 41 42 43 47 48 49
LESS_EQUAL           : 88
LESS_THAN            : 87
LPAREN               : 11 18 19 19 20 20 74 93 94 95
MAP                  : 41 42 43
MINUS                : 76
MOD                  : 79
NOT                  : 
NOT_EQUAL            : 86
OR                   : 83
PACKAGE              : 
PLUS                 : 75
POINTER              : 95
PRINT_LN             : 93 94
PUNTO                : 17 17 17 93 94 95
RANGE                : 
RBRACE               : 11 18 19 20 24 25 26 36 37 38 41 43 48 49
RBRACKET             : 41 42 43 47 48 49
RETURN               : 
RPAREN               : 11 18 19 19 20 20 74 93 94 95
SCANLN               : 95
SELECT               : 
SEMICOLON            : 25 38
STRING               : 66
STRING_TYPE          : 59
STRUCT               : 
SWITCH               : 24 25 26
TIMES                : 77
TYPE                 : 
VAR                  : 52 53
error                : 

Nonterminals, with rules where they appear

argumento            : 12 14
argumentoVariadico   : 13 15
argumentos           : 11 14 15 20
array                : 8 40
asignacion           : 1 22
asignacionCorta      : 21 25 38
bloqueCasosBooleanos : 26 28
bloqueCasosSwitch    : 24 25 34
casoBooleano         : 27 28
casoDefault          : 24 25 26
casoSwitch           : 33 34
codigo               : 0
condicion            : 80 81
condiciones          : 29 36 37 38 68 81
conector             : 81
elementoMapa         : 44 45
elementosArray       : 49 51
elementosMapa        : 43 45
empty                : 32
estructurasDeDatos   : 70
expresionAritmetica  : 71 72
expresionesAritmeticas : 67 72
funcion              : 3
funcionAnonima       : 5
funcionSinArg        : 4
imprimir             : 6 23
mapa                 : 7 39
operador             : 72 73 74
operadorComp         : 84
sentenciaIf          : 10
sentenciaSwitch      : 2
solicitudDatos       : 9
subcodigo            : 11 18 19 20 29 30 31 35 37 38
tipoDato             : 16 17 41 41 42 42 43 43 47 48 49 52
valor                : 46 46 50 51 52 53 54 60 61 73 73 74 74 84 84
valores              : 35 61 93

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . asignacion
    (2) codigo -> . sentenciaSwitch
    (3) codigo -> . funcion
    (4) codigo -> . funcionSinArg
    (5) codigo -> . funcionAnonima
    (6) codigo -> . imprimir
    (7) codigo -> . mapa
    (8) codigo -> . array
    (9) codigo -> . solicitudDatos
    (10) codigo -> . sentenciaIf
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (24) sentenciaSwitch -> . SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (25) sentenciaSwitch -> . SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (26) sentenciaSwitch -> . SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (11) funcion -> . FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (18) funcionSinArg -> . FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE
    (19) funcionAnonima -> . FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (20) funcionAnonima -> . FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE
    (95) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN
    (36) sentenciaIf -> . IF condiciones LBRACE RBRACE
    (37) sentenciaIf -> . IF condiciones LBRACE subcodigo RBRACE
    (38) sentenciaIf -> . IF asignacionCorta SEMICOLON condiciones LBRACE subcodigo RBRACE

    VAR             shift and go to state 12
    SWITCH          shift and go to state 13
    FUNC            shift and go to state 14
    FMT             shift and go to state 15
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17
    IF              shift and go to state 18

    codigo                         shift and go to state 1
    asignacion                     shift and go to state 2
    sentenciaSwitch                shift and go to state 3
    funcion                        shift and go to state 4
    funcionSinArg                  shift and go to state 5
    funcionAnonima                 shift and go to state 6
    imprimir                       shift and go to state 7
    mapa                           shift and go to state 8
    array                          shift and go to state 9
    solicitudDatos                 shift and go to state 10
    sentenciaIf                    shift and go to state 11

state 1

    (0) S' -> codigo .



state 2

    (1) codigo -> asignacion .

    $end            reduce using rule 1 (codigo -> asignacion .)


state 3

    (2) codigo -> sentenciaSwitch .

    $end            reduce using rule 2 (codigo -> sentenciaSwitch .)


state 4

    (3) codigo -> funcion .

    $end            reduce using rule 3 (codigo -> funcion .)


state 5

    (4) codigo -> funcionSinArg .

    $end            reduce using rule 4 (codigo -> funcionSinArg .)


state 6

    (5) codigo -> funcionAnonima .

    $end            reduce using rule 5 (codigo -> funcionAnonima .)


state 7

    (6) codigo -> imprimir .

    $end            reduce using rule 6 (codigo -> imprimir .)


state 8

    (7) codigo -> mapa .

    $end            reduce using rule 7 (codigo -> mapa .)


state 9

    (8) codigo -> array .

    $end            reduce using rule 8 (codigo -> array .)


state 10

    (9) codigo -> solicitudDatos .

    $end            reduce using rule 9 (codigo -> solicitudDatos .)


state 11

    (10) codigo -> sentenciaIf .

    $end            reduce using rule 10 (codigo -> sentenciaIf .)


state 12

    (52) asignacion -> VAR . ID tipoDato ASSIGN valor
    (53) asignacion -> VAR . ID ASSIGN valor

    ID              shift and go to state 19


state 13

    (24) sentenciaSwitch -> SWITCH . ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (25) sentenciaSwitch -> SWITCH . asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (26) sentenciaSwitch -> SWITCH . LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor

    ID              shift and go to state 20
    LBRACE          shift and go to state 21

    asignacionCorta                shift and go to state 22

state 14

    (11) funcion -> FUNC . ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (18) funcionSinArg -> FUNC . ID LPAREN RPAREN LBRACE subcodigo RBRACE
    (19) funcionAnonima -> FUNC . LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (20) funcionAnonima -> FUNC . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN

    ID              shift and go to state 23
    LPAREN          shift and go to state 24


state 15

    (93) imprimir -> FMT . PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> FMT . PUNTO PRINT_LN LPAREN RPAREN
    (95) solicitudDatos -> FMT . PUNTO SCANLN LPAREN POINTER ID RPAREN

    PUNTO           shift and go to state 25


state 16

    (41) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LBRACKET        shift and go to state 26


state 17

    (47) array -> LBRACKET . INT RBRACKET tipoDato
    (48) array -> LBRACKET . INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> LBRACKET . INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    INT             shift and go to state 27


state 18

    (36) sentenciaIf -> IF . condiciones LBRACE RBRACE
    (37) sentenciaIf -> IF . condiciones LBRACE subcodigo RBRACE
    (38) sentenciaIf -> IF . asignacionCorta SEMICOLON condiciones LBRACE subcodigo RBRACE
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    ID              shift and go to state 31
    BOOL            shift and go to state 33
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    condiciones                    shift and go to state 28
    asignacionCorta                shift and go to state 29
    condicion                      shift and go to state 30
    valor                          shift and go to state 32
    expresionesAritmeticas         shift and go to state 38
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 19

    (52) asignacion -> VAR ID . tipoDato ASSIGN valor
    (53) asignacion -> VAR ID . ASSIGN valor
    (55) tipoDato -> . FLOAT64_TYPE
    (56) tipoDato -> . COMPLEX64_TYPE
    (57) tipoDato -> . INT_TYPE
    (58) tipoDato -> . BOOL_TYPE
    (59) tipoDato -> . STRING_TYPE

    ASSIGN          shift and go to state 45
    FLOAT64_TYPE    shift and go to state 46
    COMPLEX64_TYPE  shift and go to state 47
    INT_TYPE        shift and go to state 48
    BOOL_TYPE       shift and go to state 49
    STRING_TYPE     shift and go to state 50

    tipoDato                       shift and go to state 44

state 20

    (24) sentenciaSwitch -> SWITCH ID . LBRACE bloqueCasosSwitch casoDefault RBRACE
    (54) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor

    LBRACE          shift and go to state 51
    DOSPUNTOS       shift and go to state 52


state 21

    (26) sentenciaSwitch -> SWITCH LBRACE . bloqueCasosBooleanos casoDefault RBRACE
    (27) bloqueCasosBooleanos -> . casoBooleano
    (28) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (29) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (30) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    CASE            shift and go to state 55

    bloqueCasosBooleanos           shift and go to state 53
    casoBooleano                   shift and go to state 54

state 22

    (25) sentenciaSwitch -> SWITCH asignacionCorta . SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    SEMICOLON       shift and go to state 56


state 23

    (11) funcion -> FUNC ID . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (18) funcionSinArg -> FUNC ID . LPAREN RPAREN LBRACE subcodigo RBRACE

    LPAREN          shift and go to state 57


state 24

    (19) funcionAnonima -> FUNC LPAREN . RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (20) funcionAnonima -> FUNC LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (12) argumentos -> . argumento
    (13) argumentos -> . argumentoVariadico
    (14) argumentos -> . argumento COMMA argumentos
    (15) argumentos -> . argumentoVariadico COMMA argumentos
    (16) argumento -> . ID tipoDato
    (17) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    RPAREN          shift and go to state 58
    ID              shift and go to state 62

    argumentos                     shift and go to state 59
    argumento                      shift and go to state 60
    argumentoVariadico             shift and go to state 61

state 25

    (93) imprimir -> FMT PUNTO . PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> FMT PUNTO . PRINT_LN LPAREN RPAREN
    (95) solicitudDatos -> FMT PUNTO . SCANLN LPAREN POINTER ID RPAREN

    PRINT_LN        shift and go to state 63
    SCANLN          shift and go to state 64


state 26

    (41) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato
    (43) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (55) tipoDato -> . FLOAT64_TYPE
    (56) tipoDato -> . COMPLEX64_TYPE
    (57) tipoDato -> . INT_TYPE
    (58) tipoDato -> . BOOL_TYPE
    (59) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 46
    COMPLEX64_TYPE  shift and go to state 47
    INT_TYPE        shift and go to state 48
    BOOL_TYPE       shift and go to state 49
    STRING_TYPE     shift and go to state 50

    tipoDato                       shift and go to state 65

state 27

    (47) array -> LBRACKET INT . RBRACKET tipoDato
    (48) array -> LBRACKET INT . RBRACKET tipoDato LBRACE RBRACE
    (49) array -> LBRACKET INT . RBRACKET tipoDato LBRACE elementosArray RBRACE

    RBRACKET        shift and go to state 66


state 28

    (36) sentenciaIf -> IF condiciones . LBRACE RBRACE
    (37) sentenciaIf -> IF condiciones . LBRACE subcodigo RBRACE
    (68) valor -> condiciones .

    LBRACE          shift and go to state 67
    NOT_EQUAL       reduce using rule 68 (valor -> condiciones .)
    LESS_THAN       reduce using rule 68 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 68 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 68 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 68 (valor -> condiciones .)
    EQUAL           reduce using rule 68 (valor -> condiciones .)
    PLUS            reduce using rule 68 (valor -> condiciones .)
    MINUS           reduce using rule 68 (valor -> condiciones .)
    TIMES           reduce using rule 68 (valor -> condiciones .)
    DIVIDE          reduce using rule 68 (valor -> condiciones .)
    MOD             reduce using rule 68 (valor -> condiciones .)


state 29

    (38) sentenciaIf -> IF asignacionCorta . SEMICOLON condiciones LBRACE subcodigo RBRACE

    SEMICOLON       shift and go to state 68


state 30

    (80) condiciones -> condicion .
    (81) condiciones -> condicion . conector condiciones
    (82) conector -> . AND
    (83) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACE          reduce using rule 80 (condiciones -> condicion .)
    NOT_EQUAL       reduce using rule 80 (condiciones -> condicion .)
    LESS_THAN       reduce using rule 80 (condiciones -> condicion .)
    LESS_EQUAL      reduce using rule 80 (condiciones -> condicion .)
    GREATER_THAN    reduce using rule 80 (condiciones -> condicion .)
    GREATER_EQUAL   reduce using rule 80 (condiciones -> condicion .)
    EQUAL           reduce using rule 80 (condiciones -> condicion .)
    PLUS            reduce using rule 80 (condiciones -> condicion .)
    MINUS           reduce using rule 80 (condiciones -> condicion .)
    TIMES           reduce using rule 80 (condiciones -> condicion .)
    DIVIDE          reduce using rule 80 (condiciones -> condicion .)
    MOD             reduce using rule 80 (condiciones -> condicion .)
    $end            reduce using rule 80 (condiciones -> condicion .)
    RBRACE          reduce using rule 80 (condiciones -> condicion .)
    CASE            reduce using rule 80 (condiciones -> condicion .)
    DEFAULT         reduce using rule 80 (condiciones -> condicion .)
    DOSPUNTOS       reduce using rule 80 (condiciones -> condicion .)
    COMMA           reduce using rule 80 (condiciones -> condicion .)
    SEMICOLON       reduce using rule 80 (condiciones -> condicion .)
    RPAREN          reduce using rule 80 (condiciones -> condicion .)
    AND             shift and go to state 70
    OR              shift and go to state 71

  ! AND             [ reduce using rule 80 (condiciones -> condicion .) ]
  ! OR              [ reduce using rule 80 (condiciones -> condicion .) ]

    conector                       shift and go to state 69

state 31

    (54) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor
    (69) valor -> ID .

    DOSPUNTOS       shift and go to state 52
    NOT_EQUAL       reduce using rule 69 (valor -> ID .)
    LESS_THAN       reduce using rule 69 (valor -> ID .)
    LESS_EQUAL      reduce using rule 69 (valor -> ID .)
    GREATER_THAN    reduce using rule 69 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 69 (valor -> ID .)
    EQUAL           reduce using rule 69 (valor -> ID .)
    PLUS            reduce using rule 69 (valor -> ID .)
    MINUS           reduce using rule 69 (valor -> ID .)
    TIMES           reduce using rule 69 (valor -> ID .)
    DIVIDE          reduce using rule 69 (valor -> ID .)
    MOD             reduce using rule 69 (valor -> ID .)


state 32

    (84) condicion -> valor . operadorComp valor
    (73) expresionAritmetica -> valor . operador valor
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD

    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84

    operadorComp                   shift and go to state 72
    operador                       shift and go to state 73

state 33

    (85) condicion -> BOOL .
    (65) valor -> BOOL .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for EQUAL resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 65 (valor -> BOOL .)
    AND             reduce using rule 85 (condicion -> BOOL .)
    OR              reduce using rule 85 (condicion -> BOOL .)
    LBRACE          reduce using rule 85 (condicion -> BOOL .)
    DOSPUNTOS       reduce using rule 85 (condicion -> BOOL .)
    $end            reduce using rule 85 (condicion -> BOOL .)
    RBRACE          reduce using rule 85 (condicion -> BOOL .)
    CASE            reduce using rule 85 (condicion -> BOOL .)
    DEFAULT         reduce using rule 85 (condicion -> BOOL .)
    COMMA           reduce using rule 85 (condicion -> BOOL .)
    SEMICOLON       reduce using rule 85 (condicion -> BOOL .)
    RPAREN          reduce using rule 85 (condicion -> BOOL .)
    NOT_EQUAL       reduce using rule 65 (valor -> BOOL .)
    LESS_THAN       reduce using rule 65 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 65 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 65 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 65 (valor -> BOOL .)
    EQUAL           reduce using rule 65 (valor -> BOOL .)
    PLUS            reduce using rule 65 (valor -> BOOL .)
    MINUS           reduce using rule 65 (valor -> BOOL .)
    TIMES           reduce using rule 65 (valor -> BOOL .)
    DIVIDE          reduce using rule 65 (valor -> BOOL .)
    MOD             reduce using rule 65 (valor -> BOOL .)

  ! NOT_EQUAL       [ reduce using rule 85 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 85 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 85 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 85 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 85 (condicion -> BOOL .) ]
  ! EQUAL           [ reduce using rule 85 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 85 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 85 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 85 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 85 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 85 (condicion -> BOOL .) ]


state 34

    (62) valor -> FLOAT64 .

    NOT_EQUAL       reduce using rule 62 (valor -> FLOAT64 .)
    LESS_THAN       reduce using rule 62 (valor -> FLOAT64 .)
    LESS_EQUAL      reduce using rule 62 (valor -> FLOAT64 .)
    GREATER_THAN    reduce using rule 62 (valor -> FLOAT64 .)
    GREATER_EQUAL   reduce using rule 62 (valor -> FLOAT64 .)
    EQUAL           reduce using rule 62 (valor -> FLOAT64 .)
    PLUS            reduce using rule 62 (valor -> FLOAT64 .)
    MINUS           reduce using rule 62 (valor -> FLOAT64 .)
    TIMES           reduce using rule 62 (valor -> FLOAT64 .)
    DIVIDE          reduce using rule 62 (valor -> FLOAT64 .)
    MOD             reduce using rule 62 (valor -> FLOAT64 .)
    $end            reduce using rule 62 (valor -> FLOAT64 .)
    RBRACE          reduce using rule 62 (valor -> FLOAT64 .)
    CASE            reduce using rule 62 (valor -> FLOAT64 .)
    DEFAULT         reduce using rule 62 (valor -> FLOAT64 .)
    AND             reduce using rule 62 (valor -> FLOAT64 .)
    OR              reduce using rule 62 (valor -> FLOAT64 .)
    LBRACE          reduce using rule 62 (valor -> FLOAT64 .)
    DOSPUNTOS       reduce using rule 62 (valor -> FLOAT64 .)
    COMMA           reduce using rule 62 (valor -> FLOAT64 .)
    SEMICOLON       reduce using rule 62 (valor -> FLOAT64 .)
    RPAREN          reduce using rule 62 (valor -> FLOAT64 .)


state 35

    (63) valor -> COMPLEX64 .

    NOT_EQUAL       reduce using rule 63 (valor -> COMPLEX64 .)
    LESS_THAN       reduce using rule 63 (valor -> COMPLEX64 .)
    LESS_EQUAL      reduce using rule 63 (valor -> COMPLEX64 .)
    GREATER_THAN    reduce using rule 63 (valor -> COMPLEX64 .)
    GREATER_EQUAL   reduce using rule 63 (valor -> COMPLEX64 .)
    EQUAL           reduce using rule 63 (valor -> COMPLEX64 .)
    PLUS            reduce using rule 63 (valor -> COMPLEX64 .)
    MINUS           reduce using rule 63 (valor -> COMPLEX64 .)
    TIMES           reduce using rule 63 (valor -> COMPLEX64 .)
    DIVIDE          reduce using rule 63 (valor -> COMPLEX64 .)
    MOD             reduce using rule 63 (valor -> COMPLEX64 .)
    $end            reduce using rule 63 (valor -> COMPLEX64 .)
    RBRACE          reduce using rule 63 (valor -> COMPLEX64 .)
    CASE            reduce using rule 63 (valor -> COMPLEX64 .)
    DEFAULT         reduce using rule 63 (valor -> COMPLEX64 .)
    AND             reduce using rule 63 (valor -> COMPLEX64 .)
    OR              reduce using rule 63 (valor -> COMPLEX64 .)
    LBRACE          reduce using rule 63 (valor -> COMPLEX64 .)
    DOSPUNTOS       reduce using rule 63 (valor -> COMPLEX64 .)
    COMMA           reduce using rule 63 (valor -> COMPLEX64 .)
    SEMICOLON       reduce using rule 63 (valor -> COMPLEX64 .)
    RPAREN          reduce using rule 63 (valor -> COMPLEX64 .)


state 36

    (64) valor -> INT .

    NOT_EQUAL       reduce using rule 64 (valor -> INT .)
    LESS_THAN       reduce using rule 64 (valor -> INT .)
    LESS_EQUAL      reduce using rule 64 (valor -> INT .)
    GREATER_THAN    reduce using rule 64 (valor -> INT .)
    GREATER_EQUAL   reduce using rule 64 (valor -> INT .)
    EQUAL           reduce using rule 64 (valor -> INT .)
    PLUS            reduce using rule 64 (valor -> INT .)
    MINUS           reduce using rule 64 (valor -> INT .)
    TIMES           reduce using rule 64 (valor -> INT .)
    DIVIDE          reduce using rule 64 (valor -> INT .)
    MOD             reduce using rule 64 (valor -> INT .)
    $end            reduce using rule 64 (valor -> INT .)
    RBRACE          reduce using rule 64 (valor -> INT .)
    CASE            reduce using rule 64 (valor -> INT .)
    DEFAULT         reduce using rule 64 (valor -> INT .)
    AND             reduce using rule 64 (valor -> INT .)
    OR              reduce using rule 64 (valor -> INT .)
    LBRACE          reduce using rule 64 (valor -> INT .)
    DOSPUNTOS       reduce using rule 64 (valor -> INT .)
    COMMA           reduce using rule 64 (valor -> INT .)
    SEMICOLON       reduce using rule 64 (valor -> INT .)
    RPAREN          reduce using rule 64 (valor -> INT .)


state 37

    (66) valor -> STRING .

    NOT_EQUAL       reduce using rule 66 (valor -> STRING .)
    LESS_THAN       reduce using rule 66 (valor -> STRING .)
    LESS_EQUAL      reduce using rule 66 (valor -> STRING .)
    GREATER_THAN    reduce using rule 66 (valor -> STRING .)
    GREATER_EQUAL   reduce using rule 66 (valor -> STRING .)
    EQUAL           reduce using rule 66 (valor -> STRING .)
    PLUS            reduce using rule 66 (valor -> STRING .)
    MINUS           reduce using rule 66 (valor -> STRING .)
    TIMES           reduce using rule 66 (valor -> STRING .)
    DIVIDE          reduce using rule 66 (valor -> STRING .)
    MOD             reduce using rule 66 (valor -> STRING .)
    $end            reduce using rule 66 (valor -> STRING .)
    RBRACE          reduce using rule 66 (valor -> STRING .)
    CASE            reduce using rule 66 (valor -> STRING .)
    DEFAULT         reduce using rule 66 (valor -> STRING .)
    AND             reduce using rule 66 (valor -> STRING .)
    OR              reduce using rule 66 (valor -> STRING .)
    LBRACE          reduce using rule 66 (valor -> STRING .)
    DOSPUNTOS       reduce using rule 66 (valor -> STRING .)
    COMMA           reduce using rule 66 (valor -> STRING .)
    SEMICOLON       reduce using rule 66 (valor -> STRING .)
    RPAREN          reduce using rule 66 (valor -> STRING .)


state 38

    (67) valor -> expresionesAritmeticas .

    NOT_EQUAL       reduce using rule 67 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 67 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 67 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 67 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 67 (valor -> expresionesAritmeticas .)
    EQUAL           reduce using rule 67 (valor -> expresionesAritmeticas .)
    PLUS            reduce using rule 67 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 67 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 67 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 67 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 67 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 67 (valor -> expresionesAritmeticas .)
    RBRACE          reduce using rule 67 (valor -> expresionesAritmeticas .)
    CASE            reduce using rule 67 (valor -> expresionesAritmeticas .)
    DEFAULT         reduce using rule 67 (valor -> expresionesAritmeticas .)
    AND             reduce using rule 67 (valor -> expresionesAritmeticas .)
    OR              reduce using rule 67 (valor -> expresionesAritmeticas .)
    LBRACE          reduce using rule 67 (valor -> expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 67 (valor -> expresionesAritmeticas .)
    COMMA           reduce using rule 67 (valor -> expresionesAritmeticas .)
    SEMICOLON       reduce using rule 67 (valor -> expresionesAritmeticas .)
    RPAREN          reduce using rule 67 (valor -> expresionesAritmeticas .)


state 39

    (70) valor -> estructurasDeDatos .

    NOT_EQUAL       reduce using rule 70 (valor -> estructurasDeDatos .)
    LESS_THAN       reduce using rule 70 (valor -> estructurasDeDatos .)
    LESS_EQUAL      reduce using rule 70 (valor -> estructurasDeDatos .)
    GREATER_THAN    reduce using rule 70 (valor -> estructurasDeDatos .)
    GREATER_EQUAL   reduce using rule 70 (valor -> estructurasDeDatos .)
    EQUAL           reduce using rule 70 (valor -> estructurasDeDatos .)
    PLUS            reduce using rule 70 (valor -> estructurasDeDatos .)
    MINUS           reduce using rule 70 (valor -> estructurasDeDatos .)
    TIMES           reduce using rule 70 (valor -> estructurasDeDatos .)
    DIVIDE          reduce using rule 70 (valor -> estructurasDeDatos .)
    MOD             reduce using rule 70 (valor -> estructurasDeDatos .)
    $end            reduce using rule 70 (valor -> estructurasDeDatos .)
    RBRACE          reduce using rule 70 (valor -> estructurasDeDatos .)
    CASE            reduce using rule 70 (valor -> estructurasDeDatos .)
    DEFAULT         reduce using rule 70 (valor -> estructurasDeDatos .)
    AND             reduce using rule 70 (valor -> estructurasDeDatos .)
    OR              reduce using rule 70 (valor -> estructurasDeDatos .)
    LBRACE          reduce using rule 70 (valor -> estructurasDeDatos .)
    DOSPUNTOS       reduce using rule 70 (valor -> estructurasDeDatos .)
    COMMA           reduce using rule 70 (valor -> estructurasDeDatos .)
    SEMICOLON       reduce using rule 70 (valor -> estructurasDeDatos .)
    RPAREN          reduce using rule 70 (valor -> estructurasDeDatos .)


state 40

    (71) expresionesAritmeticas -> expresionAritmetica .
    (72) expresionesAritmeticas -> expresionAritmetica . operador expresionesAritmeticas
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NOT_EQUAL       reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_THAN       reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_EQUAL      reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_THAN    reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_EQUAL   reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    EQUAL           reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    $end            reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    RBRACE          reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    CASE            reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    DEFAULT         reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    AND             reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    OR              reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    LBRACE          reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    DOSPUNTOS       reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    COMMA           reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    SEMICOLON       reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    RPAREN          reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84

  ! PLUS            [ reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MINUS           [ reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! TIMES           [ reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! DIVIDE          [ reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MOD             [ reduce using rule 71 (expresionesAritmeticas -> expresionAritmetica .) ]

    operador                       shift and go to state 85

state 41

    (39) estructurasDeDatos -> mapa .

    NOT_EQUAL       reduce using rule 39 (estructurasDeDatos -> mapa .)
    LESS_THAN       reduce using rule 39 (estructurasDeDatos -> mapa .)
    LESS_EQUAL      reduce using rule 39 (estructurasDeDatos -> mapa .)
    GREATER_THAN    reduce using rule 39 (estructurasDeDatos -> mapa .)
    GREATER_EQUAL   reduce using rule 39 (estructurasDeDatos -> mapa .)
    EQUAL           reduce using rule 39 (estructurasDeDatos -> mapa .)
    PLUS            reduce using rule 39 (estructurasDeDatos -> mapa .)
    MINUS           reduce using rule 39 (estructurasDeDatos -> mapa .)
    TIMES           reduce using rule 39 (estructurasDeDatos -> mapa .)
    DIVIDE          reduce using rule 39 (estructurasDeDatos -> mapa .)
    MOD             reduce using rule 39 (estructurasDeDatos -> mapa .)
    $end            reduce using rule 39 (estructurasDeDatos -> mapa .)
    RBRACE          reduce using rule 39 (estructurasDeDatos -> mapa .)
    CASE            reduce using rule 39 (estructurasDeDatos -> mapa .)
    DEFAULT         reduce using rule 39 (estructurasDeDatos -> mapa .)
    AND             reduce using rule 39 (estructurasDeDatos -> mapa .)
    OR              reduce using rule 39 (estructurasDeDatos -> mapa .)
    LBRACE          reduce using rule 39 (estructurasDeDatos -> mapa .)
    DOSPUNTOS       reduce using rule 39 (estructurasDeDatos -> mapa .)
    COMMA           reduce using rule 39 (estructurasDeDatos -> mapa .)
    SEMICOLON       reduce using rule 39 (estructurasDeDatos -> mapa .)
    RPAREN          reduce using rule 39 (estructurasDeDatos -> mapa .)


state 42

    (40) estructurasDeDatos -> array .

    NOT_EQUAL       reduce using rule 40 (estructurasDeDatos -> array .)
    LESS_THAN       reduce using rule 40 (estructurasDeDatos -> array .)
    LESS_EQUAL      reduce using rule 40 (estructurasDeDatos -> array .)
    GREATER_THAN    reduce using rule 40 (estructurasDeDatos -> array .)
    GREATER_EQUAL   reduce using rule 40 (estructurasDeDatos -> array .)
    EQUAL           reduce using rule 40 (estructurasDeDatos -> array .)
    PLUS            reduce using rule 40 (estructurasDeDatos -> array .)
    MINUS           reduce using rule 40 (estructurasDeDatos -> array .)
    TIMES           reduce using rule 40 (estructurasDeDatos -> array .)
    DIVIDE          reduce using rule 40 (estructurasDeDatos -> array .)
    MOD             reduce using rule 40 (estructurasDeDatos -> array .)
    $end            reduce using rule 40 (estructurasDeDatos -> array .)
    RBRACE          reduce using rule 40 (estructurasDeDatos -> array .)
    CASE            reduce using rule 40 (estructurasDeDatos -> array .)
    DEFAULT         reduce using rule 40 (estructurasDeDatos -> array .)
    AND             reduce using rule 40 (estructurasDeDatos -> array .)
    OR              reduce using rule 40 (estructurasDeDatos -> array .)
    LBRACE          reduce using rule 40 (estructurasDeDatos -> array .)
    DOSPUNTOS       reduce using rule 40 (estructurasDeDatos -> array .)
    COMMA           reduce using rule 40 (estructurasDeDatos -> array .)
    SEMICOLON       reduce using rule 40 (estructurasDeDatos -> array .)
    RPAREN          reduce using rule 40 (estructurasDeDatos -> array .)


state 43

    (74) expresionAritmetica -> LPAREN . valor operador valor RPAREN
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 86
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 44

    (52) asignacion -> VAR ID tipoDato . ASSIGN valor

    ASSIGN          shift and go to state 90


state 45

    (53) asignacion -> VAR ID ASSIGN . valor
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 91
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 46

    (55) tipoDato -> FLOAT64_TYPE .

    ASSIGN          reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    RBRACKET        reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    COMMA           reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    RPAREN          reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    LBRACE          reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    $end            reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    NOT_EQUAL       reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    LESS_THAN       reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    LESS_EQUAL      reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    GREATER_THAN    reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    GREATER_EQUAL   reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    EQUAL           reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    PLUS            reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    MINUS           reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    TIMES           reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    DIVIDE          reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    MOD             reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    RBRACE          reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    CASE            reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    DEFAULT         reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    AND             reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    OR              reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    DOSPUNTOS       reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)
    SEMICOLON       reduce using rule 55 (tipoDato -> FLOAT64_TYPE .)


state 47

    (56) tipoDato -> COMPLEX64_TYPE .

    ASSIGN          reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    RBRACKET        reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    COMMA           reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    RPAREN          reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    LBRACE          reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    $end            reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    NOT_EQUAL       reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    LESS_THAN       reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    LESS_EQUAL      reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    GREATER_THAN    reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    GREATER_EQUAL   reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    EQUAL           reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    PLUS            reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    MINUS           reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    TIMES           reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    DIVIDE          reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    MOD             reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    RBRACE          reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    CASE            reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    DEFAULT         reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    AND             reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    OR              reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    DOSPUNTOS       reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)
    SEMICOLON       reduce using rule 56 (tipoDato -> COMPLEX64_TYPE .)


state 48

    (57) tipoDato -> INT_TYPE .

    ASSIGN          reduce using rule 57 (tipoDato -> INT_TYPE .)
    RBRACKET        reduce using rule 57 (tipoDato -> INT_TYPE .)
    COMMA           reduce using rule 57 (tipoDato -> INT_TYPE .)
    RPAREN          reduce using rule 57 (tipoDato -> INT_TYPE .)
    LBRACE          reduce using rule 57 (tipoDato -> INT_TYPE .)
    $end            reduce using rule 57 (tipoDato -> INT_TYPE .)
    NOT_EQUAL       reduce using rule 57 (tipoDato -> INT_TYPE .)
    LESS_THAN       reduce using rule 57 (tipoDato -> INT_TYPE .)
    LESS_EQUAL      reduce using rule 57 (tipoDato -> INT_TYPE .)
    GREATER_THAN    reduce using rule 57 (tipoDato -> INT_TYPE .)
    GREATER_EQUAL   reduce using rule 57 (tipoDato -> INT_TYPE .)
    EQUAL           reduce using rule 57 (tipoDato -> INT_TYPE .)
    PLUS            reduce using rule 57 (tipoDato -> INT_TYPE .)
    MINUS           reduce using rule 57 (tipoDato -> INT_TYPE .)
    TIMES           reduce using rule 57 (tipoDato -> INT_TYPE .)
    DIVIDE          reduce using rule 57 (tipoDato -> INT_TYPE .)
    MOD             reduce using rule 57 (tipoDato -> INT_TYPE .)
    RBRACE          reduce using rule 57 (tipoDato -> INT_TYPE .)
    CASE            reduce using rule 57 (tipoDato -> INT_TYPE .)
    DEFAULT         reduce using rule 57 (tipoDato -> INT_TYPE .)
    AND             reduce using rule 57 (tipoDato -> INT_TYPE .)
    OR              reduce using rule 57 (tipoDato -> INT_TYPE .)
    DOSPUNTOS       reduce using rule 57 (tipoDato -> INT_TYPE .)
    SEMICOLON       reduce using rule 57 (tipoDato -> INT_TYPE .)


state 49

    (58) tipoDato -> BOOL_TYPE .

    ASSIGN          reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    RBRACKET        reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    COMMA           reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    RPAREN          reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    LBRACE          reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    $end            reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    NOT_EQUAL       reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    LESS_THAN       reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    LESS_EQUAL      reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    GREATER_THAN    reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    GREATER_EQUAL   reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    EQUAL           reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    PLUS            reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    MINUS           reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    TIMES           reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    DIVIDE          reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    MOD             reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    RBRACE          reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    CASE            reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    DEFAULT         reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    AND             reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    OR              reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    DOSPUNTOS       reduce using rule 58 (tipoDato -> BOOL_TYPE .)
    SEMICOLON       reduce using rule 58 (tipoDato -> BOOL_TYPE .)


state 50

    (59) tipoDato -> STRING_TYPE .

    ASSIGN          reduce using rule 59 (tipoDato -> STRING_TYPE .)
    RBRACKET        reduce using rule 59 (tipoDato -> STRING_TYPE .)
    COMMA           reduce using rule 59 (tipoDato -> STRING_TYPE .)
    RPAREN          reduce using rule 59 (tipoDato -> STRING_TYPE .)
    LBRACE          reduce using rule 59 (tipoDato -> STRING_TYPE .)
    $end            reduce using rule 59 (tipoDato -> STRING_TYPE .)
    NOT_EQUAL       reduce using rule 59 (tipoDato -> STRING_TYPE .)
    LESS_THAN       reduce using rule 59 (tipoDato -> STRING_TYPE .)
    LESS_EQUAL      reduce using rule 59 (tipoDato -> STRING_TYPE .)
    GREATER_THAN    reduce using rule 59 (tipoDato -> STRING_TYPE .)
    GREATER_EQUAL   reduce using rule 59 (tipoDato -> STRING_TYPE .)
    EQUAL           reduce using rule 59 (tipoDato -> STRING_TYPE .)
    PLUS            reduce using rule 59 (tipoDato -> STRING_TYPE .)
    MINUS           reduce using rule 59 (tipoDato -> STRING_TYPE .)
    TIMES           reduce using rule 59 (tipoDato -> STRING_TYPE .)
    DIVIDE          reduce using rule 59 (tipoDato -> STRING_TYPE .)
    MOD             reduce using rule 59 (tipoDato -> STRING_TYPE .)
    RBRACE          reduce using rule 59 (tipoDato -> STRING_TYPE .)
    CASE            reduce using rule 59 (tipoDato -> STRING_TYPE .)
    DEFAULT         reduce using rule 59 (tipoDato -> STRING_TYPE .)
    AND             reduce using rule 59 (tipoDato -> STRING_TYPE .)
    OR              reduce using rule 59 (tipoDato -> STRING_TYPE .)
    DOSPUNTOS       reduce using rule 59 (tipoDato -> STRING_TYPE .)
    SEMICOLON       reduce using rule 59 (tipoDato -> STRING_TYPE .)


state 51

    (24) sentenciaSwitch -> SWITCH ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (33) bloqueCasosSwitch -> . casoSwitch
    (34) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (35) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 94

    bloqueCasosSwitch              shift and go to state 92
    casoSwitch                     shift and go to state 93

state 52

    (54) asignacionCorta -> ID DOSPUNTOS . ASSIGN valor

    ASSIGN          shift and go to state 95


state 53

    (26) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos . casoDefault RBRACE
    (31) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (32) casoDefault -> . empty
    (92) empty -> .

    DEFAULT         shift and go to state 97
    RBRACE          reduce using rule 92 (empty -> .)

    casoDefault                    shift and go to state 96
    empty                          shift and go to state 98

state 54

    (27) bloqueCasosBooleanos -> casoBooleano .
    (28) bloqueCasosBooleanos -> casoBooleano . bloqueCasosBooleanos
    (27) bloqueCasosBooleanos -> . casoBooleano
    (28) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (29) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (30) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 27 (bloqueCasosBooleanos -> casoBooleano .)
    RBRACE          reduce using rule 27 (bloqueCasosBooleanos -> casoBooleano .)
    CASE            shift and go to state 55

    casoBooleano                   shift and go to state 54
    bloqueCasosBooleanos           shift and go to state 99

state 55

    (29) casoBooleano -> CASE . condiciones DOSPUNTOS subcodigo
    (30) casoBooleano -> CASE . ID DOSPUNTOS subcodigo
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    ID              shift and go to state 101
    BOOL            shift and go to state 33
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    condiciones                    shift and go to state 100
    condicion                      shift and go to state 30
    valor                          shift and go to state 32
    expresionesAritmeticas         shift and go to state 38
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 56

    (25) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON . ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    ID              shift and go to state 102


state 57

    (11) funcion -> FUNC ID LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE
    (18) funcionSinArg -> FUNC ID LPAREN . RPAREN LBRACE subcodigo RBRACE
    (12) argumentos -> . argumento
    (13) argumentos -> . argumentoVariadico
    (14) argumentos -> . argumento COMMA argumentos
    (15) argumentos -> . argumentoVariadico COMMA argumentos
    (16) argumento -> . ID tipoDato
    (17) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    RPAREN          shift and go to state 104
    ID              shift and go to state 62

    argumentos                     shift and go to state 103
    argumento                      shift and go to state 60
    argumentoVariadico             shift and go to state 61

state 58

    (19) funcionAnonima -> FUNC LPAREN RPAREN . LBRACE subcodigo RBRACE LPAREN RPAREN

    LBRACE          shift and go to state 105


state 59

    (20) funcionAnonima -> FUNC LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN

    RPAREN          shift and go to state 106


state 60

    (12) argumentos -> argumento .
    (14) argumentos -> argumento . COMMA argumentos

    RPAREN          reduce using rule 12 (argumentos -> argumento .)
    COMMA           shift and go to state 107


state 61

    (13) argumentos -> argumentoVariadico .
    (15) argumentos -> argumentoVariadico . COMMA argumentos

    RPAREN          reduce using rule 13 (argumentos -> argumentoVariadico .)
    COMMA           shift and go to state 108


state 62

    (16) argumento -> ID . tipoDato
    (17) argumentoVariadico -> ID . PUNTO PUNTO PUNTO tipoDato
    (55) tipoDato -> . FLOAT64_TYPE
    (56) tipoDato -> . COMPLEX64_TYPE
    (57) tipoDato -> . INT_TYPE
    (58) tipoDato -> . BOOL_TYPE
    (59) tipoDato -> . STRING_TYPE

    PUNTO           shift and go to state 110
    FLOAT64_TYPE    shift and go to state 46
    COMPLEX64_TYPE  shift and go to state 47
    INT_TYPE        shift and go to state 48
    BOOL_TYPE       shift and go to state 49
    STRING_TYPE     shift and go to state 50

    tipoDato                       shift and go to state 109

state 63

    (93) imprimir -> FMT PUNTO PRINT_LN . LPAREN valores RPAREN
    (94) imprimir -> FMT PUNTO PRINT_LN . LPAREN RPAREN

    LPAREN          shift and go to state 111


state 64

    (95) solicitudDatos -> FMT PUNTO SCANLN . LPAREN POINTER ID RPAREN

    LPAREN          shift and go to state 112


state 65

    (41) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato
    (43) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACKET        shift and go to state 113


state 66

    (47) array -> LBRACKET INT RBRACKET . tipoDato
    (48) array -> LBRACKET INT RBRACKET . tipoDato LBRACE RBRACE
    (49) array -> LBRACKET INT RBRACKET . tipoDato LBRACE elementosArray RBRACE
    (55) tipoDato -> . FLOAT64_TYPE
    (56) tipoDato -> . COMPLEX64_TYPE
    (57) tipoDato -> . INT_TYPE
    (58) tipoDato -> . BOOL_TYPE
    (59) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 46
    COMPLEX64_TYPE  shift and go to state 47
    INT_TYPE        shift and go to state 48
    BOOL_TYPE       shift and go to state 49
    STRING_TYPE     shift and go to state 50

    tipoDato                       shift and go to state 114

state 67

    (36) sentenciaIf -> IF condiciones LBRACE . RBRACE
    (37) sentenciaIf -> IF condiciones LBRACE . subcodigo RBRACE
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    RBRACE          shift and go to state 115
    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 116
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 68

    (38) sentenciaIf -> IF asignacionCorta SEMICOLON . condiciones LBRACE subcodigo RBRACE
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    BOOL            shift and go to state 33
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    condiciones                    shift and go to state 122
    condicion                      shift and go to state 30
    valor                          shift and go to state 32
    expresionesAritmeticas         shift and go to state 38
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 69

    (81) condiciones -> condicion conector . condiciones
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    BOOL            shift and go to state 33
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    condicion                      shift and go to state 30
    condiciones                    shift and go to state 123
    valor                          shift and go to state 32
    expresionesAritmeticas         shift and go to state 38
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 70

    (82) conector -> AND .

    BOOL            reduce using rule 82 (conector -> AND .)
    FLOAT64         reduce using rule 82 (conector -> AND .)
    COMPLEX64       reduce using rule 82 (conector -> AND .)
    INT             reduce using rule 82 (conector -> AND .)
    STRING          reduce using rule 82 (conector -> AND .)
    ID              reduce using rule 82 (conector -> AND .)
    LPAREN          reduce using rule 82 (conector -> AND .)
    MAP             reduce using rule 82 (conector -> AND .)
    LBRACKET        reduce using rule 82 (conector -> AND .)


state 71

    (83) conector -> OR .

    BOOL            reduce using rule 83 (conector -> OR .)
    FLOAT64         reduce using rule 83 (conector -> OR .)
    COMPLEX64       reduce using rule 83 (conector -> OR .)
    INT             reduce using rule 83 (conector -> OR .)
    STRING          reduce using rule 83 (conector -> OR .)
    ID              reduce using rule 83 (conector -> OR .)
    LPAREN          reduce using rule 83 (conector -> OR .)
    MAP             reduce using rule 83 (conector -> OR .)
    LBRACKET        reduce using rule 83 (conector -> OR .)


state 72

    (84) condicion -> valor operadorComp . valor
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 124
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 73

    (73) expresionAritmetica -> valor operador . valor
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 125
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 74

    (86) operadorComp -> NOT_EQUAL .

    FLOAT64         reduce using rule 86 (operadorComp -> NOT_EQUAL .)
    COMPLEX64       reduce using rule 86 (operadorComp -> NOT_EQUAL .)
    INT             reduce using rule 86 (operadorComp -> NOT_EQUAL .)
    BOOL            reduce using rule 86 (operadorComp -> NOT_EQUAL .)
    STRING          reduce using rule 86 (operadorComp -> NOT_EQUAL .)
    ID              reduce using rule 86 (operadorComp -> NOT_EQUAL .)
    LPAREN          reduce using rule 86 (operadorComp -> NOT_EQUAL .)
    MAP             reduce using rule 86 (operadorComp -> NOT_EQUAL .)
    LBRACKET        reduce using rule 86 (operadorComp -> NOT_EQUAL .)


state 75

    (87) operadorComp -> LESS_THAN .

    FLOAT64         reduce using rule 87 (operadorComp -> LESS_THAN .)
    COMPLEX64       reduce using rule 87 (operadorComp -> LESS_THAN .)
    INT             reduce using rule 87 (operadorComp -> LESS_THAN .)
    BOOL            reduce using rule 87 (operadorComp -> LESS_THAN .)
    STRING          reduce using rule 87 (operadorComp -> LESS_THAN .)
    ID              reduce using rule 87 (operadorComp -> LESS_THAN .)
    LPAREN          reduce using rule 87 (operadorComp -> LESS_THAN .)
    MAP             reduce using rule 87 (operadorComp -> LESS_THAN .)
    LBRACKET        reduce using rule 87 (operadorComp -> LESS_THAN .)


state 76

    (88) operadorComp -> LESS_EQUAL .

    FLOAT64         reduce using rule 88 (operadorComp -> LESS_EQUAL .)
    COMPLEX64       reduce using rule 88 (operadorComp -> LESS_EQUAL .)
    INT             reduce using rule 88 (operadorComp -> LESS_EQUAL .)
    BOOL            reduce using rule 88 (operadorComp -> LESS_EQUAL .)
    STRING          reduce using rule 88 (operadorComp -> LESS_EQUAL .)
    ID              reduce using rule 88 (operadorComp -> LESS_EQUAL .)
    LPAREN          reduce using rule 88 (operadorComp -> LESS_EQUAL .)
    MAP             reduce using rule 88 (operadorComp -> LESS_EQUAL .)
    LBRACKET        reduce using rule 88 (operadorComp -> LESS_EQUAL .)


state 77

    (89) operadorComp -> GREATER_THAN .

    FLOAT64         reduce using rule 89 (operadorComp -> GREATER_THAN .)
    COMPLEX64       reduce using rule 89 (operadorComp -> GREATER_THAN .)
    INT             reduce using rule 89 (operadorComp -> GREATER_THAN .)
    BOOL            reduce using rule 89 (operadorComp -> GREATER_THAN .)
    STRING          reduce using rule 89 (operadorComp -> GREATER_THAN .)
    ID              reduce using rule 89 (operadorComp -> GREATER_THAN .)
    LPAREN          reduce using rule 89 (operadorComp -> GREATER_THAN .)
    MAP             reduce using rule 89 (operadorComp -> GREATER_THAN .)
    LBRACKET        reduce using rule 89 (operadorComp -> GREATER_THAN .)


state 78

    (90) operadorComp -> GREATER_EQUAL .

    FLOAT64         reduce using rule 90 (operadorComp -> GREATER_EQUAL .)
    COMPLEX64       reduce using rule 90 (operadorComp -> GREATER_EQUAL .)
    INT             reduce using rule 90 (operadorComp -> GREATER_EQUAL .)
    BOOL            reduce using rule 90 (operadorComp -> GREATER_EQUAL .)
    STRING          reduce using rule 90 (operadorComp -> GREATER_EQUAL .)
    ID              reduce using rule 90 (operadorComp -> GREATER_EQUAL .)
    LPAREN          reduce using rule 90 (operadorComp -> GREATER_EQUAL .)
    MAP             reduce using rule 90 (operadorComp -> GREATER_EQUAL .)
    LBRACKET        reduce using rule 90 (operadorComp -> GREATER_EQUAL .)


state 79

    (91) operadorComp -> EQUAL .

    FLOAT64         reduce using rule 91 (operadorComp -> EQUAL .)
    COMPLEX64       reduce using rule 91 (operadorComp -> EQUAL .)
    INT             reduce using rule 91 (operadorComp -> EQUAL .)
    BOOL            reduce using rule 91 (operadorComp -> EQUAL .)
    STRING          reduce using rule 91 (operadorComp -> EQUAL .)
    ID              reduce using rule 91 (operadorComp -> EQUAL .)
    LPAREN          reduce using rule 91 (operadorComp -> EQUAL .)
    MAP             reduce using rule 91 (operadorComp -> EQUAL .)
    LBRACKET        reduce using rule 91 (operadorComp -> EQUAL .)


state 80

    (75) operador -> PLUS .

    FLOAT64         reduce using rule 75 (operador -> PLUS .)
    COMPLEX64       reduce using rule 75 (operador -> PLUS .)
    INT             reduce using rule 75 (operador -> PLUS .)
    BOOL            reduce using rule 75 (operador -> PLUS .)
    STRING          reduce using rule 75 (operador -> PLUS .)
    ID              reduce using rule 75 (operador -> PLUS .)
    LPAREN          reduce using rule 75 (operador -> PLUS .)
    MAP             reduce using rule 75 (operador -> PLUS .)
    LBRACKET        reduce using rule 75 (operador -> PLUS .)


state 81

    (76) operador -> MINUS .

    FLOAT64         reduce using rule 76 (operador -> MINUS .)
    COMPLEX64       reduce using rule 76 (operador -> MINUS .)
    INT             reduce using rule 76 (operador -> MINUS .)
    BOOL            reduce using rule 76 (operador -> MINUS .)
    STRING          reduce using rule 76 (operador -> MINUS .)
    ID              reduce using rule 76 (operador -> MINUS .)
    LPAREN          reduce using rule 76 (operador -> MINUS .)
    MAP             reduce using rule 76 (operador -> MINUS .)
    LBRACKET        reduce using rule 76 (operador -> MINUS .)


state 82

    (77) operador -> TIMES .

    FLOAT64         reduce using rule 77 (operador -> TIMES .)
    COMPLEX64       reduce using rule 77 (operador -> TIMES .)
    INT             reduce using rule 77 (operador -> TIMES .)
    BOOL            reduce using rule 77 (operador -> TIMES .)
    STRING          reduce using rule 77 (operador -> TIMES .)
    ID              reduce using rule 77 (operador -> TIMES .)
    LPAREN          reduce using rule 77 (operador -> TIMES .)
    MAP             reduce using rule 77 (operador -> TIMES .)
    LBRACKET        reduce using rule 77 (operador -> TIMES .)


state 83

    (78) operador -> DIVIDE .

    FLOAT64         reduce using rule 78 (operador -> DIVIDE .)
    COMPLEX64       reduce using rule 78 (operador -> DIVIDE .)
    INT             reduce using rule 78 (operador -> DIVIDE .)
    BOOL            reduce using rule 78 (operador -> DIVIDE .)
    STRING          reduce using rule 78 (operador -> DIVIDE .)
    ID              reduce using rule 78 (operador -> DIVIDE .)
    LPAREN          reduce using rule 78 (operador -> DIVIDE .)
    MAP             reduce using rule 78 (operador -> DIVIDE .)
    LBRACKET        reduce using rule 78 (operador -> DIVIDE .)


state 84

    (79) operador -> MOD .

    FLOAT64         reduce using rule 79 (operador -> MOD .)
    COMPLEX64       reduce using rule 79 (operador -> MOD .)
    INT             reduce using rule 79 (operador -> MOD .)
    BOOL            reduce using rule 79 (operador -> MOD .)
    STRING          reduce using rule 79 (operador -> MOD .)
    ID              reduce using rule 79 (operador -> MOD .)
    LPAREN          reduce using rule 79 (operador -> MOD .)
    MAP             reduce using rule 79 (operador -> MOD .)
    LBRACKET        reduce using rule 79 (operador -> MOD .)


state 85

    (72) expresionesAritmeticas -> expresionAritmetica operador . expresionesAritmeticas
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    LPAREN          shift and go to state 43
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    expresionAritmetica            shift and go to state 40
    expresionesAritmeticas         shift and go to state 126
    valor                          shift and go to state 127
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 86

    (74) expresionAritmetica -> LPAREN valor . operador valor RPAREN
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 128
    operadorComp                   shift and go to state 72

state 87

    (65) valor -> BOOL .
    (85) condicion -> BOOL .

  ! reduce/reduce conflict for AND resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for OR resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for EQUAL resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for RBRACE resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for CASE resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for LBRACE resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for COMMA resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 65 (valor -> BOOL .)
  ! reduce/reduce conflict for RPAREN resolved using rule 65 (valor -> BOOL .)
    PLUS            reduce using rule 65 (valor -> BOOL .)
    MINUS           reduce using rule 65 (valor -> BOOL .)
    TIMES           reduce using rule 65 (valor -> BOOL .)
    DIVIDE          reduce using rule 65 (valor -> BOOL .)
    MOD             reduce using rule 65 (valor -> BOOL .)
    NOT_EQUAL       reduce using rule 65 (valor -> BOOL .)
    LESS_THAN       reduce using rule 65 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 65 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 65 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 65 (valor -> BOOL .)
    EQUAL           reduce using rule 65 (valor -> BOOL .)
    $end            reduce using rule 65 (valor -> BOOL .)
    RBRACE          reduce using rule 65 (valor -> BOOL .)
    CASE            reduce using rule 65 (valor -> BOOL .)
    DEFAULT         reduce using rule 65 (valor -> BOOL .)
    AND             reduce using rule 65 (valor -> BOOL .)
    OR              reduce using rule 65 (valor -> BOOL .)
    LBRACE          reduce using rule 65 (valor -> BOOL .)
    DOSPUNTOS       reduce using rule 65 (valor -> BOOL .)
    COMMA           reduce using rule 65 (valor -> BOOL .)
    SEMICOLON       reduce using rule 65 (valor -> BOOL .)
    RPAREN          reduce using rule 65 (valor -> BOOL .)

  ! AND             [ reduce using rule 85 (condicion -> BOOL .) ]
  ! OR              [ reduce using rule 85 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 85 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 85 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 85 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 85 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 85 (condicion -> BOOL .) ]
  ! NOT_EQUAL       [ reduce using rule 85 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 85 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 85 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 85 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 85 (condicion -> BOOL .) ]
  ! EQUAL           [ reduce using rule 85 (condicion -> BOOL .) ]
  ! $end            [ reduce using rule 85 (condicion -> BOOL .) ]
  ! RBRACE          [ reduce using rule 85 (condicion -> BOOL .) ]
  ! CASE            [ reduce using rule 85 (condicion -> BOOL .) ]
  ! DEFAULT         [ reduce using rule 85 (condicion -> BOOL .) ]
  ! LBRACE          [ reduce using rule 85 (condicion -> BOOL .) ]
  ! DOSPUNTOS       [ reduce using rule 85 (condicion -> BOOL .) ]
  ! COMMA           [ reduce using rule 85 (condicion -> BOOL .) ]
  ! SEMICOLON       [ reduce using rule 85 (condicion -> BOOL .) ]
  ! RPAREN          [ reduce using rule 85 (condicion -> BOOL .) ]


state 88

    (68) valor -> condiciones .

    PLUS            reduce using rule 68 (valor -> condiciones .)
    MINUS           reduce using rule 68 (valor -> condiciones .)
    TIMES           reduce using rule 68 (valor -> condiciones .)
    DIVIDE          reduce using rule 68 (valor -> condiciones .)
    MOD             reduce using rule 68 (valor -> condiciones .)
    NOT_EQUAL       reduce using rule 68 (valor -> condiciones .)
    LESS_THAN       reduce using rule 68 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 68 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 68 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 68 (valor -> condiciones .)
    EQUAL           reduce using rule 68 (valor -> condiciones .)
    $end            reduce using rule 68 (valor -> condiciones .)
    RBRACE          reduce using rule 68 (valor -> condiciones .)
    CASE            reduce using rule 68 (valor -> condiciones .)
    DEFAULT         reduce using rule 68 (valor -> condiciones .)
    AND             reduce using rule 68 (valor -> condiciones .)
    OR              reduce using rule 68 (valor -> condiciones .)
    LBRACE          reduce using rule 68 (valor -> condiciones .)
    DOSPUNTOS       reduce using rule 68 (valor -> condiciones .)
    COMMA           reduce using rule 68 (valor -> condiciones .)
    SEMICOLON       reduce using rule 68 (valor -> condiciones .)
    RPAREN          reduce using rule 68 (valor -> condiciones .)


state 89

    (69) valor -> ID .

    PLUS            reduce using rule 69 (valor -> ID .)
    MINUS           reduce using rule 69 (valor -> ID .)
    TIMES           reduce using rule 69 (valor -> ID .)
    DIVIDE          reduce using rule 69 (valor -> ID .)
    MOD             reduce using rule 69 (valor -> ID .)
    NOT_EQUAL       reduce using rule 69 (valor -> ID .)
    LESS_THAN       reduce using rule 69 (valor -> ID .)
    LESS_EQUAL      reduce using rule 69 (valor -> ID .)
    GREATER_THAN    reduce using rule 69 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 69 (valor -> ID .)
    EQUAL           reduce using rule 69 (valor -> ID .)
    $end            reduce using rule 69 (valor -> ID .)
    RBRACE          reduce using rule 69 (valor -> ID .)
    CASE            reduce using rule 69 (valor -> ID .)
    DEFAULT         reduce using rule 69 (valor -> ID .)
    AND             reduce using rule 69 (valor -> ID .)
    OR              reduce using rule 69 (valor -> ID .)
    LBRACE          reduce using rule 69 (valor -> ID .)
    DOSPUNTOS       reduce using rule 69 (valor -> ID .)
    COMMA           reduce using rule 69 (valor -> ID .)
    SEMICOLON       reduce using rule 69 (valor -> ID .)
    RPAREN          reduce using rule 69 (valor -> ID .)


state 90

    (52) asignacion -> VAR ID tipoDato ASSIGN . valor
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 129
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 91

    (53) asignacion -> VAR ID ASSIGN valor .
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    $end            reduce using rule 53 (asignacion -> VAR ID ASSIGN valor .)
    RBRACE          reduce using rule 53 (asignacion -> VAR ID ASSIGN valor .)
    CASE            reduce using rule 53 (asignacion -> VAR ID ASSIGN valor .)
    DEFAULT         reduce using rule 53 (asignacion -> VAR ID ASSIGN valor .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 92

    (24) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (31) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (32) casoDefault -> . empty
    (92) empty -> .

    DEFAULT         shift and go to state 97
    RBRACE          reduce using rule 92 (empty -> .)

    casoDefault                    shift and go to state 130
    empty                          shift and go to state 98

state 93

    (33) bloqueCasosSwitch -> casoSwitch .
    (34) bloqueCasosSwitch -> casoSwitch . bloqueCasosSwitch
    (33) bloqueCasosSwitch -> . casoSwitch
    (34) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (35) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 33 (bloqueCasosSwitch -> casoSwitch .)
    RBRACE          reduce using rule 33 (bloqueCasosSwitch -> casoSwitch .)
    CASE            shift and go to state 94

    casoSwitch                     shift and go to state 93
    bloqueCasosSwitch              shift and go to state 131

state 94

    (35) casoSwitch -> CASE . valores DOSPUNTOS subcodigo
    (60) valores -> . valor
    (61) valores -> . valor COMMA valores
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valores                        shift and go to state 132
    valor                          shift and go to state 133
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 95

    (54) asignacionCorta -> ID DOSPUNTOS ASSIGN . valor
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 134
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 96

    (26) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault . RBRACE

    RBRACE          shift and go to state 135


state 97

    (31) casoDefault -> DEFAULT . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 136


state 98

    (32) casoDefault -> empty .

    RBRACE          reduce using rule 32 (casoDefault -> empty .)


state 99

    (28) bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .

    DEFAULT         reduce using rule 28 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)
    RBRACE          reduce using rule 28 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)


state 100

    (29) casoBooleano -> CASE condiciones . DOSPUNTOS subcodigo
    (68) valor -> condiciones .

    DOSPUNTOS       shift and go to state 137
    NOT_EQUAL       reduce using rule 68 (valor -> condiciones .)
    LESS_THAN       reduce using rule 68 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 68 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 68 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 68 (valor -> condiciones .)
    EQUAL           reduce using rule 68 (valor -> condiciones .)
    PLUS            reduce using rule 68 (valor -> condiciones .)
    MINUS           reduce using rule 68 (valor -> condiciones .)
    TIMES           reduce using rule 68 (valor -> condiciones .)
    DIVIDE          reduce using rule 68 (valor -> condiciones .)
    MOD             reduce using rule 68 (valor -> condiciones .)


state 101

    (30) casoBooleano -> CASE ID . DOSPUNTOS subcodigo
    (69) valor -> ID .

    DOSPUNTOS       shift and go to state 138
    NOT_EQUAL       reduce using rule 69 (valor -> ID .)
    LESS_THAN       reduce using rule 69 (valor -> ID .)
    LESS_EQUAL      reduce using rule 69 (valor -> ID .)
    GREATER_THAN    reduce using rule 69 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 69 (valor -> ID .)
    EQUAL           reduce using rule 69 (valor -> ID .)
    PLUS            reduce using rule 69 (valor -> ID .)
    MINUS           reduce using rule 69 (valor -> ID .)
    TIMES           reduce using rule 69 (valor -> ID .)
    DIVIDE          reduce using rule 69 (valor -> ID .)
    MOD             reduce using rule 69 (valor -> ID .)


state 102

    (25) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID . LBRACE bloqueCasosSwitch casoDefault RBRACE

    LBRACE          shift and go to state 139


state 103

    (11) funcion -> FUNC ID LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE

    RPAREN          shift and go to state 140


state 104

    (18) funcionSinArg -> FUNC ID LPAREN RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 141


state 105

    (19) funcionAnonima -> FUNC LPAREN RPAREN LBRACE . subcodigo RBRACE LPAREN RPAREN
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 142
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 106

    (20) funcionAnonima -> FUNC LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE LPAREN RPAREN

    LBRACE          shift and go to state 143


state 107

    (14) argumentos -> argumento COMMA . argumentos
    (12) argumentos -> . argumento
    (13) argumentos -> . argumentoVariadico
    (14) argumentos -> . argumento COMMA argumentos
    (15) argumentos -> . argumentoVariadico COMMA argumentos
    (16) argumento -> . ID tipoDato
    (17) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    ID              shift and go to state 62

    argumento                      shift and go to state 60
    argumentos                     shift and go to state 144
    argumentoVariadico             shift and go to state 61

state 108

    (15) argumentos -> argumentoVariadico COMMA . argumentos
    (12) argumentos -> . argumento
    (13) argumentos -> . argumentoVariadico
    (14) argumentos -> . argumento COMMA argumentos
    (15) argumentos -> . argumentoVariadico COMMA argumentos
    (16) argumento -> . ID tipoDato
    (17) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    ID              shift and go to state 62

    argumentoVariadico             shift and go to state 61
    argumentos                     shift and go to state 145
    argumento                      shift and go to state 60

state 109

    (16) argumento -> ID tipoDato .

    COMMA           reduce using rule 16 (argumento -> ID tipoDato .)
    RPAREN          reduce using rule 16 (argumento -> ID tipoDato .)


state 110

    (17) argumentoVariadico -> ID PUNTO . PUNTO PUNTO tipoDato

    PUNTO           shift and go to state 146


state 111

    (93) imprimir -> FMT PUNTO PRINT_LN LPAREN . valores RPAREN
    (94) imprimir -> FMT PUNTO PRINT_LN LPAREN . RPAREN
    (60) valores -> . valor
    (61) valores -> . valor COMMA valores
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    RPAREN          shift and go to state 148
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valores                        shift and go to state 147
    valor                          shift and go to state 133
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 112

    (95) solicitudDatos -> FMT PUNTO SCANLN LPAREN . POINTER ID RPAREN

    POINTER         shift and go to state 149


state 113

    (41) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE RBRACE
    (42) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato
    (43) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE elementosMapa RBRACE
    (55) tipoDato -> . FLOAT64_TYPE
    (56) tipoDato -> . COMPLEX64_TYPE
    (57) tipoDato -> . INT_TYPE
    (58) tipoDato -> . BOOL_TYPE
    (59) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 46
    COMPLEX64_TYPE  shift and go to state 47
    INT_TYPE        shift and go to state 48
    BOOL_TYPE       shift and go to state 49
    STRING_TYPE     shift and go to state 50

    tipoDato                       shift and go to state 150

state 114

    (47) array -> LBRACKET INT RBRACKET tipoDato .
    (48) array -> LBRACKET INT RBRACKET tipoDato . LBRACE RBRACE
    (49) array -> LBRACKET INT RBRACKET tipoDato . LBRACE elementosArray RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
    $end            reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    NOT_EQUAL       reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    LESS_THAN       reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    LESS_EQUAL      reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    GREATER_THAN    reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    GREATER_EQUAL   reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    EQUAL           reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    PLUS            reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    MINUS           reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    TIMES           reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    DIVIDE          reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    MOD             reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    RBRACE          reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    CASE            reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    DEFAULT         reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    AND             reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    OR              reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    DOSPUNTOS       reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    COMMA           reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    SEMICOLON       reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    RPAREN          reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .)
    LBRACE          shift and go to state 151

  ! LBRACE          [ reduce using rule 47 (array -> LBRACKET INT RBRACKET tipoDato .) ]


state 115

    (36) sentenciaIf -> IF condiciones LBRACE RBRACE .

    $end            reduce using rule 36 (sentenciaIf -> IF condiciones LBRACE RBRACE .)


state 116

    (37) sentenciaIf -> IF condiciones LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 152


state 117

    (21) subcodigo -> asignacionCorta .

    RBRACE          reduce using rule 21 (subcodigo -> asignacionCorta .)
    CASE            reduce using rule 21 (subcodigo -> asignacionCorta .)
    DEFAULT         reduce using rule 21 (subcodigo -> asignacionCorta .)


state 118

    (22) subcodigo -> asignacion .

    RBRACE          reduce using rule 22 (subcodigo -> asignacion .)
    CASE            reduce using rule 22 (subcodigo -> asignacion .)
    DEFAULT         reduce using rule 22 (subcodigo -> asignacion .)


state 119

    (23) subcodigo -> imprimir .

    RBRACE          reduce using rule 23 (subcodigo -> imprimir .)
    CASE            reduce using rule 23 (subcodigo -> imprimir .)
    DEFAULT         reduce using rule 23 (subcodigo -> imprimir .)


state 120

    (54) asignacionCorta -> ID . DOSPUNTOS ASSIGN valor

    DOSPUNTOS       shift and go to state 52


state 121

    (93) imprimir -> FMT . PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> FMT . PUNTO PRINT_LN LPAREN RPAREN

    PUNTO           shift and go to state 153


state 122

    (38) sentenciaIf -> IF asignacionCorta SEMICOLON condiciones . LBRACE subcodigo RBRACE
    (68) valor -> condiciones .

    LBRACE          shift and go to state 154
    NOT_EQUAL       reduce using rule 68 (valor -> condiciones .)
    LESS_THAN       reduce using rule 68 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 68 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 68 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 68 (valor -> condiciones .)
    EQUAL           reduce using rule 68 (valor -> condiciones .)
    PLUS            reduce using rule 68 (valor -> condiciones .)
    MINUS           reduce using rule 68 (valor -> condiciones .)
    TIMES           reduce using rule 68 (valor -> condiciones .)
    DIVIDE          reduce using rule 68 (valor -> condiciones .)
    MOD             reduce using rule 68 (valor -> condiciones .)


state 123

    (81) condiciones -> condicion conector condiciones .
    (68) valor -> condiciones .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for EQUAL resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for PLUS resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for TIMES resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 68 (valor -> condiciones .)
  ! reduce/reduce conflict for MOD resolved using rule 68 (valor -> condiciones .)
    LBRACE          reduce using rule 81 (condiciones -> condicion conector condiciones .)
    $end            reduce using rule 81 (condiciones -> condicion conector condiciones .)
    RBRACE          reduce using rule 81 (condiciones -> condicion conector condiciones .)
    CASE            reduce using rule 81 (condiciones -> condicion conector condiciones .)
    DEFAULT         reduce using rule 81 (condiciones -> condicion conector condiciones .)
    DOSPUNTOS       reduce using rule 81 (condiciones -> condicion conector condiciones .)
    AND             reduce using rule 81 (condiciones -> condicion conector condiciones .)
    OR              reduce using rule 81 (condiciones -> condicion conector condiciones .)
    COMMA           reduce using rule 81 (condiciones -> condicion conector condiciones .)
    SEMICOLON       reduce using rule 81 (condiciones -> condicion conector condiciones .)
    RPAREN          reduce using rule 81 (condiciones -> condicion conector condiciones .)
    NOT_EQUAL       reduce using rule 68 (valor -> condiciones .)
    LESS_THAN       reduce using rule 68 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 68 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 68 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 68 (valor -> condiciones .)
    EQUAL           reduce using rule 68 (valor -> condiciones .)
    PLUS            reduce using rule 68 (valor -> condiciones .)
    MINUS           reduce using rule 68 (valor -> condiciones .)
    TIMES           reduce using rule 68 (valor -> condiciones .)
    DIVIDE          reduce using rule 68 (valor -> condiciones .)
    MOD             reduce using rule 68 (valor -> condiciones .)

  ! NOT_EQUAL       [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! LESS_THAN       [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! LESS_EQUAL      [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_THAN    [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_EQUAL   [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! EQUAL           [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! PLUS            [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! MINUS           [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! TIMES           [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! DIVIDE          [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]
  ! MOD             [ reduce using rule 81 (condiciones -> condicion conector condiciones .) ]


state 124

    (84) condicion -> valor operadorComp valor .
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    AND             reduce using rule 84 (condicion -> valor operadorComp valor .)
    OR              reduce using rule 84 (condicion -> valor operadorComp valor .)
    LBRACE          reduce using rule 84 (condicion -> valor operadorComp valor .)
    $end            reduce using rule 84 (condicion -> valor operadorComp valor .)
    RBRACE          reduce using rule 84 (condicion -> valor operadorComp valor .)
    CASE            reduce using rule 84 (condicion -> valor operadorComp valor .)
    DEFAULT         reduce using rule 84 (condicion -> valor operadorComp valor .)
    DOSPUNTOS       reduce using rule 84 (condicion -> valor operadorComp valor .)
    COMMA           reduce using rule 84 (condicion -> valor operadorComp valor .)
    SEMICOLON       reduce using rule 84 (condicion -> valor operadorComp valor .)
    RPAREN          reduce using rule 84 (condicion -> valor operadorComp valor .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

  ! NOT_EQUAL       [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! LESS_THAN       [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! LESS_EQUAL      [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! GREATER_THAN    [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! EQUAL           [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! PLUS            [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! MINUS           [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! TIMES           [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! DIVIDE          [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]
  ! MOD             [ reduce using rule 84 (condicion -> valor operadorComp valor .) ]

    operadorComp                   shift and go to state 72
    operador                       shift and go to state 73

state 125

    (73) expresionAritmetica -> valor operador valor .
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    $end            reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    RBRACE          reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    CASE            reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    DEFAULT         reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    AND             reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    OR              reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    LBRACE          reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    DOSPUNTOS       reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    COMMA           reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    SEMICOLON       reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    RPAREN          reduce using rule 73 (expresionAritmetica -> valor operador valor .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

  ! PLUS            [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! EQUAL           [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 126

    (72) expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .
    (67) valor -> expresionesAritmeticas .

  ! reduce/reduce conflict for PLUS resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for TIMES resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 67 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for EQUAL resolved using rule 67 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RBRACE          reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    CASE            reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DEFAULT         reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    AND             reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    OR              reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    LBRACE          reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    COMMA           reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    SEMICOLON       reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RPAREN          reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    PLUS            reduce using rule 67 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 67 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 67 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 67 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 67 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 67 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 67 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 67 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 67 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 67 (valor -> expresionesAritmeticas .)
    EQUAL           reduce using rule 67 (valor -> expresionesAritmeticas .)

  ! NOT_EQUAL       [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_THAN       [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_EQUAL      [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_THAN    [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_EQUAL   [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! EQUAL           [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! PLUS            [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MINUS           [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! TIMES           [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! DIVIDE          [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MOD             [ reduce using rule 72 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]


state 127

    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 128

    (74) expresionAritmetica -> LPAREN valor operador . valor RPAREN
    (73) expresionAritmetica -> valor operador . valor
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 155
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 129

    (52) asignacion -> VAR ID tipoDato ASSIGN valor .
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    $end            reduce using rule 52 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    RBRACE          reduce using rule 52 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    CASE            reduce using rule 52 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    DEFAULT         reduce using rule 52 (asignacion -> VAR ID tipoDato ASSIGN valor .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 130

    (24) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 156


state 131

    (34) bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .

    DEFAULT         reduce using rule 34 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)
    RBRACE          reduce using rule 34 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)


state 132

    (35) casoSwitch -> CASE valores . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 157


state 133

    (60) valores -> valor .
    (61) valores -> valor . COMMA valores
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    DOSPUNTOS       reduce using rule 60 (valores -> valor .)
    RPAREN          reduce using rule 60 (valores -> valor .)
    COMMA           shift and go to state 158
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 134

    (54) asignacionCorta -> ID DOSPUNTOS ASSIGN valor .
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    SEMICOLON       reduce using rule 54 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    RBRACE          reduce using rule 54 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    CASE            reduce using rule 54 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    DEFAULT         reduce using rule 54 (asignacionCorta -> ID DOSPUNTOS ASSIGN valor .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 135

    (26) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .

    $end            reduce using rule 26 (sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .)


state 136

    (31) casoDefault -> DEFAULT DOSPUNTOS . subcodigo
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 159
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 137

    (29) casoBooleano -> CASE condiciones DOSPUNTOS . subcodigo
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 160
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 138

    (30) casoBooleano -> CASE ID DOSPUNTOS . subcodigo
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 161
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 139

    (25) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (33) bloqueCasosSwitch -> . casoSwitch
    (34) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (35) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 94

    bloqueCasosSwitch              shift and go to state 162
    casoSwitch                     shift and go to state 93

state 140

    (11) funcion -> FUNC ID LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 163


state 141

    (18) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE . subcodigo RBRACE
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 164
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 142

    (19) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo . RBRACE LPAREN RPAREN

    RBRACE          shift and go to state 165


state 143

    (20) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE LPAREN RPAREN
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 166
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 144

    (14) argumentos -> argumento COMMA argumentos .

    RPAREN          reduce using rule 14 (argumentos -> argumento COMMA argumentos .)


state 145

    (15) argumentos -> argumentoVariadico COMMA argumentos .

    RPAREN          reduce using rule 15 (argumentos -> argumentoVariadico COMMA argumentos .)


state 146

    (17) argumentoVariadico -> ID PUNTO PUNTO . PUNTO tipoDato

    PUNTO           shift and go to state 167


state 147

    (93) imprimir -> FMT PUNTO PRINT_LN LPAREN valores . RPAREN

    RPAREN          shift and go to state 168


state 148

    (94) imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .

    $end            reduce using rule 94 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)
    RBRACE          reduce using rule 94 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)
    CASE            reduce using rule 94 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)
    DEFAULT         reduce using rule 94 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)


state 149

    (95) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER . ID RPAREN

    ID              shift and go to state 169


state 150

    (41) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE RBRACE
    (42) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .
    (43) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE elementosMapa RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
    LBRACE          shift and go to state 170
    $end            reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    NOT_EQUAL       reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    LESS_THAN       reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    LESS_EQUAL      reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    GREATER_THAN    reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    GREATER_EQUAL   reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    EQUAL           reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    PLUS            reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    MINUS           reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    TIMES           reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    DIVIDE          reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    MOD             reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    RBRACE          reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    CASE            reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    DEFAULT         reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    AND             reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    OR              reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    DOSPUNTOS       reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    COMMA           reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    SEMICOLON       reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)
    RPAREN          reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .)

  ! LBRACE          [ reduce using rule 42 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato .) ]


state 151

    (48) array -> LBRACKET INT RBRACKET tipoDato LBRACE . RBRACE
    (49) array -> LBRACKET INT RBRACKET tipoDato LBRACE . elementosArray RBRACE
    (50) elementosArray -> . valor
    (51) elementosArray -> . valor COMMA elementosArray
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    RBRACE          shift and go to state 171
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    elementosArray                 shift and go to state 172
    valor                          shift and go to state 173
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 152

    (37) sentenciaIf -> IF condiciones LBRACE subcodigo RBRACE .

    $end            reduce using rule 37 (sentenciaIf -> IF condiciones LBRACE subcodigo RBRACE .)


state 153

    (93) imprimir -> FMT PUNTO . PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> FMT PUNTO . PRINT_LN LPAREN RPAREN

    PRINT_LN        shift and go to state 63


state 154

    (38) sentenciaIf -> IF asignacionCorta SEMICOLON condiciones LBRACE . subcodigo RBRACE
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    asignacionCorta                shift and go to state 117
    subcodigo                      shift and go to state 174
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 155

    (74) expresionAritmetica -> LPAREN valor operador valor . RPAREN
    (73) expresionAritmetica -> valor operador valor .
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    RPAREN          shift and go to state 175
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

  ! PLUS            [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]
  ! EQUAL           [ reduce using rule 73 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 156

    (24) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 24 (sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 157

    (35) casoSwitch -> CASE valores DOSPUNTOS . subcodigo
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 176
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 158

    (61) valores -> valor COMMA . valores
    (60) valores -> . valor
    (61) valores -> . valor COMMA valores
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 133
    valores                        shift and go to state 177
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 159

    (31) casoDefault -> DEFAULT DOSPUNTOS subcodigo .

    RBRACE          reduce using rule 31 (casoDefault -> DEFAULT DOSPUNTOS subcodigo .)


state 160

    (29) casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .

    CASE            reduce using rule 29 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 29 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 29 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)


state 161

    (30) casoBooleano -> CASE ID DOSPUNTOS subcodigo .

    CASE            reduce using rule 30 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 30 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 30 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)


state 162

    (25) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (31) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (32) casoDefault -> . empty
    (92) empty -> .

    DEFAULT         shift and go to state 97
    RBRACE          reduce using rule 92 (empty -> .)

    casoDefault                    shift and go to state 178
    empty                          shift and go to state 98

state 163

    (11) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE
    (21) subcodigo -> . asignacionCorta
    (22) subcodigo -> . asignacion
    (23) subcodigo -> . imprimir
    (54) asignacionCorta -> . ID DOSPUNTOS ASSIGN valor
    (52) asignacion -> . VAR ID tipoDato ASSIGN valor
    (53) asignacion -> . VAR ID ASSIGN valor
    (93) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (94) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN

    ID              shift and go to state 120
    VAR             shift and go to state 12
    FMT             shift and go to state 121

    subcodigo                      shift and go to state 179
    asignacionCorta                shift and go to state 117
    asignacion                     shift and go to state 118
    imprimir                       shift and go to state 119

state 164

    (18) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 180


state 165

    (19) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE . LPAREN RPAREN

    LPAREN          shift and go to state 181


state 166

    (20) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE LPAREN RPAREN

    RBRACE          shift and go to state 182


state 167

    (17) argumentoVariadico -> ID PUNTO PUNTO PUNTO . tipoDato
    (55) tipoDato -> . FLOAT64_TYPE
    (56) tipoDato -> . COMPLEX64_TYPE
    (57) tipoDato -> . INT_TYPE
    (58) tipoDato -> . BOOL_TYPE
    (59) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 46
    COMPLEX64_TYPE  shift and go to state 47
    INT_TYPE        shift and go to state 48
    BOOL_TYPE       shift and go to state 49
    STRING_TYPE     shift and go to state 50

    tipoDato                       shift and go to state 183

state 168

    (93) imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .

    $end            reduce using rule 93 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)
    RBRACE          reduce using rule 93 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)
    CASE            reduce using rule 93 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)
    DEFAULT         reduce using rule 93 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)


state 169

    (95) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID . RPAREN

    RPAREN          shift and go to state 184


state 170

    (41) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . RBRACE
    (43) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . elementosMapa RBRACE
    (44) elementosMapa -> . elementoMapa
    (45) elementosMapa -> . elementoMapa elementosMapa
    (46) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    RBRACE          shift and go to state 185
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    elementosMapa                  shift and go to state 186
    elementoMapa                   shift and go to state 187
    valor                          shift and go to state 188
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 171

    (48) array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .

    $end            reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    LESS_THAN       reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    EQUAL           reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    PLUS            reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    MINUS           reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    TIMES           reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    DIVIDE          reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    MOD             reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    RBRACE          reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    CASE            reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    DEFAULT         reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    AND             reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    OR              reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    LBRACE          reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    DOSPUNTOS       reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    COMMA           reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    SEMICOLON       reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)
    RPAREN          reduce using rule 48 (array -> LBRACKET INT RBRACKET tipoDato LBRACE RBRACE .)


state 172

    (49) array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray . RBRACE

    RBRACE          shift and go to state 189


state 173

    (50) elementosArray -> valor .
    (51) elementosArray -> valor . COMMA elementosArray
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    RBRACE          reduce using rule 50 (elementosArray -> valor .)
    COMMA           shift and go to state 190
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 174

    (38) sentenciaIf -> IF asignacionCorta SEMICOLON condiciones LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 191


state 175

    (74) expresionAritmetica -> LPAREN valor operador valor RPAREN .

    PLUS            reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MINUS           reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    TIMES           reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DIVIDE          reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MOD             reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    NOT_EQUAL       reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_THAN       reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_EQUAL      reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_THAN    reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_EQUAL   reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    EQUAL           reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    $end            reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RBRACE          reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    CASE            reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DEFAULT         reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    AND             reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    OR              reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LBRACE          reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DOSPUNTOS       reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    COMMA           reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    SEMICOLON       reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RPAREN          reduce using rule 74 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)


state 176

    (35) casoSwitch -> CASE valores DOSPUNTOS subcodigo .

    CASE            reduce using rule 35 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 35 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 35 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)


state 177

    (61) valores -> valor COMMA valores .

    DOSPUNTOS       reduce using rule 61 (valores -> valor COMMA valores .)
    RPAREN          reduce using rule 61 (valores -> valor COMMA valores .)


state 178

    (25) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 192


state 179

    (11) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 193


state 180

    (18) funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 18 (funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE .)


state 181

    (19) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN . RPAREN

    RPAREN          shift and go to state 194


state 182

    (20) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE . LPAREN RPAREN

    LPAREN          shift and go to state 195


state 183

    (17) argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .

    COMMA           reduce using rule 17 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)
    RPAREN          reduce using rule 17 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)


state 184

    (95) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .

    $end            reduce using rule 95 (solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .)


state 185

    (41) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .

    $end            reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_THAN       reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    EQUAL           reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    PLUS            reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MINUS           reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    TIMES           reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DIVIDE          reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MOD             reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RBRACE          reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    CASE            reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DEFAULT         reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    AND             reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    OR              reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LBRACE          reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DOSPUNTOS       reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    COMMA           reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    SEMICOLON       reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RPAREN          reduce using rule 41 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)


state 186

    (43) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa . RBRACE

    RBRACE          shift and go to state 196


state 187

    (44) elementosMapa -> elementoMapa .
    (45) elementosMapa -> elementoMapa . elementosMapa
    (44) elementosMapa -> . elementoMapa
    (45) elementosMapa -> . elementoMapa elementosMapa
    (46) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    RBRACE          reduce using rule 44 (elementosMapa -> elementoMapa .)
    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    elementoMapa                   shift and go to state 187
    elementosMapa                  shift and go to state 197
    valor                          shift and go to state 188
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 188

    (46) elementoMapa -> valor . DOSPUNTOS valor COMMA
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    DOSPUNTOS       shift and go to state 198
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 189

    (49) array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .

    $end            reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    NOT_EQUAL       reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    LESS_THAN       reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    LESS_EQUAL      reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    GREATER_THAN    reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    GREATER_EQUAL   reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    EQUAL           reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    PLUS            reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    MINUS           reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    TIMES           reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    DIVIDE          reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    MOD             reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    RBRACE          reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    CASE            reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    DEFAULT         reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    AND             reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    OR              reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    LBRACE          reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    DOSPUNTOS       reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    COMMA           reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    SEMICOLON       reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)
    RPAREN          reduce using rule 49 (array -> LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE .)


state 190

    (51) elementosArray -> valor COMMA . elementosArray
    (50) elementosArray -> . valor
    (51) elementosArray -> . valor COMMA elementosArray
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 173
    elementosArray                 shift and go to state 199
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 191

    (38) sentenciaIf -> IF asignacionCorta SEMICOLON condiciones LBRACE subcodigo RBRACE .

    $end            reduce using rule 38 (sentenciaIf -> IF asignacionCorta SEMICOLON condiciones LBRACE subcodigo RBRACE .)


state 192

    (25) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 25 (sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 193

    (11) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 11 (funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .)


state 194

    (19) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .

    $end            reduce using rule 19 (funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .)


state 195

    (20) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN . RPAREN

    RPAREN          shift and go to state 200


state 196

    (43) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .

    $end            reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    NOT_EQUAL       reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_THAN       reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_EQUAL      reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_THAN    reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_EQUAL   reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    EQUAL           reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    PLUS            reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MINUS           reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    TIMES           reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DIVIDE          reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MOD             reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RBRACE          reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    CASE            reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DEFAULT         reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    AND             reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    OR              reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LBRACE          reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DOSPUNTOS       reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    COMMA           reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    SEMICOLON       reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RPAREN          reduce using rule 43 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)


state 197

    (45) elementosMapa -> elementoMapa elementosMapa .

    RBRACE          reduce using rule 45 (elementosMapa -> elementoMapa elementosMapa .)


state 198

    (46) elementoMapa -> valor DOSPUNTOS . valor COMMA
    (62) valor -> . FLOAT64
    (63) valor -> . COMPLEX64
    (64) valor -> . INT
    (65) valor -> . BOOL
    (66) valor -> . STRING
    (67) valor -> . expresionesAritmeticas
    (68) valor -> . condiciones
    (69) valor -> . ID
    (70) valor -> . estructurasDeDatos
    (71) expresionesAritmeticas -> . expresionAritmetica
    (72) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (80) condiciones -> . condicion
    (81) condiciones -> . condicion conector condiciones
    (39) estructurasDeDatos -> . mapa
    (40) estructurasDeDatos -> . array
    (73) expresionAritmetica -> . valor operador valor
    (74) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (84) condicion -> . valor operadorComp valor
    (85) condicion -> . BOOL
    (41) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (42) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato
    (43) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (47) array -> . LBRACKET INT RBRACKET tipoDato
    (48) array -> . LBRACKET INT RBRACKET tipoDato LBRACE RBRACE
    (49) array -> . LBRACKET INT RBRACKET tipoDato LBRACE elementosArray RBRACE

    FLOAT64         shift and go to state 34
    COMPLEX64       shift and go to state 35
    INT             shift and go to state 36
    BOOL            shift and go to state 87
    STRING          shift and go to state 37
    ID              shift and go to state 89
    LPAREN          shift and go to state 43
    MAP             shift and go to state 16
    LBRACKET        shift and go to state 17

    valor                          shift and go to state 201
    expresionesAritmeticas         shift and go to state 38
    condiciones                    shift and go to state 88
    estructurasDeDatos             shift and go to state 39
    expresionAritmetica            shift and go to state 40
    condicion                      shift and go to state 30
    mapa                           shift and go to state 41
    array                          shift and go to state 42

state 199

    (51) elementosArray -> valor COMMA elementosArray .

    RBRACE          reduce using rule 51 (elementosArray -> valor COMMA elementosArray .)


state 200

    (20) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .

    $end            reduce using rule 20 (funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .)


state 201

    (46) elementoMapa -> valor DOSPUNTOS valor . COMMA
    (73) expresionAritmetica -> valor . operador valor
    (84) condicion -> valor . operadorComp valor
    (75) operador -> . PLUS
    (76) operador -> . MINUS
    (77) operador -> . TIMES
    (78) operador -> . DIVIDE
    (79) operador -> . MOD
    (86) operadorComp -> . NOT_EQUAL
    (87) operadorComp -> . LESS_THAN
    (88) operadorComp -> . LESS_EQUAL
    (89) operadorComp -> . GREATER_THAN
    (90) operadorComp -> . GREATER_EQUAL
    (91) operadorComp -> . EQUAL

    COMMA           shift and go to state 202
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MOD             shift and go to state 84
    NOT_EQUAL       shift and go to state 74
    LESS_THAN       shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    GREATER_THAN    shift and go to state 77
    GREATER_EQUAL   shift and go to state 78
    EQUAL           shift and go to state 79

    operador                       shift and go to state 73
    operadorComp                   shift and go to state 72

state 202

    (46) elementoMapa -> valor DOSPUNTOS valor COMMA .

    FLOAT64         reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    COMPLEX64       reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    INT             reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    BOOL            reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    STRING          reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    ID              reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LPAREN          reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    MAP             reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LBRACKET        reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    RBRACE          reduce using rule 46 (elementoMapa -> valor DOSPUNTOS valor COMMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 30 resolved as shift
WARNING: shift/reduce conflict for OR in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 40 resolved as shift
WARNING: shift/reduce conflict for MOD in state 40 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 114 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 124 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 124 resolved as shift
WARNING: shift/reduce conflict for MOD in state 124 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 124 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 124 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 125 resolved as shift
WARNING: shift/reduce conflict for MOD in state 125 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 125 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 125 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 155 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 155 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 155 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 155 resolved as shift
WARNING: shift/reduce conflict for MOD in state 155 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 155 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 155 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 155 resolved as shift
WARNING: reduce/reduce conflict in state 33 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 33
WARNING: reduce/reduce conflict in state 87 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 87
WARNING: reduce/reduce conflict in state 123 resolved using rule (valor -> condiciones)
WARNING: rejected rule (condiciones -> condicion conector condiciones) in state 123
WARNING: reduce/reduce conflict in state 126 resolved using rule (valor -> expresionesAritmeticas)
WARNING: rejected rule (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas) in state 126
