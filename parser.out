Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASSIGN
    BREAK
    CHAN
    COMMENT
    CONST
    CONTINUE
    DEFER
    ELSE
    FALLTHROUGH
    FOR
    GO
    GOTO
    IF
    ILLEGAL
    IMPORT
    INTERFACE
    NOT
    PACKAGE
    RANGE
    RETURN
    SELECT
    STRUCT
    TYPE

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> asignacion
Rule 2     codigo -> sentenciaSwitch
Rule 3     codigo -> funcion
Rule 4     codigo -> funcionAnonima
Rule 5     codigo -> imprimir
Rule 6     codigo -> solicitudDatos
Rule 7     funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
Rule 8     argumentos -> argumento
Rule 9     argumentos -> argumentoVariadico
Rule 10    argumentos -> argumento COMMA
Rule 11    argumentos -> argumentoVariadico COMMA
Rule 12    argumento -> ID tipoDato
Rule 13    argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato
Rule 14    funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
Rule 15    funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
Rule 16    subcodigo -> asignacionCorta
Rule 17    subcodigo -> asignacion
Rule 18    sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 19    sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
Rule 20    sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
Rule 21    bloqueCasosBooleanos -> casoBooleano
Rule 22    bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos
Rule 23    casoBooleano -> CASE condiciones DOSPUNTOS subcodigo
Rule 24    casoBooleano -> CASE ID DOSPUNTOS subcodigo
Rule 25    casoDefault -> DEFAULT DOSPUNTOS subcodigo
Rule 26    casoDefault -> empty
Rule 27    bloqueCasosSwitch -> casoSwitch
Rule 28    bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch
Rule 29    casoSwitch -> CASE valores DOSPUNTOS subcodigo
Rule 30    estructurasDeDatos -> mapa
Rule 31    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
Rule 32    mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
Rule 33    elementosMapa -> elementoMapa
Rule 34    elementosMapa -> elementoMapa elementosMapa
Rule 35    elementoMapa -> valor DOSPUNTOS valor COMMA
Rule 36    asignacion -> VAR ID tipoDato EQUAL valor
Rule 37    asignacion -> VAR ID EQUAL valor
Rule 38    asignacionCorta -> ID DOSPUNTOS EQUAL valor
Rule 39    tipoDato -> FLOAT64_TYPE
Rule 40    tipoDato -> COMPLEX64_TYPE
Rule 41    tipoDato -> INT_TYPE
Rule 42    tipoDato -> BOOL_TYPE
Rule 43    tipoDato -> STRING_TYPE
Rule 44    valores -> valor
Rule 45    valores -> valor COMMA valores
Rule 46    valor -> FLOAT64
Rule 47    valor -> COMPLEX64
Rule 48    valor -> INT
Rule 49    valor -> BOOL
Rule 50    valor -> STRING
Rule 51    valor -> expresionesAritmeticas
Rule 52    valor -> condiciones
Rule 53    valor -> ID
Rule 54    valor -> estructurasDeDatos
Rule 55    expresionesAritmeticas -> expresionAritmetica
Rule 56    expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas
Rule 57    expresionAritmetica -> valor operador valor
Rule 58    expresionAritmetica -> LPAREN valor operador valor RPAREN
Rule 59    operador -> PLUS
Rule 60    operador -> MINUS
Rule 61    operador -> TIMES
Rule 62    operador -> DIVIDE
Rule 63    operador -> MOD
Rule 64    condiciones -> condicion
Rule 65    condiciones -> condicion conector condiciones
Rule 66    conector -> AND
Rule 67    conector -> OR
Rule 68    condicion -> valor operadorComp valor
Rule 69    condicion -> BOOL
Rule 70    operadorComp -> NOT_EQUAL
Rule 71    operadorComp -> LESS_THAN
Rule 72    operadorComp -> LESS_EQUAL
Rule 73    operadorComp -> GREATER_THAN
Rule 74    operadorComp -> GREATER_EQUAL
Rule 75    empty -> <empty>
Rule 76    imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN
Rule 77    imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN
Rule 78    solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

Terminals, with rules where they appear

AND                  : 66
ASSIGN               : 
BOOL                 : 49 69
BOOL_TYPE            : 42
BREAK                : 
CASE                 : 23 24 29
CHAN                 : 
COMMA                : 10 11 35 45
COMMENT              : 
COMPLEX64            : 47
COMPLEX64_TYPE       : 40
CONST                : 
CONTINUE             : 
DEFAULT              : 25
DEFER                : 
DIVIDE               : 62
DOSPUNTOS            : 23 24 25 29 35 38
ELSE                 : 
EQUAL                : 36 37 38
FALLTHROUGH          : 
FLOAT64              : 46
FLOAT64_TYPE         : 39
FMT                  : 76 77 78
FOR                  : 
FUNC                 : 7 14 15
GO                   : 
GOTO                 : 
GREATER_EQUAL        : 74
GREATER_THAN         : 73
ID                   : 7 12 13 18 19 24 36 37 38 53 78
IF                   : 
ILLEGAL              : 
IMPORT               : 
INT                  : 48
INTERFACE            : 
INT_TYPE             : 41
LBRACE               : 7 14 15 18 19 20 31 32
LBRACKET             : 31 32
LESS_EQUAL           : 72
LESS_THAN            : 71
LPAREN               : 7 14 14 15 15 58 76 77 78
MAP                  : 31 32
MINUS                : 60
MOD                  : 63
NOT                  : 
NOT_EQUAL            : 70
OR                   : 67
PACKAGE              : 
PLUS                 : 59
POINTER              : 78
PRINT_LN             : 76 77
PUNTO                : 13 13 13 76 77 78
RANGE                : 
RBRACE               : 7 14 15 18 19 20 31 32
RBRACKET             : 31 32
RETURN               : 
RPAREN               : 7 14 14 15 15 58 76 77 78
SCANLN               : 78
SELECT               : 
SEMICOLON            : 19
STRING               : 50
STRING_TYPE          : 43
STRUCT               : 
SWITCH               : 18 19 20
TIMES                : 61
TYPE                 : 
VAR                  : 36 37
error                : 

Nonterminals, with rules where they appear

argumento            : 8 10
argumentoVariadico   : 9 11
argumentos           : 7 15
asignacion           : 1 17
asignacionCorta      : 16 19
bloqueCasosBooleanos : 20 22
bloqueCasosSwitch    : 18 19 28
casoBooleano         : 21 22
casoDefault          : 18 19 20
casoSwitch           : 27 28
codigo               : 0
condicion            : 64 65
condiciones          : 23 52 65
conector             : 65
elementoMapa         : 33 34
elementosMapa        : 32 34
empty                : 26
estructurasDeDatos   : 54
expresionAritmetica  : 55 56
expresionesAritmeticas : 51 56
funcion              : 3
funcionAnonima       : 4
imprimir             : 5
mapa                 : 30
operador             : 56 57 58
operadorComp         : 68
sentenciaSwitch      : 2
solicitudDatos       : 6
subcodigo            : 7 14 15 23 24 25 29
tipoDato             : 12 13 31 31 32 32 36
valor                : 35 35 36 37 38 44 45 57 57 58 58 68 68
valores              : 29 45 76

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . asignacion
    (2) codigo -> . sentenciaSwitch
    (3) codigo -> . funcion
    (4) codigo -> . funcionAnonima
    (5) codigo -> . imprimir
    (6) codigo -> . solicitudDatos
    (36) asignacion -> . VAR ID tipoDato EQUAL valor
    (37) asignacion -> . VAR ID EQUAL valor
    (18) sentenciaSwitch -> . SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (19) sentenciaSwitch -> . SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (20) sentenciaSwitch -> . SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (7) funcion -> . FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (14) funcionAnonima -> . FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (15) funcionAnonima -> . FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (76) imprimir -> . FMT PUNTO PRINT_LN LPAREN valores RPAREN
    (77) imprimir -> . FMT PUNTO PRINT_LN LPAREN RPAREN
    (78) solicitudDatos -> . FMT PUNTO SCANLN LPAREN POINTER ID RPAREN

    VAR             shift and go to state 8
    SWITCH          shift and go to state 9
    FUNC            shift and go to state 10
    FMT             shift and go to state 11

    codigo                         shift and go to state 1
    asignacion                     shift and go to state 2
    sentenciaSwitch                shift and go to state 3
    funcion                        shift and go to state 4
    funcionAnonima                 shift and go to state 5
    imprimir                       shift and go to state 6
    solicitudDatos                 shift and go to state 7

state 1

    (0) S' -> codigo .



state 2

    (1) codigo -> asignacion .

    $end            reduce using rule 1 (codigo -> asignacion .)


state 3

    (2) codigo -> sentenciaSwitch .

    $end            reduce using rule 2 (codigo -> sentenciaSwitch .)


state 4

    (3) codigo -> funcion .

    $end            reduce using rule 3 (codigo -> funcion .)


state 5

    (4) codigo -> funcionAnonima .

    $end            reduce using rule 4 (codigo -> funcionAnonima .)


state 6

    (5) codigo -> imprimir .

    $end            reduce using rule 5 (codigo -> imprimir .)


state 7

    (6) codigo -> solicitudDatos .

    $end            reduce using rule 6 (codigo -> solicitudDatos .)


state 8

    (36) asignacion -> VAR . ID tipoDato EQUAL valor
    (37) asignacion -> VAR . ID EQUAL valor

    ID              shift and go to state 12


state 9

    (18) sentenciaSwitch -> SWITCH . ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (19) sentenciaSwitch -> SWITCH . asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE
    (20) sentenciaSwitch -> SWITCH . LBRACE bloqueCasosBooleanos casoDefault RBRACE
    (38) asignacionCorta -> . ID DOSPUNTOS EQUAL valor

    ID              shift and go to state 13
    LBRACE          shift and go to state 14

    asignacionCorta                shift and go to state 15

state 10

    (7) funcion -> FUNC . ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE
    (14) funcionAnonima -> FUNC . LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (15) funcionAnonima -> FUNC . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN

    ID              shift and go to state 16
    LPAREN          shift and go to state 17


state 11

    (76) imprimir -> FMT . PUNTO PRINT_LN LPAREN valores RPAREN
    (77) imprimir -> FMT . PUNTO PRINT_LN LPAREN RPAREN
    (78) solicitudDatos -> FMT . PUNTO SCANLN LPAREN POINTER ID RPAREN

    PUNTO           shift and go to state 18


state 12

    (36) asignacion -> VAR ID . tipoDato EQUAL valor
    (37) asignacion -> VAR ID . EQUAL valor
    (39) tipoDato -> . FLOAT64_TYPE
    (40) tipoDato -> . COMPLEX64_TYPE
    (41) tipoDato -> . INT_TYPE
    (42) tipoDato -> . BOOL_TYPE
    (43) tipoDato -> . STRING_TYPE

    EQUAL           shift and go to state 20
    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 19

state 13

    (18) sentenciaSwitch -> SWITCH ID . LBRACE bloqueCasosSwitch casoDefault RBRACE
    (38) asignacionCorta -> ID . DOSPUNTOS EQUAL valor

    LBRACE          shift and go to state 26
    DOSPUNTOS       shift and go to state 27


state 14

    (20) sentenciaSwitch -> SWITCH LBRACE . bloqueCasosBooleanos casoDefault RBRACE
    (21) bloqueCasosBooleanos -> . casoBooleano
    (22) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (23) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (24) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    CASE            shift and go to state 30

    bloqueCasosBooleanos           shift and go to state 28
    casoBooleano                   shift and go to state 29

state 15

    (19) sentenciaSwitch -> SWITCH asignacionCorta . SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    SEMICOLON       shift and go to state 31


state 16

    (7) funcion -> FUNC ID . LPAREN argumentos RPAREN LBRACE subcodigo RBRACE

    LPAREN          shift and go to state 32


state 17

    (14) funcionAnonima -> FUNC LPAREN . RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (15) funcionAnonima -> FUNC LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN
    (8) argumentos -> . argumento
    (9) argumentos -> . argumentoVariadico
    (10) argumentos -> . argumento COMMA
    (11) argumentos -> . argumentoVariadico COMMA
    (12) argumento -> . ID tipoDato
    (13) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    RPAREN          shift and go to state 33
    ID              shift and go to state 37

    argumentos                     shift and go to state 34
    argumento                      shift and go to state 35
    argumentoVariadico             shift and go to state 36

state 18

    (76) imprimir -> FMT PUNTO . PRINT_LN LPAREN valores RPAREN
    (77) imprimir -> FMT PUNTO . PRINT_LN LPAREN RPAREN
    (78) solicitudDatos -> FMT PUNTO . SCANLN LPAREN POINTER ID RPAREN

    PRINT_LN        shift and go to state 38
    SCANLN          shift and go to state 39


state 19

    (36) asignacion -> VAR ID tipoDato . EQUAL valor

    EQUAL           shift and go to state 40


state 20

    (37) asignacion -> VAR ID EQUAL . valor
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 42
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 21

    (39) tipoDato -> FLOAT64_TYPE .

    EQUAL           reduce using rule 39 (tipoDato -> FLOAT64_TYPE .)
    COMMA           reduce using rule 39 (tipoDato -> FLOAT64_TYPE .)
    RPAREN          reduce using rule 39 (tipoDato -> FLOAT64_TYPE .)
    RBRACKET        reduce using rule 39 (tipoDato -> FLOAT64_TYPE .)
    LBRACE          reduce using rule 39 (tipoDato -> FLOAT64_TYPE .)


state 22

    (40) tipoDato -> COMPLEX64_TYPE .

    EQUAL           reduce using rule 40 (tipoDato -> COMPLEX64_TYPE .)
    COMMA           reduce using rule 40 (tipoDato -> COMPLEX64_TYPE .)
    RPAREN          reduce using rule 40 (tipoDato -> COMPLEX64_TYPE .)
    RBRACKET        reduce using rule 40 (tipoDato -> COMPLEX64_TYPE .)
    LBRACE          reduce using rule 40 (tipoDato -> COMPLEX64_TYPE .)


state 23

    (41) tipoDato -> INT_TYPE .

    EQUAL           reduce using rule 41 (tipoDato -> INT_TYPE .)
    COMMA           reduce using rule 41 (tipoDato -> INT_TYPE .)
    RPAREN          reduce using rule 41 (tipoDato -> INT_TYPE .)
    RBRACKET        reduce using rule 41 (tipoDato -> INT_TYPE .)
    LBRACE          reduce using rule 41 (tipoDato -> INT_TYPE .)


state 24

    (42) tipoDato -> BOOL_TYPE .

    EQUAL           reduce using rule 42 (tipoDato -> BOOL_TYPE .)
    COMMA           reduce using rule 42 (tipoDato -> BOOL_TYPE .)
    RPAREN          reduce using rule 42 (tipoDato -> BOOL_TYPE .)
    RBRACKET        reduce using rule 42 (tipoDato -> BOOL_TYPE .)
    LBRACE          reduce using rule 42 (tipoDato -> BOOL_TYPE .)


state 25

    (43) tipoDato -> STRING_TYPE .

    EQUAL           reduce using rule 43 (tipoDato -> STRING_TYPE .)
    COMMA           reduce using rule 43 (tipoDato -> STRING_TYPE .)
    RPAREN          reduce using rule 43 (tipoDato -> STRING_TYPE .)
    RBRACKET        reduce using rule 43 (tipoDato -> STRING_TYPE .)
    LBRACE          reduce using rule 43 (tipoDato -> STRING_TYPE .)


state 26

    (18) sentenciaSwitch -> SWITCH ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (27) bloqueCasosSwitch -> . casoSwitch
    (28) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (29) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 58

    bloqueCasosSwitch              shift and go to state 56
    casoSwitch                     shift and go to state 57

state 27

    (38) asignacionCorta -> ID DOSPUNTOS . EQUAL valor

    EQUAL           shift and go to state 59


state 28

    (20) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos . casoDefault RBRACE
    (25) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (26) casoDefault -> . empty
    (75) empty -> .

    DEFAULT         shift and go to state 61
    RBRACE          reduce using rule 75 (empty -> .)

    casoDefault                    shift and go to state 60
    empty                          shift and go to state 62

state 29

    (21) bloqueCasosBooleanos -> casoBooleano .
    (22) bloqueCasosBooleanos -> casoBooleano . bloqueCasosBooleanos
    (21) bloqueCasosBooleanos -> . casoBooleano
    (22) bloqueCasosBooleanos -> . casoBooleano bloqueCasosBooleanos
    (23) casoBooleano -> . CASE condiciones DOSPUNTOS subcodigo
    (24) casoBooleano -> . CASE ID DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 21 (bloqueCasosBooleanos -> casoBooleano .)
    RBRACE          reduce using rule 21 (bloqueCasosBooleanos -> casoBooleano .)
    CASE            shift and go to state 30

    casoBooleano                   shift and go to state 29
    bloqueCasosBooleanos           shift and go to state 63

state 30

    (23) casoBooleano -> CASE . condiciones DOSPUNTOS subcodigo
    (24) casoBooleano -> CASE . ID DOSPUNTOS subcodigo
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    ID              shift and go to state 65
    BOOL            shift and go to state 67
    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    STRING          shift and go to state 47
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    condiciones                    shift and go to state 64
    condicion                      shift and go to state 52
    valor                          shift and go to state 66
    expresionesAritmeticas         shift and go to state 48
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    mapa                           shift and go to state 53

state 31

    (19) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON . ID LBRACE bloqueCasosSwitch casoDefault RBRACE

    ID              shift and go to state 68


state 32

    (7) funcion -> FUNC ID LPAREN . argumentos RPAREN LBRACE subcodigo RBRACE
    (8) argumentos -> . argumento
    (9) argumentos -> . argumentoVariadico
    (10) argumentos -> . argumento COMMA
    (11) argumentos -> . argumentoVariadico COMMA
    (12) argumento -> . ID tipoDato
    (13) argumentoVariadico -> . ID PUNTO PUNTO PUNTO tipoDato

    ID              shift and go to state 37

    argumentos                     shift and go to state 69
    argumento                      shift and go to state 35
    argumentoVariadico             shift and go to state 36

state 33

    (14) funcionAnonima -> FUNC LPAREN RPAREN . LBRACE subcodigo RBRACE LPAREN RPAREN

    LBRACE          shift and go to state 70


state 34

    (15) funcionAnonima -> FUNC LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN

    RPAREN          shift and go to state 71


state 35

    (8) argumentos -> argumento .
    (10) argumentos -> argumento . COMMA

    RPAREN          reduce using rule 8 (argumentos -> argumento .)
    COMMA           shift and go to state 72


state 36

    (9) argumentos -> argumentoVariadico .
    (11) argumentos -> argumentoVariadico . COMMA

    RPAREN          reduce using rule 9 (argumentos -> argumentoVariadico .)
    COMMA           shift and go to state 73


state 37

    (12) argumento -> ID . tipoDato
    (13) argumentoVariadico -> ID . PUNTO PUNTO PUNTO tipoDato
    (39) tipoDato -> . FLOAT64_TYPE
    (40) tipoDato -> . COMPLEX64_TYPE
    (41) tipoDato -> . INT_TYPE
    (42) tipoDato -> . BOOL_TYPE
    (43) tipoDato -> . STRING_TYPE

    PUNTO           shift and go to state 75
    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 74

state 38

    (76) imprimir -> FMT PUNTO PRINT_LN . LPAREN valores RPAREN
    (77) imprimir -> FMT PUNTO PRINT_LN . LPAREN RPAREN

    LPAREN          shift and go to state 76


state 39

    (78) solicitudDatos -> FMT PUNTO SCANLN . LPAREN POINTER ID RPAREN

    LPAREN          shift and go to state 77


state 40

    (36) asignacion -> VAR ID tipoDato EQUAL . valor
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 78
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 41

    (53) valor -> ID .

    PLUS            reduce using rule 53 (valor -> ID .)
    MINUS           reduce using rule 53 (valor -> ID .)
    TIMES           reduce using rule 53 (valor -> ID .)
    DIVIDE          reduce using rule 53 (valor -> ID .)
    MOD             reduce using rule 53 (valor -> ID .)
    NOT_EQUAL       reduce using rule 53 (valor -> ID .)
    LESS_THAN       reduce using rule 53 (valor -> ID .)
    LESS_EQUAL      reduce using rule 53 (valor -> ID .)
    GREATER_THAN    reduce using rule 53 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 53 (valor -> ID .)
    $end            reduce using rule 53 (valor -> ID .)
    RBRACE          reduce using rule 53 (valor -> ID .)
    CASE            reduce using rule 53 (valor -> ID .)
    DEFAULT         reduce using rule 53 (valor -> ID .)
    COMMA           reduce using rule 53 (valor -> ID .)
    DOSPUNTOS       reduce using rule 53 (valor -> ID .)
    SEMICOLON       reduce using rule 53 (valor -> ID .)
    RPAREN          reduce using rule 53 (valor -> ID .)
    AND             reduce using rule 53 (valor -> ID .)
    OR              reduce using rule 53 (valor -> ID .)


state 42

    (37) asignacion -> VAR ID EQUAL valor .
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

    $end            reduce using rule 37 (asignacion -> VAR ID EQUAL valor .)
    RBRACE          reduce using rule 37 (asignacion -> VAR ID EQUAL valor .)
    CASE            reduce using rule 37 (asignacion -> VAR ID EQUAL valor .)
    DEFAULT         reduce using rule 37 (asignacion -> VAR ID EQUAL valor .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 43

    (46) valor -> FLOAT64 .

    PLUS            reduce using rule 46 (valor -> FLOAT64 .)
    MINUS           reduce using rule 46 (valor -> FLOAT64 .)
    TIMES           reduce using rule 46 (valor -> FLOAT64 .)
    DIVIDE          reduce using rule 46 (valor -> FLOAT64 .)
    MOD             reduce using rule 46 (valor -> FLOAT64 .)
    NOT_EQUAL       reduce using rule 46 (valor -> FLOAT64 .)
    LESS_THAN       reduce using rule 46 (valor -> FLOAT64 .)
    LESS_EQUAL      reduce using rule 46 (valor -> FLOAT64 .)
    GREATER_THAN    reduce using rule 46 (valor -> FLOAT64 .)
    GREATER_EQUAL   reduce using rule 46 (valor -> FLOAT64 .)
    $end            reduce using rule 46 (valor -> FLOAT64 .)
    RBRACE          reduce using rule 46 (valor -> FLOAT64 .)
    CASE            reduce using rule 46 (valor -> FLOAT64 .)
    DEFAULT         reduce using rule 46 (valor -> FLOAT64 .)
    COMMA           reduce using rule 46 (valor -> FLOAT64 .)
    DOSPUNTOS       reduce using rule 46 (valor -> FLOAT64 .)
    SEMICOLON       reduce using rule 46 (valor -> FLOAT64 .)
    RPAREN          reduce using rule 46 (valor -> FLOAT64 .)
    AND             reduce using rule 46 (valor -> FLOAT64 .)
    OR              reduce using rule 46 (valor -> FLOAT64 .)


state 44

    (47) valor -> COMPLEX64 .

    PLUS            reduce using rule 47 (valor -> COMPLEX64 .)
    MINUS           reduce using rule 47 (valor -> COMPLEX64 .)
    TIMES           reduce using rule 47 (valor -> COMPLEX64 .)
    DIVIDE          reduce using rule 47 (valor -> COMPLEX64 .)
    MOD             reduce using rule 47 (valor -> COMPLEX64 .)
    NOT_EQUAL       reduce using rule 47 (valor -> COMPLEX64 .)
    LESS_THAN       reduce using rule 47 (valor -> COMPLEX64 .)
    LESS_EQUAL      reduce using rule 47 (valor -> COMPLEX64 .)
    GREATER_THAN    reduce using rule 47 (valor -> COMPLEX64 .)
    GREATER_EQUAL   reduce using rule 47 (valor -> COMPLEX64 .)
    $end            reduce using rule 47 (valor -> COMPLEX64 .)
    RBRACE          reduce using rule 47 (valor -> COMPLEX64 .)
    CASE            reduce using rule 47 (valor -> COMPLEX64 .)
    DEFAULT         reduce using rule 47 (valor -> COMPLEX64 .)
    COMMA           reduce using rule 47 (valor -> COMPLEX64 .)
    DOSPUNTOS       reduce using rule 47 (valor -> COMPLEX64 .)
    SEMICOLON       reduce using rule 47 (valor -> COMPLEX64 .)
    RPAREN          reduce using rule 47 (valor -> COMPLEX64 .)
    AND             reduce using rule 47 (valor -> COMPLEX64 .)
    OR              reduce using rule 47 (valor -> COMPLEX64 .)


state 45

    (48) valor -> INT .

    PLUS            reduce using rule 48 (valor -> INT .)
    MINUS           reduce using rule 48 (valor -> INT .)
    TIMES           reduce using rule 48 (valor -> INT .)
    DIVIDE          reduce using rule 48 (valor -> INT .)
    MOD             reduce using rule 48 (valor -> INT .)
    NOT_EQUAL       reduce using rule 48 (valor -> INT .)
    LESS_THAN       reduce using rule 48 (valor -> INT .)
    LESS_EQUAL      reduce using rule 48 (valor -> INT .)
    GREATER_THAN    reduce using rule 48 (valor -> INT .)
    GREATER_EQUAL   reduce using rule 48 (valor -> INT .)
    $end            reduce using rule 48 (valor -> INT .)
    RBRACE          reduce using rule 48 (valor -> INT .)
    CASE            reduce using rule 48 (valor -> INT .)
    DEFAULT         reduce using rule 48 (valor -> INT .)
    COMMA           reduce using rule 48 (valor -> INT .)
    DOSPUNTOS       reduce using rule 48 (valor -> INT .)
    SEMICOLON       reduce using rule 48 (valor -> INT .)
    RPAREN          reduce using rule 48 (valor -> INT .)
    AND             reduce using rule 48 (valor -> INT .)
    OR              reduce using rule 48 (valor -> INT .)


state 46

    (49) valor -> BOOL .
    (69) condicion -> BOOL .

  ! reduce/reduce conflict for AND resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for OR resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for $end resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for RBRACE resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for CASE resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for COMMA resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (valor -> BOOL .)
    PLUS            reduce using rule 49 (valor -> BOOL .)
    MINUS           reduce using rule 49 (valor -> BOOL .)
    TIMES           reduce using rule 49 (valor -> BOOL .)
    DIVIDE          reduce using rule 49 (valor -> BOOL .)
    MOD             reduce using rule 49 (valor -> BOOL .)
    NOT_EQUAL       reduce using rule 49 (valor -> BOOL .)
    LESS_THAN       reduce using rule 49 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 49 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 49 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 49 (valor -> BOOL .)
    $end            reduce using rule 49 (valor -> BOOL .)
    RBRACE          reduce using rule 49 (valor -> BOOL .)
    CASE            reduce using rule 49 (valor -> BOOL .)
    DEFAULT         reduce using rule 49 (valor -> BOOL .)
    COMMA           reduce using rule 49 (valor -> BOOL .)
    DOSPUNTOS       reduce using rule 49 (valor -> BOOL .)
    SEMICOLON       reduce using rule 49 (valor -> BOOL .)
    RPAREN          reduce using rule 49 (valor -> BOOL .)
    AND             reduce using rule 49 (valor -> BOOL .)
    OR              reduce using rule 49 (valor -> BOOL .)

  ! AND             [ reduce using rule 69 (condicion -> BOOL .) ]
  ! OR              [ reduce using rule 69 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 69 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 69 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 69 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 69 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 69 (condicion -> BOOL .) ]
  ! NOT_EQUAL       [ reduce using rule 69 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 69 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 69 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 69 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 69 (condicion -> BOOL .) ]
  ! $end            [ reduce using rule 69 (condicion -> BOOL .) ]
  ! RBRACE          [ reduce using rule 69 (condicion -> BOOL .) ]
  ! CASE            [ reduce using rule 69 (condicion -> BOOL .) ]
  ! DEFAULT         [ reduce using rule 69 (condicion -> BOOL .) ]
  ! COMMA           [ reduce using rule 69 (condicion -> BOOL .) ]
  ! DOSPUNTOS       [ reduce using rule 69 (condicion -> BOOL .) ]
  ! SEMICOLON       [ reduce using rule 69 (condicion -> BOOL .) ]
  ! RPAREN          [ reduce using rule 69 (condicion -> BOOL .) ]


state 47

    (50) valor -> STRING .

    PLUS            reduce using rule 50 (valor -> STRING .)
    MINUS           reduce using rule 50 (valor -> STRING .)
    TIMES           reduce using rule 50 (valor -> STRING .)
    DIVIDE          reduce using rule 50 (valor -> STRING .)
    MOD             reduce using rule 50 (valor -> STRING .)
    NOT_EQUAL       reduce using rule 50 (valor -> STRING .)
    LESS_THAN       reduce using rule 50 (valor -> STRING .)
    LESS_EQUAL      reduce using rule 50 (valor -> STRING .)
    GREATER_THAN    reduce using rule 50 (valor -> STRING .)
    GREATER_EQUAL   reduce using rule 50 (valor -> STRING .)
    $end            reduce using rule 50 (valor -> STRING .)
    RBRACE          reduce using rule 50 (valor -> STRING .)
    CASE            reduce using rule 50 (valor -> STRING .)
    DEFAULT         reduce using rule 50 (valor -> STRING .)
    COMMA           reduce using rule 50 (valor -> STRING .)
    DOSPUNTOS       reduce using rule 50 (valor -> STRING .)
    SEMICOLON       reduce using rule 50 (valor -> STRING .)
    RPAREN          reduce using rule 50 (valor -> STRING .)
    AND             reduce using rule 50 (valor -> STRING .)
    OR              reduce using rule 50 (valor -> STRING .)


state 48

    (51) valor -> expresionesAritmeticas .

    PLUS            reduce using rule 51 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 51 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 51 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 51 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 51 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 51 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 51 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 51 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 51 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 51 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 51 (valor -> expresionesAritmeticas .)
    RBRACE          reduce using rule 51 (valor -> expresionesAritmeticas .)
    CASE            reduce using rule 51 (valor -> expresionesAritmeticas .)
    DEFAULT         reduce using rule 51 (valor -> expresionesAritmeticas .)
    COMMA           reduce using rule 51 (valor -> expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 51 (valor -> expresionesAritmeticas .)
    SEMICOLON       reduce using rule 51 (valor -> expresionesAritmeticas .)
    RPAREN          reduce using rule 51 (valor -> expresionesAritmeticas .)
    AND             reduce using rule 51 (valor -> expresionesAritmeticas .)
    OR              reduce using rule 51 (valor -> expresionesAritmeticas .)


state 49

    (52) valor -> condiciones .

    PLUS            reduce using rule 52 (valor -> condiciones .)
    MINUS           reduce using rule 52 (valor -> condiciones .)
    TIMES           reduce using rule 52 (valor -> condiciones .)
    DIVIDE          reduce using rule 52 (valor -> condiciones .)
    MOD             reduce using rule 52 (valor -> condiciones .)
    NOT_EQUAL       reduce using rule 52 (valor -> condiciones .)
    LESS_THAN       reduce using rule 52 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 52 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 52 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 52 (valor -> condiciones .)
    $end            reduce using rule 52 (valor -> condiciones .)
    RBRACE          reduce using rule 52 (valor -> condiciones .)
    CASE            reduce using rule 52 (valor -> condiciones .)
    DEFAULT         reduce using rule 52 (valor -> condiciones .)
    COMMA           reduce using rule 52 (valor -> condiciones .)
    DOSPUNTOS       reduce using rule 52 (valor -> condiciones .)
    SEMICOLON       reduce using rule 52 (valor -> condiciones .)
    RPAREN          reduce using rule 52 (valor -> condiciones .)
    AND             reduce using rule 52 (valor -> condiciones .)
    OR              reduce using rule 52 (valor -> condiciones .)


state 50

    (54) valor -> estructurasDeDatos .

    PLUS            reduce using rule 54 (valor -> estructurasDeDatos .)
    MINUS           reduce using rule 54 (valor -> estructurasDeDatos .)
    TIMES           reduce using rule 54 (valor -> estructurasDeDatos .)
    DIVIDE          reduce using rule 54 (valor -> estructurasDeDatos .)
    MOD             reduce using rule 54 (valor -> estructurasDeDatos .)
    NOT_EQUAL       reduce using rule 54 (valor -> estructurasDeDatos .)
    LESS_THAN       reduce using rule 54 (valor -> estructurasDeDatos .)
    LESS_EQUAL      reduce using rule 54 (valor -> estructurasDeDatos .)
    GREATER_THAN    reduce using rule 54 (valor -> estructurasDeDatos .)
    GREATER_EQUAL   reduce using rule 54 (valor -> estructurasDeDatos .)
    $end            reduce using rule 54 (valor -> estructurasDeDatos .)
    RBRACE          reduce using rule 54 (valor -> estructurasDeDatos .)
    CASE            reduce using rule 54 (valor -> estructurasDeDatos .)
    DEFAULT         reduce using rule 54 (valor -> estructurasDeDatos .)
    COMMA           reduce using rule 54 (valor -> estructurasDeDatos .)
    DOSPUNTOS       reduce using rule 54 (valor -> estructurasDeDatos .)
    SEMICOLON       reduce using rule 54 (valor -> estructurasDeDatos .)
    RPAREN          reduce using rule 54 (valor -> estructurasDeDatos .)
    AND             reduce using rule 54 (valor -> estructurasDeDatos .)
    OR              reduce using rule 54 (valor -> estructurasDeDatos .)


state 51

    (55) expresionesAritmeticas -> expresionAritmetica .
    (56) expresionesAritmeticas -> expresionAritmetica . operador expresionesAritmeticas
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NOT_EQUAL       reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_THAN       reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    LESS_EQUAL      reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_THAN    reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    GREATER_EQUAL   reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    $end            reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    RBRACE          reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    CASE            reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    DEFAULT         reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    COMMA           reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    DOSPUNTOS       reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    SEMICOLON       reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    RPAREN          reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    AND             reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    OR              reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85

  ! PLUS            [ reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MINUS           [ reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! TIMES           [ reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! DIVIDE          [ reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .) ]
  ! MOD             [ reduce using rule 55 (expresionesAritmeticas -> expresionAritmetica .) ]

    operador                       shift and go to state 91

state 52

    (64) condiciones -> condicion .
    (65) condiciones -> condicion . conector condiciones
    (66) conector -> . AND
    (67) conector -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PLUS            reduce using rule 64 (condiciones -> condicion .)
    MINUS           reduce using rule 64 (condiciones -> condicion .)
    TIMES           reduce using rule 64 (condiciones -> condicion .)
    DIVIDE          reduce using rule 64 (condiciones -> condicion .)
    MOD             reduce using rule 64 (condiciones -> condicion .)
    NOT_EQUAL       reduce using rule 64 (condiciones -> condicion .)
    LESS_THAN       reduce using rule 64 (condiciones -> condicion .)
    LESS_EQUAL      reduce using rule 64 (condiciones -> condicion .)
    GREATER_THAN    reduce using rule 64 (condiciones -> condicion .)
    GREATER_EQUAL   reduce using rule 64 (condiciones -> condicion .)
    $end            reduce using rule 64 (condiciones -> condicion .)
    RBRACE          reduce using rule 64 (condiciones -> condicion .)
    CASE            reduce using rule 64 (condiciones -> condicion .)
    DEFAULT         reduce using rule 64 (condiciones -> condicion .)
    DOSPUNTOS       reduce using rule 64 (condiciones -> condicion .)
    COMMA           reduce using rule 64 (condiciones -> condicion .)
    SEMICOLON       reduce using rule 64 (condiciones -> condicion .)
    RPAREN          reduce using rule 64 (condiciones -> condicion .)
    AND             shift and go to state 93
    OR              shift and go to state 94

  ! AND             [ reduce using rule 64 (condiciones -> condicion .) ]
  ! OR              [ reduce using rule 64 (condiciones -> condicion .) ]

    conector                       shift and go to state 92

state 53

    (30) estructurasDeDatos -> mapa .

    PLUS            reduce using rule 30 (estructurasDeDatos -> mapa .)
    MINUS           reduce using rule 30 (estructurasDeDatos -> mapa .)
    TIMES           reduce using rule 30 (estructurasDeDatos -> mapa .)
    DIVIDE          reduce using rule 30 (estructurasDeDatos -> mapa .)
    MOD             reduce using rule 30 (estructurasDeDatos -> mapa .)
    NOT_EQUAL       reduce using rule 30 (estructurasDeDatos -> mapa .)
    LESS_THAN       reduce using rule 30 (estructurasDeDatos -> mapa .)
    LESS_EQUAL      reduce using rule 30 (estructurasDeDatos -> mapa .)
    GREATER_THAN    reduce using rule 30 (estructurasDeDatos -> mapa .)
    GREATER_EQUAL   reduce using rule 30 (estructurasDeDatos -> mapa .)
    $end            reduce using rule 30 (estructurasDeDatos -> mapa .)
    RBRACE          reduce using rule 30 (estructurasDeDatos -> mapa .)
    CASE            reduce using rule 30 (estructurasDeDatos -> mapa .)
    DEFAULT         reduce using rule 30 (estructurasDeDatos -> mapa .)
    COMMA           reduce using rule 30 (estructurasDeDatos -> mapa .)
    DOSPUNTOS       reduce using rule 30 (estructurasDeDatos -> mapa .)
    SEMICOLON       reduce using rule 30 (estructurasDeDatos -> mapa .)
    RPAREN          reduce using rule 30 (estructurasDeDatos -> mapa .)
    AND             reduce using rule 30 (estructurasDeDatos -> mapa .)
    OR              reduce using rule 30 (estructurasDeDatos -> mapa .)


state 54

    (58) expresionAritmetica -> LPAREN . valor operador valor RPAREN
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 95
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 55

    (31) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> MAP . LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LBRACKET        shift and go to state 96


state 56

    (18) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (25) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (26) casoDefault -> . empty
    (75) empty -> .

    DEFAULT         shift and go to state 61
    RBRACE          reduce using rule 75 (empty -> .)

    casoDefault                    shift and go to state 97
    empty                          shift and go to state 62

state 57

    (27) bloqueCasosSwitch -> casoSwitch .
    (28) bloqueCasosSwitch -> casoSwitch . bloqueCasosSwitch
    (27) bloqueCasosSwitch -> . casoSwitch
    (28) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (29) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    DEFAULT         reduce using rule 27 (bloqueCasosSwitch -> casoSwitch .)
    RBRACE          reduce using rule 27 (bloqueCasosSwitch -> casoSwitch .)
    CASE            shift and go to state 58

    casoSwitch                     shift and go to state 57
    bloqueCasosSwitch              shift and go to state 98

state 58

    (29) casoSwitch -> CASE . valores DOSPUNTOS subcodigo
    (44) valores -> . valor
    (45) valores -> . valor COMMA valores
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valores                        shift and go to state 99
    valor                          shift and go to state 100
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 59

    (38) asignacionCorta -> ID DOSPUNTOS EQUAL . valor
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 101
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 60

    (20) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault . RBRACE

    RBRACE          shift and go to state 102


state 61

    (25) casoDefault -> DEFAULT . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 103


state 62

    (26) casoDefault -> empty .

    RBRACE          reduce using rule 26 (casoDefault -> empty .)


state 63

    (22) bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .

    DEFAULT         reduce using rule 22 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)
    RBRACE          reduce using rule 22 (bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos .)


state 64

    (23) casoBooleano -> CASE condiciones . DOSPUNTOS subcodigo
    (52) valor -> condiciones .

    DOSPUNTOS       shift and go to state 104
    NOT_EQUAL       reduce using rule 52 (valor -> condiciones .)
    LESS_THAN       reduce using rule 52 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 52 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 52 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 52 (valor -> condiciones .)
    PLUS            reduce using rule 52 (valor -> condiciones .)
    MINUS           reduce using rule 52 (valor -> condiciones .)
    TIMES           reduce using rule 52 (valor -> condiciones .)
    DIVIDE          reduce using rule 52 (valor -> condiciones .)
    MOD             reduce using rule 52 (valor -> condiciones .)


state 65

    (24) casoBooleano -> CASE ID . DOSPUNTOS subcodigo
    (53) valor -> ID .

    DOSPUNTOS       shift and go to state 105
    NOT_EQUAL       reduce using rule 53 (valor -> ID .)
    LESS_THAN       reduce using rule 53 (valor -> ID .)
    LESS_EQUAL      reduce using rule 53 (valor -> ID .)
    GREATER_THAN    reduce using rule 53 (valor -> ID .)
    GREATER_EQUAL   reduce using rule 53 (valor -> ID .)
    PLUS            reduce using rule 53 (valor -> ID .)
    MINUS           reduce using rule 53 (valor -> ID .)
    TIMES           reduce using rule 53 (valor -> ID .)
    DIVIDE          reduce using rule 53 (valor -> ID .)
    MOD             reduce using rule 53 (valor -> ID .)


state 66

    (68) condicion -> valor . operadorComp valor
    (57) expresionAritmetica -> valor . operador valor
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD

    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85

    operadorComp                   shift and go to state 80
    operador                       shift and go to state 79

state 67

    (69) condicion -> BOOL .
    (49) valor -> BOOL .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (valor -> BOOL .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (valor -> BOOL .)
    AND             reduce using rule 69 (condicion -> BOOL .)
    OR              reduce using rule 69 (condicion -> BOOL .)
    DOSPUNTOS       reduce using rule 69 (condicion -> BOOL .)
    $end            reduce using rule 69 (condicion -> BOOL .)
    RBRACE          reduce using rule 69 (condicion -> BOOL .)
    CASE            reduce using rule 69 (condicion -> BOOL .)
    DEFAULT         reduce using rule 69 (condicion -> BOOL .)
    COMMA           reduce using rule 69 (condicion -> BOOL .)
    SEMICOLON       reduce using rule 69 (condicion -> BOOL .)
    RPAREN          reduce using rule 69 (condicion -> BOOL .)
    NOT_EQUAL       reduce using rule 49 (valor -> BOOL .)
    LESS_THAN       reduce using rule 49 (valor -> BOOL .)
    LESS_EQUAL      reduce using rule 49 (valor -> BOOL .)
    GREATER_THAN    reduce using rule 49 (valor -> BOOL .)
    GREATER_EQUAL   reduce using rule 49 (valor -> BOOL .)
    PLUS            reduce using rule 49 (valor -> BOOL .)
    MINUS           reduce using rule 49 (valor -> BOOL .)
    TIMES           reduce using rule 49 (valor -> BOOL .)
    DIVIDE          reduce using rule 49 (valor -> BOOL .)
    MOD             reduce using rule 49 (valor -> BOOL .)

  ! NOT_EQUAL       [ reduce using rule 69 (condicion -> BOOL .) ]
  ! LESS_THAN       [ reduce using rule 69 (condicion -> BOOL .) ]
  ! LESS_EQUAL      [ reduce using rule 69 (condicion -> BOOL .) ]
  ! GREATER_THAN    [ reduce using rule 69 (condicion -> BOOL .) ]
  ! GREATER_EQUAL   [ reduce using rule 69 (condicion -> BOOL .) ]
  ! PLUS            [ reduce using rule 69 (condicion -> BOOL .) ]
  ! MINUS           [ reduce using rule 69 (condicion -> BOOL .) ]
  ! TIMES           [ reduce using rule 69 (condicion -> BOOL .) ]
  ! DIVIDE          [ reduce using rule 69 (condicion -> BOOL .) ]
  ! MOD             [ reduce using rule 69 (condicion -> BOOL .) ]


state 68

    (19) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID . LBRACE bloqueCasosSwitch casoDefault RBRACE

    LBRACE          shift and go to state 106


state 69

    (7) funcion -> FUNC ID LPAREN argumentos . RPAREN LBRACE subcodigo RBRACE

    RPAREN          shift and go to state 107


state 70

    (14) funcionAnonima -> FUNC LPAREN RPAREN LBRACE . subcodigo RBRACE LPAREN RPAREN
    (16) subcodigo -> . asignacionCorta
    (17) subcodigo -> . asignacion
    (38) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (36) asignacion -> . VAR ID tipoDato EQUAL valor
    (37) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 111
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 108
    asignacionCorta                shift and go to state 109
    asignacion                     shift and go to state 110

state 71

    (15) funcionAnonima -> FUNC LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE LPAREN RPAREN

    LBRACE          shift and go to state 112


state 72

    (10) argumentos -> argumento COMMA .

    RPAREN          reduce using rule 10 (argumentos -> argumento COMMA .)


state 73

    (11) argumentos -> argumentoVariadico COMMA .

    RPAREN          reduce using rule 11 (argumentos -> argumentoVariadico COMMA .)


state 74

    (12) argumento -> ID tipoDato .

    COMMA           reduce using rule 12 (argumento -> ID tipoDato .)
    RPAREN          reduce using rule 12 (argumento -> ID tipoDato .)


state 75

    (13) argumentoVariadico -> ID PUNTO . PUNTO PUNTO tipoDato

    PUNTO           shift and go to state 113


state 76

    (76) imprimir -> FMT PUNTO PRINT_LN LPAREN . valores RPAREN
    (77) imprimir -> FMT PUNTO PRINT_LN LPAREN . RPAREN
    (44) valores -> . valor
    (45) valores -> . valor COMMA valores
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RPAREN          shift and go to state 115
    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valores                        shift and go to state 114
    valor                          shift and go to state 100
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 77

    (78) solicitudDatos -> FMT PUNTO SCANLN LPAREN . POINTER ID RPAREN

    POINTER         shift and go to state 116


state 78

    (36) asignacion -> VAR ID tipoDato EQUAL valor .
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

    $end            reduce using rule 36 (asignacion -> VAR ID tipoDato EQUAL valor .)
    RBRACE          reduce using rule 36 (asignacion -> VAR ID tipoDato EQUAL valor .)
    CASE            reduce using rule 36 (asignacion -> VAR ID tipoDato EQUAL valor .)
    DEFAULT         reduce using rule 36 (asignacion -> VAR ID tipoDato EQUAL valor .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 79

    (57) expresionAritmetica -> valor operador . valor
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 117
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 80

    (68) condicion -> valor operadorComp . valor
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 118
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 81

    (59) operador -> PLUS .

    FLOAT64         reduce using rule 59 (operador -> PLUS .)
    COMPLEX64       reduce using rule 59 (operador -> PLUS .)
    INT             reduce using rule 59 (operador -> PLUS .)
    BOOL            reduce using rule 59 (operador -> PLUS .)
    STRING          reduce using rule 59 (operador -> PLUS .)
    ID              reduce using rule 59 (operador -> PLUS .)
    LPAREN          reduce using rule 59 (operador -> PLUS .)
    MAP             reduce using rule 59 (operador -> PLUS .)


state 82

    (60) operador -> MINUS .

    FLOAT64         reduce using rule 60 (operador -> MINUS .)
    COMPLEX64       reduce using rule 60 (operador -> MINUS .)
    INT             reduce using rule 60 (operador -> MINUS .)
    BOOL            reduce using rule 60 (operador -> MINUS .)
    STRING          reduce using rule 60 (operador -> MINUS .)
    ID              reduce using rule 60 (operador -> MINUS .)
    LPAREN          reduce using rule 60 (operador -> MINUS .)
    MAP             reduce using rule 60 (operador -> MINUS .)


state 83

    (61) operador -> TIMES .

    FLOAT64         reduce using rule 61 (operador -> TIMES .)
    COMPLEX64       reduce using rule 61 (operador -> TIMES .)
    INT             reduce using rule 61 (operador -> TIMES .)
    BOOL            reduce using rule 61 (operador -> TIMES .)
    STRING          reduce using rule 61 (operador -> TIMES .)
    ID              reduce using rule 61 (operador -> TIMES .)
    LPAREN          reduce using rule 61 (operador -> TIMES .)
    MAP             reduce using rule 61 (operador -> TIMES .)


state 84

    (62) operador -> DIVIDE .

    FLOAT64         reduce using rule 62 (operador -> DIVIDE .)
    COMPLEX64       reduce using rule 62 (operador -> DIVIDE .)
    INT             reduce using rule 62 (operador -> DIVIDE .)
    BOOL            reduce using rule 62 (operador -> DIVIDE .)
    STRING          reduce using rule 62 (operador -> DIVIDE .)
    ID              reduce using rule 62 (operador -> DIVIDE .)
    LPAREN          reduce using rule 62 (operador -> DIVIDE .)
    MAP             reduce using rule 62 (operador -> DIVIDE .)


state 85

    (63) operador -> MOD .

    FLOAT64         reduce using rule 63 (operador -> MOD .)
    COMPLEX64       reduce using rule 63 (operador -> MOD .)
    INT             reduce using rule 63 (operador -> MOD .)
    BOOL            reduce using rule 63 (operador -> MOD .)
    STRING          reduce using rule 63 (operador -> MOD .)
    ID              reduce using rule 63 (operador -> MOD .)
    LPAREN          reduce using rule 63 (operador -> MOD .)
    MAP             reduce using rule 63 (operador -> MOD .)


state 86

    (70) operadorComp -> NOT_EQUAL .

    FLOAT64         reduce using rule 70 (operadorComp -> NOT_EQUAL .)
    COMPLEX64       reduce using rule 70 (operadorComp -> NOT_EQUAL .)
    INT             reduce using rule 70 (operadorComp -> NOT_EQUAL .)
    BOOL            reduce using rule 70 (operadorComp -> NOT_EQUAL .)
    STRING          reduce using rule 70 (operadorComp -> NOT_EQUAL .)
    ID              reduce using rule 70 (operadorComp -> NOT_EQUAL .)
    LPAREN          reduce using rule 70 (operadorComp -> NOT_EQUAL .)
    MAP             reduce using rule 70 (operadorComp -> NOT_EQUAL .)


state 87

    (71) operadorComp -> LESS_THAN .

    FLOAT64         reduce using rule 71 (operadorComp -> LESS_THAN .)
    COMPLEX64       reduce using rule 71 (operadorComp -> LESS_THAN .)
    INT             reduce using rule 71 (operadorComp -> LESS_THAN .)
    BOOL            reduce using rule 71 (operadorComp -> LESS_THAN .)
    STRING          reduce using rule 71 (operadorComp -> LESS_THAN .)
    ID              reduce using rule 71 (operadorComp -> LESS_THAN .)
    LPAREN          reduce using rule 71 (operadorComp -> LESS_THAN .)
    MAP             reduce using rule 71 (operadorComp -> LESS_THAN .)


state 88

    (72) operadorComp -> LESS_EQUAL .

    FLOAT64         reduce using rule 72 (operadorComp -> LESS_EQUAL .)
    COMPLEX64       reduce using rule 72 (operadorComp -> LESS_EQUAL .)
    INT             reduce using rule 72 (operadorComp -> LESS_EQUAL .)
    BOOL            reduce using rule 72 (operadorComp -> LESS_EQUAL .)
    STRING          reduce using rule 72 (operadorComp -> LESS_EQUAL .)
    ID              reduce using rule 72 (operadorComp -> LESS_EQUAL .)
    LPAREN          reduce using rule 72 (operadorComp -> LESS_EQUAL .)
    MAP             reduce using rule 72 (operadorComp -> LESS_EQUAL .)


state 89

    (73) operadorComp -> GREATER_THAN .

    FLOAT64         reduce using rule 73 (operadorComp -> GREATER_THAN .)
    COMPLEX64       reduce using rule 73 (operadorComp -> GREATER_THAN .)
    INT             reduce using rule 73 (operadorComp -> GREATER_THAN .)
    BOOL            reduce using rule 73 (operadorComp -> GREATER_THAN .)
    STRING          reduce using rule 73 (operadorComp -> GREATER_THAN .)
    ID              reduce using rule 73 (operadorComp -> GREATER_THAN .)
    LPAREN          reduce using rule 73 (operadorComp -> GREATER_THAN .)
    MAP             reduce using rule 73 (operadorComp -> GREATER_THAN .)


state 90

    (74) operadorComp -> GREATER_EQUAL .

    FLOAT64         reduce using rule 74 (operadorComp -> GREATER_EQUAL .)
    COMPLEX64       reduce using rule 74 (operadorComp -> GREATER_EQUAL .)
    INT             reduce using rule 74 (operadorComp -> GREATER_EQUAL .)
    BOOL            reduce using rule 74 (operadorComp -> GREATER_EQUAL .)
    STRING          reduce using rule 74 (operadorComp -> GREATER_EQUAL .)
    ID              reduce using rule 74 (operadorComp -> GREATER_EQUAL .)
    LPAREN          reduce using rule 74 (operadorComp -> GREATER_EQUAL .)
    MAP             reduce using rule 74 (operadorComp -> GREATER_EQUAL .)


state 91

    (56) expresionesAritmeticas -> expresionAritmetica operador . expresionesAritmeticas
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    LPAREN          shift and go to state 54
    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    MAP             shift and go to state 55

    expresionAritmetica            shift and go to state 51
    expresionesAritmeticas         shift and go to state 119
    valor                          shift and go to state 120
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 92

    (65) condiciones -> condicion conector . condiciones
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    BOOL            shift and go to state 67
    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    condicion                      shift and go to state 52
    condiciones                    shift and go to state 121
    valor                          shift and go to state 66
    expresionesAritmeticas         shift and go to state 48
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    mapa                           shift and go to state 53

state 93

    (66) conector -> AND .

    BOOL            reduce using rule 66 (conector -> AND .)
    FLOAT64         reduce using rule 66 (conector -> AND .)
    COMPLEX64       reduce using rule 66 (conector -> AND .)
    INT             reduce using rule 66 (conector -> AND .)
    STRING          reduce using rule 66 (conector -> AND .)
    ID              reduce using rule 66 (conector -> AND .)
    LPAREN          reduce using rule 66 (conector -> AND .)
    MAP             reduce using rule 66 (conector -> AND .)


state 94

    (67) conector -> OR .

    BOOL            reduce using rule 67 (conector -> OR .)
    FLOAT64         reduce using rule 67 (conector -> OR .)
    COMPLEX64       reduce using rule 67 (conector -> OR .)
    INT             reduce using rule 67 (conector -> OR .)
    STRING          reduce using rule 67 (conector -> OR .)
    ID              reduce using rule 67 (conector -> OR .)
    LPAREN          reduce using rule 67 (conector -> OR .)
    MAP             reduce using rule 67 (conector -> OR .)


state 95

    (58) expresionAritmetica -> LPAREN valor . operador valor RPAREN
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

    operador                       shift and go to state 122
    operadorComp                   shift and go to state 80

state 96

    (31) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> MAP LBRACKET . tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE
    (39) tipoDato -> . FLOAT64_TYPE
    (40) tipoDato -> . COMPLEX64_TYPE
    (41) tipoDato -> . INT_TYPE
    (42) tipoDato -> . BOOL_TYPE
    (43) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 123

state 97

    (18) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 124


state 98

    (28) bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .

    DEFAULT         reduce using rule 28 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)
    RBRACE          reduce using rule 28 (bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch .)


state 99

    (29) casoSwitch -> CASE valores . DOSPUNTOS subcodigo

    DOSPUNTOS       shift and go to state 125


state 100

    (44) valores -> valor .
    (45) valores -> valor . COMMA valores
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

    DOSPUNTOS       reduce using rule 44 (valores -> valor .)
    RPAREN          reduce using rule 44 (valores -> valor .)
    COMMA           shift and go to state 126
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 101

    (38) asignacionCorta -> ID DOSPUNTOS EQUAL valor .
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

    SEMICOLON       reduce using rule 38 (asignacionCorta -> ID DOSPUNTOS EQUAL valor .)
    RBRACE          reduce using rule 38 (asignacionCorta -> ID DOSPUNTOS EQUAL valor .)
    CASE            reduce using rule 38 (asignacionCorta -> ID DOSPUNTOS EQUAL valor .)
    DEFAULT         reduce using rule 38 (asignacionCorta -> ID DOSPUNTOS EQUAL valor .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 102

    (20) sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .

    $end            reduce using rule 20 (sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE .)


state 103

    (25) casoDefault -> DEFAULT DOSPUNTOS . subcodigo
    (16) subcodigo -> . asignacionCorta
    (17) subcodigo -> . asignacion
    (38) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (36) asignacion -> . VAR ID tipoDato EQUAL valor
    (37) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 111
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 127
    asignacionCorta                shift and go to state 109
    asignacion                     shift and go to state 110

state 104

    (23) casoBooleano -> CASE condiciones DOSPUNTOS . subcodigo
    (16) subcodigo -> . asignacionCorta
    (17) subcodigo -> . asignacion
    (38) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (36) asignacion -> . VAR ID tipoDato EQUAL valor
    (37) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 111
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 128
    asignacionCorta                shift and go to state 109
    asignacion                     shift and go to state 110

state 105

    (24) casoBooleano -> CASE ID DOSPUNTOS . subcodigo
    (16) subcodigo -> . asignacionCorta
    (17) subcodigo -> . asignacion
    (38) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (36) asignacion -> . VAR ID tipoDato EQUAL valor
    (37) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 111
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 129
    asignacionCorta                shift and go to state 109
    asignacion                     shift and go to state 110

state 106

    (19) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE . bloqueCasosSwitch casoDefault RBRACE
    (27) bloqueCasosSwitch -> . casoSwitch
    (28) bloqueCasosSwitch -> . casoSwitch bloqueCasosSwitch
    (29) casoSwitch -> . CASE valores DOSPUNTOS subcodigo

    CASE            shift and go to state 58

    bloqueCasosSwitch              shift and go to state 130
    casoSwitch                     shift and go to state 57

state 107

    (7) funcion -> FUNC ID LPAREN argumentos RPAREN . LBRACE subcodigo RBRACE

    LBRACE          shift and go to state 131


state 108

    (14) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo . RBRACE LPAREN RPAREN

    RBRACE          shift and go to state 132


state 109

    (16) subcodigo -> asignacionCorta .

    RBRACE          reduce using rule 16 (subcodigo -> asignacionCorta .)
    CASE            reduce using rule 16 (subcodigo -> asignacionCorta .)
    DEFAULT         reduce using rule 16 (subcodigo -> asignacionCorta .)


state 110

    (17) subcodigo -> asignacion .

    RBRACE          reduce using rule 17 (subcodigo -> asignacion .)
    CASE            reduce using rule 17 (subcodigo -> asignacion .)
    DEFAULT         reduce using rule 17 (subcodigo -> asignacion .)


state 111

    (38) asignacionCorta -> ID . DOSPUNTOS EQUAL valor

    DOSPUNTOS       shift and go to state 27


state 112

    (15) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE LPAREN RPAREN
    (16) subcodigo -> . asignacionCorta
    (17) subcodigo -> . asignacion
    (38) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (36) asignacion -> . VAR ID tipoDato EQUAL valor
    (37) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 111
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 133
    asignacionCorta                shift and go to state 109
    asignacion                     shift and go to state 110

state 113

    (13) argumentoVariadico -> ID PUNTO PUNTO . PUNTO tipoDato

    PUNTO           shift and go to state 134


state 114

    (76) imprimir -> FMT PUNTO PRINT_LN LPAREN valores . RPAREN

    RPAREN          shift and go to state 135


state 115

    (77) imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .

    $end            reduce using rule 77 (imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN .)


state 116

    (78) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER . ID RPAREN

    ID              shift and go to state 136


state 117

    (57) expresionAritmetica -> valor operador valor .
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    $end            reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    RBRACE          reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    CASE            reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    DEFAULT         reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    COMMA           reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    DOSPUNTOS       reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    SEMICOLON       reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    RPAREN          reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    AND             reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    OR              reduce using rule 57 (expresionAritmetica -> valor operador valor .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

  ! PLUS            [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 118

    (68) condicion -> valor operadorComp valor .
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    AND             reduce using rule 68 (condicion -> valor operadorComp valor .)
    OR              reduce using rule 68 (condicion -> valor operadorComp valor .)
    $end            reduce using rule 68 (condicion -> valor operadorComp valor .)
    RBRACE          reduce using rule 68 (condicion -> valor operadorComp valor .)
    CASE            reduce using rule 68 (condicion -> valor operadorComp valor .)
    DEFAULT         reduce using rule 68 (condicion -> valor operadorComp valor .)
    DOSPUNTOS       reduce using rule 68 (condicion -> valor operadorComp valor .)
    COMMA           reduce using rule 68 (condicion -> valor operadorComp valor .)
    SEMICOLON       reduce using rule 68 (condicion -> valor operadorComp valor .)
    RPAREN          reduce using rule 68 (condicion -> valor operadorComp valor .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

  ! PLUS            [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! MINUS           [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! TIMES           [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! DIVIDE          [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! MOD             [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! NOT_EQUAL       [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! LESS_THAN       [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! LESS_EQUAL      [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! GREATER_THAN    [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 68 (condicion -> valor operadorComp valor .) ]

    operadorComp                   shift and go to state 80
    operador                       shift and go to state 79

state 119

    (56) expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .
    (51) valor -> expresionesAritmeticas .

  ! reduce/reduce conflict for PLUS resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MINUS resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for TIMES resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for MOD resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 51 (valor -> expresionesAritmeticas .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 51 (valor -> expresionesAritmeticas .)
    $end            reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RBRACE          reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    CASE            reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DEFAULT         reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    COMMA           reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    DOSPUNTOS       reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    SEMICOLON       reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    RPAREN          reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    AND             reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    OR              reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .)
    PLUS            reduce using rule 51 (valor -> expresionesAritmeticas .)
    MINUS           reduce using rule 51 (valor -> expresionesAritmeticas .)
    TIMES           reduce using rule 51 (valor -> expresionesAritmeticas .)
    DIVIDE          reduce using rule 51 (valor -> expresionesAritmeticas .)
    MOD             reduce using rule 51 (valor -> expresionesAritmeticas .)
    NOT_EQUAL       reduce using rule 51 (valor -> expresionesAritmeticas .)
    LESS_THAN       reduce using rule 51 (valor -> expresionesAritmeticas .)
    LESS_EQUAL      reduce using rule 51 (valor -> expresionesAritmeticas .)
    GREATER_THAN    reduce using rule 51 (valor -> expresionesAritmeticas .)
    GREATER_EQUAL   reduce using rule 51 (valor -> expresionesAritmeticas .)

  ! PLUS            [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MINUS           [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! TIMES           [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! DIVIDE          [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! MOD             [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! NOT_EQUAL       [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_THAN       [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! LESS_EQUAL      [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_THAN    [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]
  ! GREATER_EQUAL   [ reduce using rule 56 (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas .) ]


state 120

    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 121

    (65) condiciones -> condicion conector condiciones .
    (52) valor -> condiciones .

  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for PLUS resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for MINUS resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for TIMES resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 52 (valor -> condiciones .)
  ! reduce/reduce conflict for MOD resolved using rule 52 (valor -> condiciones .)
    $end            reduce using rule 65 (condiciones -> condicion conector condiciones .)
    RBRACE          reduce using rule 65 (condiciones -> condicion conector condiciones .)
    CASE            reduce using rule 65 (condiciones -> condicion conector condiciones .)
    DEFAULT         reduce using rule 65 (condiciones -> condicion conector condiciones .)
    DOSPUNTOS       reduce using rule 65 (condiciones -> condicion conector condiciones .)
    COMMA           reduce using rule 65 (condiciones -> condicion conector condiciones .)
    SEMICOLON       reduce using rule 65 (condiciones -> condicion conector condiciones .)
    RPAREN          reduce using rule 65 (condiciones -> condicion conector condiciones .)
    AND             reduce using rule 65 (condiciones -> condicion conector condiciones .)
    OR              reduce using rule 65 (condiciones -> condicion conector condiciones .)
    NOT_EQUAL       reduce using rule 52 (valor -> condiciones .)
    LESS_THAN       reduce using rule 52 (valor -> condiciones .)
    LESS_EQUAL      reduce using rule 52 (valor -> condiciones .)
    GREATER_THAN    reduce using rule 52 (valor -> condiciones .)
    GREATER_EQUAL   reduce using rule 52 (valor -> condiciones .)
    PLUS            reduce using rule 52 (valor -> condiciones .)
    MINUS           reduce using rule 52 (valor -> condiciones .)
    TIMES           reduce using rule 52 (valor -> condiciones .)
    DIVIDE          reduce using rule 52 (valor -> condiciones .)
    MOD             reduce using rule 52 (valor -> condiciones .)

  ! PLUS            [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! MINUS           [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! TIMES           [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! DIVIDE          [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! MOD             [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! NOT_EQUAL       [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! LESS_THAN       [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! LESS_EQUAL      [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_THAN    [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]
  ! GREATER_EQUAL   [ reduce using rule 65 (condiciones -> condicion conector condiciones .) ]


state 122

    (58) expresionAritmetica -> LPAREN valor operador . valor RPAREN
    (57) expresionAritmetica -> valor operador . valor
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 137
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 123

    (31) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> MAP LBRACKET tipoDato . RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACKET        shift and go to state 138


state 124

    (18) sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 18 (sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 125

    (29) casoSwitch -> CASE valores DOSPUNTOS . subcodigo
    (16) subcodigo -> . asignacionCorta
    (17) subcodigo -> . asignacion
    (38) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (36) asignacion -> . VAR ID tipoDato EQUAL valor
    (37) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 111
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 139
    asignacionCorta                shift and go to state 109
    asignacion                     shift and go to state 110

state 126

    (45) valores -> valor COMMA . valores
    (44) valores -> . valor
    (45) valores -> . valor COMMA valores
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 100
    valores                        shift and go to state 140
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 127

    (25) casoDefault -> DEFAULT DOSPUNTOS subcodigo .

    RBRACE          reduce using rule 25 (casoDefault -> DEFAULT DOSPUNTOS subcodigo .)


state 128

    (23) casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .

    CASE            reduce using rule 23 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 23 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 23 (casoBooleano -> CASE condiciones DOSPUNTOS subcodigo .)


state 129

    (24) casoBooleano -> CASE ID DOSPUNTOS subcodigo .

    CASE            reduce using rule 24 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 24 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 24 (casoBooleano -> CASE ID DOSPUNTOS subcodigo .)


state 130

    (19) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch . casoDefault RBRACE
    (25) casoDefault -> . DEFAULT DOSPUNTOS subcodigo
    (26) casoDefault -> . empty
    (75) empty -> .

    DEFAULT         shift and go to state 61
    RBRACE          reduce using rule 75 (empty -> .)

    casoDefault                    shift and go to state 141
    empty                          shift and go to state 62

state 131

    (7) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE . subcodigo RBRACE
    (16) subcodigo -> . asignacionCorta
    (17) subcodigo -> . asignacion
    (38) asignacionCorta -> . ID DOSPUNTOS EQUAL valor
    (36) asignacion -> . VAR ID tipoDato EQUAL valor
    (37) asignacion -> . VAR ID EQUAL valor

    ID              shift and go to state 111
    VAR             shift and go to state 8

    subcodigo                      shift and go to state 142
    asignacionCorta                shift and go to state 109
    asignacion                     shift and go to state 110

state 132

    (14) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE . LPAREN RPAREN

    LPAREN          shift and go to state 143


state 133

    (15) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE LPAREN RPAREN

    RBRACE          shift and go to state 144


state 134

    (13) argumentoVariadico -> ID PUNTO PUNTO PUNTO . tipoDato
    (39) tipoDato -> . FLOAT64_TYPE
    (40) tipoDato -> . COMPLEX64_TYPE
    (41) tipoDato -> . INT_TYPE
    (42) tipoDato -> . BOOL_TYPE
    (43) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 145

state 135

    (76) imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .

    $end            reduce using rule 76 (imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN .)


state 136

    (78) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID . RPAREN

    RPAREN          shift and go to state 146


state 137

    (58) expresionAritmetica -> LPAREN valor operador valor . RPAREN
    (57) expresionAritmetica -> valor operador valor .
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
    RPAREN          shift and go to state 147
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

  ! PLUS            [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! MINUS           [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! TIMES           [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! DIVIDE          [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! MOD             [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! NOT_EQUAL       [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_THAN       [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! LESS_EQUAL      [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_THAN    [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]
  ! GREATER_EQUAL   [ reduce using rule 57 (expresionAritmetica -> valor operador valor .) ]

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 138

    (31) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE RBRACE
    (32) mapa -> MAP LBRACKET tipoDato RBRACKET . tipoDato LBRACE elementosMapa RBRACE
    (39) tipoDato -> . FLOAT64_TYPE
    (40) tipoDato -> . COMPLEX64_TYPE
    (41) tipoDato -> . INT_TYPE
    (42) tipoDato -> . BOOL_TYPE
    (43) tipoDato -> . STRING_TYPE

    FLOAT64_TYPE    shift and go to state 21
    COMPLEX64_TYPE  shift and go to state 22
    INT_TYPE        shift and go to state 23
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25

    tipoDato                       shift and go to state 148

state 139

    (29) casoSwitch -> CASE valores DOSPUNTOS subcodigo .

    CASE            reduce using rule 29 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    DEFAULT         reduce using rule 29 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)
    RBRACE          reduce using rule 29 (casoSwitch -> CASE valores DOSPUNTOS subcodigo .)


state 140

    (45) valores -> valor COMMA valores .

    DOSPUNTOS       reduce using rule 45 (valores -> valor COMMA valores .)
    RPAREN          reduce using rule 45 (valores -> valor COMMA valores .)


state 141

    (19) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault . RBRACE

    RBRACE          shift and go to state 149


state 142

    (7) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo . RBRACE

    RBRACE          shift and go to state 150


state 143

    (14) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN . RPAREN

    RPAREN          shift and go to state 151


state 144

    (15) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE . LPAREN RPAREN

    LPAREN          shift and go to state 152


state 145

    (13) argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .

    COMMA           reduce using rule 13 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)
    RPAREN          reduce using rule 13 (argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato .)


state 146

    (78) solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .

    $end            reduce using rule 78 (solicitudDatos -> FMT PUNTO SCANLN LPAREN POINTER ID RPAREN .)


state 147

    (58) expresionAritmetica -> LPAREN valor operador valor RPAREN .

    PLUS            reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MINUS           reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    TIMES           reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DIVIDE          reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    MOD             reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    NOT_EQUAL       reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_THAN       reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    LESS_EQUAL      reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_THAN    reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    GREATER_EQUAL   reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    $end            reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RBRACE          reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    CASE            reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DEFAULT         reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    COMMA           reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    DOSPUNTOS       reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    SEMICOLON       reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    RPAREN          reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    AND             reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)
    OR              reduce using rule 58 (expresionAritmetica -> LPAREN valor operador valor RPAREN .)


state 148

    (31) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE RBRACE
    (32) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato . LBRACE elementosMapa RBRACE

    LBRACE          shift and go to state 153


state 149

    (19) sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .

    $end            reduce using rule 19 (sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE .)


state 150

    (7) funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .

    $end            reduce using rule 7 (funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE .)


state 151

    (14) funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .

    $end            reduce using rule 14 (funcionAnonima -> FUNC LPAREN RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .)


state 152

    (15) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN . RPAREN

    RPAREN          shift and go to state 154


state 153

    (31) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . RBRACE
    (32) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE . elementosMapa RBRACE
    (33) elementosMapa -> . elementoMapa
    (34) elementosMapa -> . elementoMapa elementosMapa
    (35) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACE          shift and go to state 155
    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    elementosMapa                  shift and go to state 156
    elementoMapa                   shift and go to state 157
    valor                          shift and go to state 158
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 154

    (15) funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .

    $end            reduce using rule 15 (funcionAnonima -> FUNC LPAREN argumentos RPAREN LBRACE subcodigo RBRACE LPAREN RPAREN .)


state 155

    (31) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .

    PLUS            reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MINUS           reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    TIMES           reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DIVIDE          reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    MOD             reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_THAN       reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    $end            reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RBRACE          reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    CASE            reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DEFAULT         reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    COMMA           reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    DOSPUNTOS       reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    SEMICOLON       reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    RPAREN          reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    AND             reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)
    OR              reduce using rule 31 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE .)


state 156

    (32) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa . RBRACE

    RBRACE          shift and go to state 159


state 157

    (33) elementosMapa -> elementoMapa .
    (34) elementosMapa -> elementoMapa . elementosMapa
    (33) elementosMapa -> . elementoMapa
    (34) elementosMapa -> . elementoMapa elementosMapa
    (35) elementoMapa -> . valor DOSPUNTOS valor COMMA
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    RBRACE          reduce using rule 33 (elementosMapa -> elementoMapa .)
    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    elementoMapa                   shift and go to state 157
    elementosMapa                  shift and go to state 160
    valor                          shift and go to state 158
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 158

    (35) elementoMapa -> valor . DOSPUNTOS valor COMMA
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

    DOSPUNTOS       shift and go to state 161
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 159

    (32) mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .

    PLUS            reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MINUS           reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    TIMES           reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DIVIDE          reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    MOD             reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    NOT_EQUAL       reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_THAN       reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    LESS_EQUAL      reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_THAN    reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    GREATER_EQUAL   reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    $end            reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RBRACE          reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    CASE            reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DEFAULT         reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    COMMA           reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    DOSPUNTOS       reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    SEMICOLON       reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    RPAREN          reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    AND             reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)
    OR              reduce using rule 32 (mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE .)


state 160

    (34) elementosMapa -> elementoMapa elementosMapa .

    RBRACE          reduce using rule 34 (elementosMapa -> elementoMapa elementosMapa .)


state 161

    (35) elementoMapa -> valor DOSPUNTOS . valor COMMA
    (46) valor -> . FLOAT64
    (47) valor -> . COMPLEX64
    (48) valor -> . INT
    (49) valor -> . BOOL
    (50) valor -> . STRING
    (51) valor -> . expresionesAritmeticas
    (52) valor -> . condiciones
    (53) valor -> . ID
    (54) valor -> . estructurasDeDatos
    (55) expresionesAritmeticas -> . expresionAritmetica
    (56) expresionesAritmeticas -> . expresionAritmetica operador expresionesAritmeticas
    (64) condiciones -> . condicion
    (65) condiciones -> . condicion conector condiciones
    (30) estructurasDeDatos -> . mapa
    (57) expresionAritmetica -> . valor operador valor
    (58) expresionAritmetica -> . LPAREN valor operador valor RPAREN
    (68) condicion -> . valor operadorComp valor
    (69) condicion -> . BOOL
    (31) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE
    (32) mapa -> . MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE

    FLOAT64         shift and go to state 43
    COMPLEX64       shift and go to state 44
    INT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    ID              shift and go to state 41
    LPAREN          shift and go to state 54
    MAP             shift and go to state 55

    valor                          shift and go to state 162
    expresionesAritmeticas         shift and go to state 48
    condiciones                    shift and go to state 49
    estructurasDeDatos             shift and go to state 50
    expresionAritmetica            shift and go to state 51
    condicion                      shift and go to state 52
    mapa                           shift and go to state 53

state 162

    (35) elementoMapa -> valor DOSPUNTOS valor . COMMA
    (57) expresionAritmetica -> valor . operador valor
    (68) condicion -> valor . operadorComp valor
    (59) operador -> . PLUS
    (60) operador -> . MINUS
    (61) operador -> . TIMES
    (62) operador -> . DIVIDE
    (63) operador -> . MOD
    (70) operadorComp -> . NOT_EQUAL
    (71) operadorComp -> . LESS_THAN
    (72) operadorComp -> . LESS_EQUAL
    (73) operadorComp -> . GREATER_THAN
    (74) operadorComp -> . GREATER_EQUAL

    COMMA           shift and go to state 163
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    MOD             shift and go to state 85
    NOT_EQUAL       shift and go to state 86
    LESS_THAN       shift and go to state 87
    LESS_EQUAL      shift and go to state 88
    GREATER_THAN    shift and go to state 89
    GREATER_EQUAL   shift and go to state 90

    operador                       shift and go to state 79
    operadorComp                   shift and go to state 80

state 163

    (35) elementoMapa -> valor DOSPUNTOS valor COMMA .

    FLOAT64         reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    COMPLEX64       reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    INT             reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    BOOL            reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    STRING          reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    ID              reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    LPAREN          reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    MAP             reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)
    RBRACE          reduce using rule 35 (elementoMapa -> valor DOSPUNTOS valor COMMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for MOD in state 51 resolved as shift
WARNING: shift/reduce conflict for AND in state 52 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 117 resolved as shift
WARNING: shift/reduce conflict for MOD in state 117 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 117 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 117 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 118 resolved as shift
WARNING: shift/reduce conflict for MOD in state 118 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 118 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 118 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 137 resolved as shift
WARNING: shift/reduce conflict for MOD in state 137 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 137 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 137 resolved as shift
WARNING: reduce/reduce conflict in state 46 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 46
WARNING: reduce/reduce conflict in state 67 resolved using rule (valor -> BOOL)
WARNING: rejected rule (condicion -> BOOL) in state 67
WARNING: reduce/reduce conflict in state 119 resolved using rule (valor -> expresionesAritmeticas)
WARNING: rejected rule (expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas) in state 119
WARNING: reduce/reduce conflict in state 121 resolved using rule (valor -> condiciones)
WARNING: rejected rule (condiciones -> condicion conector condiciones) in state 121
