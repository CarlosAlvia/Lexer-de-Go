
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL BOOL_TYPE BREAK CASE CHAN COMMA COMMENT COMPLEX64 COMPLEX64_TYPE CONST CONTINUE DEFAULT DEFER DIVIDE DOSPUNTOS ELSE EQUAL FALLTHROUGH FLOAT64 FLOAT64_TYPE FMT FOR FUNC GO GOTO GREATER_EQUAL GREATER_THAN ID IF ILLEGAL IMPORT INT INTERFACE INT_TYPE LBRACE LBRACKET LESS_EQUAL LESS_THAN LPAREN MAP MINUS MOD NOT NOT_EQUAL OR PACKAGE PLUS PRINT_LN PUNTO RANGE RBRACE RBRACKET RETURN RPAREN SELECT SEMICOLON STRING STRING_TYPE STRUCT SWITCH TIMES TYPE VARcodigo : asignacion\n              | sentenciaSwitch\n              | funcion\n              | imprimir\n              | funcionSinArgfuncion : FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACEargumentos : argumento\n                  | argumentoVariadico\n                  | argumento COMMA\n                  | argumentoVariadico COMMAargumento : ID tipoDato argumentoVariadico : ID PUNTO PUNTO PUNTO tipoDato funcionSinArg : FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACEsubcodigo : asignacionCorta\n                  | asignacionsentenciaSwitch : SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACEsentenciaSwitch : SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACEsentenciaSwitch : SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACEbloqueCasosBooleanos : casoBooleano\n                            | casoBooleano bloqueCasosBooleanoscasoBooleano : CASE condiciones DOSPUNTOS subcodigo\n                      | CASE ID DOSPUNTOS subcodigocasoDefault : DEFAULT DOSPUNTOS subcodigo\n                   | emptybloqueCasosSwitch : casoSwitch\n                         | casoSwitch bloqueCasosSwitchcasoSwitch : CASE valores DOSPUNTOS subcodigoestructurasDeDatos : mapamapa : MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACEmapa : MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACEelementosMapa : elementoMapa\n                     | elementoMapa elementosMapaelementoMapa : valor DOSPUNTOS valor COMMAasignacion : VAR ID tipoDato ASSIGN valorasignacion : VAR ID ASSIGN valorasignacionCorta : ID DOSPUNTOS ASSIGN valortipoDato : FLOAT64_TYPE\n                  | COMPLEX64_TYPE\n                  | INT_TYPE\n                  | BOOL_TYPE\n                  | STRING_TYPEvalores : valor\n               | valor COMMA valoresvalor : FLOAT64\n             | COMPLEX64\n             | INT\n             | BOOL\n             | STRING\n             | expresionesAritmeticas\n             | condiciones\n             | ID\n             | estructurasDeDatosexpresionesAritmeticas : expresionAritmetica\n                              | expresionAritmetica operador expresionesAritmeticasexpresionAritmetica : valor operador valor\n                             | LPAREN valor operador valor RPARENoperador : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MODcondiciones : condicion\n                   | condicion conector condicionesconector : AND\n                | ORcondicion : valor operadorComp valor\n                 | BOOLoperadorComp : NOT_EQUAL\n                    | LESS_THAN\n                    | LESS_EQUAL\n                    | GREATER_THAN\n                    | GREATER_EQUALempty :imprimir : FMT PUNTO PRINT_LN LPAREN valores RPAREN\n                | FMT PUNTO PRINT_LN LPAREN RPAREN'
    
_lr_action_items = {'VAR':([0,92,93,94,99,112,122,],[7,7,7,7,7,7,7,]),'SWITCH':([0,],[8,]),'FUNC':([0,],[9,]),'FMT':([0,],[10,]),'$end':([1,2,3,4,5,6,33,34,35,36,37,38,39,40,41,42,43,44,45,59,67,91,103,104,105,106,108,111,124,132,133,135,137,139,143,],[0,-1,-2,-3,-4,-5,-51,-35,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-67,-34,-18,-75,-55,-66,-54,-63,-16,-74,-13,-56,-17,-6,-29,-30,]),'ID':([7,8,9,18,28,29,30,32,46,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,93,94,99,109,112,113,122,138,141,145,147,],[11,12,15,33,57,60,61,33,33,33,33,33,33,33,-57,-58,-59,-60,-61,-68,-69,-70,-71,-72,33,33,-64,-65,117,117,117,117,33,117,33,117,33,33,33,-33,]),'LBRACE':([8,12,19,20,21,22,23,60,63,98,134,],[13,24,-37,-38,-39,-40,-41,95,99,122,138,]),'PUNTO':([10,61,97,121,],[16,97,121,130,]),'ASSIGN':([11,17,19,20,21,22,23,25,],[18,32,-37,-38,-39,-40,-41,51,]),'FLOAT64_TYPE':([11,61,85,126,130,],[19,19,19,19,19,]),'COMPLEX64_TYPE':([11,61,85,126,130,],[20,20,20,20,20,]),'INT_TYPE':([11,61,85,126,130,],[21,21,21,21,21,]),'BOOL_TYPE':([11,61,85,126,130,],[22,22,22,22,22,]),'STRING_TYPE':([11,61,85,126,130,],[23,23,23,23,23,]),'DOSPUNTOS':([12,33,35,36,37,38,39,40,41,42,43,44,45,53,56,57,59,88,89,104,105,106,108,117,128,133,139,142,143,],[25,-51,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,92,93,94,-67,112,-42,-55,-66,-54,-63,25,-43,-56,-29,145,-30,]),'CASE':([13,24,27,33,34,35,36,37,38,39,40,41,42,43,44,45,49,59,67,90,95,104,105,106,108,115,116,118,119,127,133,139,143,],[28,50,28,-51,-35,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,50,-67,-34,-36,50,-55,-66,-54,-63,-14,-15,-21,-22,-27,-56,-29,-30,]),'SEMICOLON':([14,33,35,36,37,38,39,40,41,42,43,44,45,59,90,104,105,106,108,133,139,143,],[29,-51,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-67,-36,-55,-66,-54,-63,-56,-29,-30,]),'LPAREN':([15,18,28,31,32,46,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,109,113,138,141,145,147,],[30,46,46,66,46,46,46,46,46,46,46,-57,-58,-59,-60,-61,-68,-69,-70,-71,-72,46,46,-64,-65,46,46,46,46,46,-33,]),'PRINT_LN':([16,],[31,]),'FLOAT64':([18,28,32,46,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,109,113,138,141,145,147,],[35,35,35,35,35,35,35,35,35,-57,-58,-59,-60,-61,-68,-69,-70,-71,-72,35,35,-64,-65,35,35,35,35,35,-33,]),'COMPLEX64':([18,28,32,46,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,109,113,138,141,145,147,],[36,36,36,36,36,36,36,36,36,-57,-58,-59,-60,-61,-68,-69,-70,-71,-72,36,36,-64,-65,36,36,36,36,36,-33,]),'INT':([18,28,32,46,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,109,113,138,141,145,147,],[37,37,37,37,37,37,37,37,37,-57,-58,-59,-60,-61,-68,-69,-70,-71,-72,37,37,-64,-65,37,37,37,37,37,-33,]),'BOOL':([18,28,32,46,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,109,113,138,141,145,147,],[38,59,38,38,38,38,38,38,38,-57,-58,-59,-60,-61,-68,-69,-70,-71,-72,38,59,-64,-65,38,38,38,38,38,-33,]),'STRING':([18,28,32,46,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,109,113,138,141,145,147,],[39,39,39,39,39,39,39,39,39,-57,-58,-59,-60,-61,-68,-69,-70,-71,-72,39,39,-64,-65,39,39,39,39,39,-33,]),'MAP':([18,28,32,46,50,51,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,109,113,138,141,145,147,],[47,47,47,47,47,47,47,47,47,-57,-58,-59,-60,-61,-68,-69,-70,-71,-72,47,47,-64,-65,47,47,47,47,47,-33,]),'COMMA':([19,20,21,22,23,33,35,36,37,38,39,40,41,42,43,44,45,59,64,65,89,96,104,105,106,108,133,136,139,143,146,],[-37,-38,-39,-40,-41,-51,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-67,100,101,113,-11,-55,-66,-54,-63,-56,-12,-29,-30,147,]),'RPAREN':([19,20,21,22,23,30,33,35,36,37,38,39,40,41,42,43,44,45,59,62,64,65,66,89,96,100,101,102,104,105,106,108,125,128,133,136,139,143,],[-37,-38,-39,-40,-41,63,-51,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-67,98,-7,-8,103,-42,-11,-9,-10,124,-55,-66,-54,-63,133,-43,-56,-12,-29,-30,]),'RBRACKET':([19,20,21,22,23,110,],[-37,-38,-39,-40,-41,126,]),'DEFAULT':([26,27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,55,59,67,87,90,104,105,106,108,115,116,118,119,120,127,133,139,143,],[53,-19,-51,-35,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,53,-25,-20,-67,-34,-26,-36,-55,-66,-54,-63,-14,-15,-21,-22,53,-27,-56,-29,-30,]),'RBRACE':([26,27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,52,54,55,59,67,86,87,90,104,105,106,108,114,115,116,118,119,120,123,127,129,131,133,138,139,140,141,143,144,147,],[-73,-19,-51,-35,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-73,-25,91,-24,-20,-67,-34,111,-26,-36,-55,-66,-54,-63,-23,-14,-15,-21,-22,-73,132,-27,135,137,-56,139,-29,143,-31,-30,-32,-33,]),'PLUS':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,70,-44,-45,-46,-47,-48,-49,-50,-52,70,-62,-28,-50,-51,70,-47,70,70,70,70,70,70,-49,70,-50,70,-56,-29,70,-30,70,]),'MINUS':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,71,-44,-45,-46,-47,-48,-49,-50,-52,71,-62,-28,-50,-51,71,-47,71,71,71,71,71,71,-49,71,-50,71,-56,-29,71,-30,71,]),'TIMES':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,72,-44,-45,-46,-47,-48,-49,-50,-52,72,-62,-28,-50,-51,72,-47,72,72,72,72,72,72,-49,72,-50,72,-56,-29,72,-30,72,]),'DIVIDE':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,73,-44,-45,-46,-47,-48,-49,-50,-52,73,-62,-28,-50,-51,73,-47,73,73,73,73,73,73,-49,73,-50,73,-56,-29,73,-30,73,]),'MOD':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,74,-44,-45,-46,-47,-48,-49,-50,-52,74,-62,-28,-50,-51,74,-47,74,74,74,74,74,74,-49,74,-50,74,-56,-29,74,-30,74,]),'NOT_EQUAL':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,75,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-50,-51,75,-47,75,75,75,75,75,75,-49,75,-50,75,-56,-29,75,-30,75,]),'LESS_THAN':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,76,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-50,-51,76,-47,76,76,76,76,76,76,-49,76,-50,76,-56,-29,76,-30,76,]),'LESS_EQUAL':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,77,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-50,-51,77,-47,77,77,77,77,77,77,-49,77,-50,77,-56,-29,77,-30,77,]),'GREATER_THAN':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,78,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-50,-51,78,-47,78,78,78,78,78,78,-49,78,-50,78,-56,-29,78,-30,78,]),'GREATER_EQUAL':([33,34,35,36,37,38,39,40,41,42,43,44,45,56,57,58,59,67,84,89,90,104,105,106,107,108,125,133,139,142,143,146,],[-51,79,-44,-45,-46,-47,-48,-49,-50,-52,-53,-62,-28,-50,-51,79,-47,79,79,79,79,79,79,-49,79,-50,79,-56,-29,79,-30,79,]),'AND':([33,35,36,37,38,39,40,41,42,43,44,45,59,104,105,106,108,133,139,143,],[-51,-44,-45,-46,-47,-48,-49,-50,-52,-53,82,-28,-67,-55,-66,-54,-63,-56,-29,-30,]),'OR':([33,35,36,37,38,39,40,41,42,43,44,45,59,104,105,106,108,133,139,143,],[-51,-44,-45,-46,-47,-48,-49,-50,-52,-53,83,-28,-67,-55,-66,-54,-63,-56,-29,-30,]),'LBRACKET':([47,],[85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,],[1,]),'asignacion':([0,92,93,94,99,112,122,],[2,116,116,116,116,116,116,]),'sentenciaSwitch':([0,],[3,]),'funcion':([0,],[4,]),'imprimir':([0,],[5,]),'funcionSinArg':([0,],[6,]),'asignacionCorta':([8,92,93,94,99,112,122,],[14,115,115,115,115,115,115,]),'tipoDato':([11,61,85,126,130,],[17,96,110,134,136,]),'bloqueCasosBooleanos':([13,27,],[26,55,]),'casoBooleano':([13,27,],[27,27,]),'valor':([18,28,32,46,50,51,66,68,69,80,81,109,113,138,141,145,],[34,58,67,84,89,90,89,104,105,107,58,125,89,142,142,146,]),'expresionesAritmeticas':([18,28,32,46,50,51,66,68,69,80,81,109,113,138,141,145,],[40,40,40,40,40,40,40,40,40,106,40,40,40,40,40,40,]),'condiciones':([18,28,32,46,50,51,66,68,69,80,81,109,113,138,141,145,],[41,56,41,41,41,41,41,41,41,41,108,41,41,41,41,41,]),'estructurasDeDatos':([18,28,32,46,50,51,66,68,69,80,81,109,113,138,141,145,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'expresionAritmetica':([18,28,32,46,50,51,66,68,69,80,81,109,113,138,141,145,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'condicion':([18,28,32,46,50,51,66,68,69,80,81,109,113,138,141,145,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'mapa':([18,28,32,46,50,51,66,68,69,80,81,109,113,138,141,145,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'bloqueCasosSwitch':([24,49,95,],[48,87,120,]),'casoSwitch':([24,49,95,],[49,49,49,]),'casoDefault':([26,48,120,],[52,86,129,]),'empty':([26,48,120,],[54,54,54,]),'argumentos':([30,],[62,]),'argumento':([30,],[64,]),'argumentoVariadico':([30,],[65,]),'operador':([34,43,58,67,84,89,90,104,105,107,125,142,146,],[68,80,68,68,109,68,68,68,68,68,68,68,68,]),'operadorComp':([34,58,67,84,89,90,104,105,107,125,142,146,],[69,69,69,69,69,69,69,69,69,69,69,69,]),'conector':([44,],[81,]),'valores':([50,66,113,],[88,102,128,]),'subcodigo':([92,93,94,99,112,122,],[114,118,119,123,127,131,]),'elementosMapa':([138,141,],[140,144,]),'elementoMapa':([138,141,],[141,141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> asignacion','codigo',1,'p_codigo','parserGo.py',6),
  ('codigo -> sentenciaSwitch','codigo',1,'p_codigo','parserGo.py',7),
  ('codigo -> funcion','codigo',1,'p_codigo','parserGo.py',8),
  ('codigo -> imprimir','codigo',1,'p_codigo','parserGo.py',9),
  ('codigo -> funcionSinArg','codigo',1,'p_codigo','parserGo.py',10),
  ('funcion -> FUNC ID LPAREN argumentos RPAREN LBRACE subcodigo RBRACE','funcion',8,'p_funcion','parserGo.py',14),
  ('argumentos -> argumento','argumentos',1,'p_argumentos','parserGo.py',17),
  ('argumentos -> argumentoVariadico','argumentos',1,'p_argumentos','parserGo.py',18),
  ('argumentos -> argumento COMMA','argumentos',2,'p_argumentos','parserGo.py',19),
  ('argumentos -> argumentoVariadico COMMA','argumentos',2,'p_argumentos','parserGo.py',20),
  ('argumento -> ID tipoDato','argumento',2,'p_argumento','parserGo.py',23),
  ('argumentoVariadico -> ID PUNTO PUNTO PUNTO tipoDato','argumentoVariadico',5,'p_argumentoVariadico','parserGo.py',26),
  ('funcionSinArg -> FUNC ID LPAREN RPAREN LBRACE subcodigo RBRACE','funcionSinArg',7,'p_funcionSinArg','parserGo.py',30),
  ('subcodigo -> asignacionCorta','subcodigo',1,'p_subcodigo','parserGo.py',34),
  ('subcodigo -> asignacion','subcodigo',1,'p_subcodigo','parserGo.py',35),
  ('sentenciaSwitch -> SWITCH ID LBRACE bloqueCasosSwitch casoDefault RBRACE','sentenciaSwitch',6,'p_sentenciaSwitchClasica','parserGo.py',38),
  ('sentenciaSwitch -> SWITCH asignacionCorta SEMICOLON ID LBRACE bloqueCasosSwitch casoDefault RBRACE','sentenciaSwitch',8,'p_switchConDefinicionDeVariable','parserGo.py',41),
  ('sentenciaSwitch -> SWITCH LBRACE bloqueCasosBooleanos casoDefault RBRACE','sentenciaSwitch',5,'p_switchNoCondicion','parserGo.py',44),
  ('bloqueCasosBooleanos -> casoBooleano','bloqueCasosBooleanos',1,'p_bloqueCasosBooleanos','parserGo.py',47),
  ('bloqueCasosBooleanos -> casoBooleano bloqueCasosBooleanos','bloqueCasosBooleanos',2,'p_bloqueCasosBooleanos','parserGo.py',48),
  ('casoBooleano -> CASE condiciones DOSPUNTOS subcodigo','casoBooleano',4,'p_casoBooleano','parserGo.py',51),
  ('casoBooleano -> CASE ID DOSPUNTOS subcodigo','casoBooleano',4,'p_casoBooleano','parserGo.py',52),
  ('casoDefault -> DEFAULT DOSPUNTOS subcodigo','casoDefault',3,'p_casoDefault','parserGo.py',55),
  ('casoDefault -> empty','casoDefault',1,'p_casoDefault','parserGo.py',56),
  ('bloqueCasosSwitch -> casoSwitch','bloqueCasosSwitch',1,'p_bloqueCasosSwitch','parserGo.py',59),
  ('bloqueCasosSwitch -> casoSwitch bloqueCasosSwitch','bloqueCasosSwitch',2,'p_bloqueCasosSwitch','parserGo.py',60),
  ('casoSwitch -> CASE valores DOSPUNTOS subcodigo','casoSwitch',4,'p_casoSwitch','parserGo.py',63),
  ('estructurasDeDatos -> mapa','estructurasDeDatos',1,'p_estructurasDeDatos','parserGo.py',68),
  ('mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE RBRACE','mapa',7,'p_definicionMapaVacio','parserGo.py',71),
  ('mapa -> MAP LBRACKET tipoDato RBRACKET tipoDato LBRACE elementosMapa RBRACE','mapa',8,'p_definicionMapaValores','parserGo.py',74),
  ('elementosMapa -> elementoMapa','elementosMapa',1,'p_elementosMapa','parserGo.py',77),
  ('elementosMapa -> elementoMapa elementosMapa','elementosMapa',2,'p_elementosMapa','parserGo.py',78),
  ('elementoMapa -> valor DOSPUNTOS valor COMMA','elementoMapa',4,'p_elementoMapa','parserGo.py',81),
  ('asignacion -> VAR ID tipoDato ASSIGN valor','asignacion',5,'p_asignacionTipo','parserGo.py',85),
  ('asignacion -> VAR ID ASSIGN valor','asignacion',4,'p_asignacionInferencia','parserGo.py',88),
  ('asignacionCorta -> ID DOSPUNTOS ASSIGN valor','asignacionCorta',4,'p_asignacionCorta','parserGo.py',91),
  ('tipoDato -> FLOAT64_TYPE','tipoDato',1,'p_tipoDato','parserGo.py',94),
  ('tipoDato -> COMPLEX64_TYPE','tipoDato',1,'p_tipoDato','parserGo.py',95),
  ('tipoDato -> INT_TYPE','tipoDato',1,'p_tipoDato','parserGo.py',96),
  ('tipoDato -> BOOL_TYPE','tipoDato',1,'p_tipoDato','parserGo.py',97),
  ('tipoDato -> STRING_TYPE','tipoDato',1,'p_tipoDato','parserGo.py',98),
  ('valores -> valor','valores',1,'p_valores','parserGo.py',101),
  ('valores -> valor COMMA valores','valores',3,'p_valores','parserGo.py',102),
  ('valor -> FLOAT64','valor',1,'p_valor','parserGo.py',105),
  ('valor -> COMPLEX64','valor',1,'p_valor','parserGo.py',106),
  ('valor -> INT','valor',1,'p_valor','parserGo.py',107),
  ('valor -> BOOL','valor',1,'p_valor','parserGo.py',108),
  ('valor -> STRING','valor',1,'p_valor','parserGo.py',109),
  ('valor -> expresionesAritmeticas','valor',1,'p_valor','parserGo.py',110),
  ('valor -> condiciones','valor',1,'p_valor','parserGo.py',111),
  ('valor -> ID','valor',1,'p_valor','parserGo.py',112),
  ('valor -> estructurasDeDatos','valor',1,'p_valor','parserGo.py',113),
  ('expresionesAritmeticas -> expresionAritmetica','expresionesAritmeticas',1,'p_expresionesAritmeticas','parserGo.py',117),
  ('expresionesAritmeticas -> expresionAritmetica operador expresionesAritmeticas','expresionesAritmeticas',3,'p_expresionesAritmeticas','parserGo.py',118),
  ('expresionAritmetica -> valor operador valor','expresionAritmetica',3,'p_expresionAritmetica','parserGo.py',121),
  ('expresionAritmetica -> LPAREN valor operador valor RPAREN','expresionAritmetica',5,'p_expresionAritmetica','parserGo.py',122),
  ('operador -> PLUS','operador',1,'p_operador','parserGo.py',125),
  ('operador -> MINUS','operador',1,'p_operador','parserGo.py',126),
  ('operador -> TIMES','operador',1,'p_operador','parserGo.py',127),
  ('operador -> DIVIDE','operador',1,'p_operador','parserGo.py',128),
  ('operador -> MOD','operador',1,'p_operador','parserGo.py',129),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','parserGo.py',133),
  ('condiciones -> condicion conector condiciones','condiciones',3,'p_condiciones','parserGo.py',134),
  ('conector -> AND','conector',1,'p_conector','parserGo.py',137),
  ('conector -> OR','conector',1,'p_conector','parserGo.py',138),
  ('condicion -> valor operadorComp valor','condicion',3,'p_condicion','parserGo.py',141),
  ('condicion -> BOOL','condicion',1,'p_condicion','parserGo.py',142),
  ('operadorComp -> NOT_EQUAL','operadorComp',1,'p_operadorComparacion','parserGo.py',145),
  ('operadorComp -> LESS_THAN','operadorComp',1,'p_operadorComparacion','parserGo.py',146),
  ('operadorComp -> LESS_EQUAL','operadorComp',1,'p_operadorComparacion','parserGo.py',147),
  ('operadorComp -> GREATER_THAN','operadorComp',1,'p_operadorComparacion','parserGo.py',148),
  ('operadorComp -> GREATER_EQUAL','operadorComp',1,'p_operadorComparacion','parserGo.py',149),
  ('empty -> <empty>','empty',0,'p_empty','parserGo.py',152),
  ('imprimir -> FMT PUNTO PRINT_LN LPAREN valores RPAREN','imprimir',6,'p_imprimir','parserGo.py',157),
  ('imprimir -> FMT PUNTO PRINT_LN LPAREN RPAREN','imprimir',5,'p_imprimir','parserGo.py',158),
]
